2017-04-19 15:41:10,505 INFO  [qtp648972298-20] action.Login (Login.java:17) - VALIDATE admin admin
2017-04-19 15:44:56,035 INFO  [Scanner-0] config.ConfigurationManager (ConfigurationManager.java:213) - Detected container provider [Struts XML configuration provider (struts.xml)] needs to be reloaded. Reloading all providers.
2017-04-19 15:45:16,208 INFO  [Scanner-0] config.ConfigurationManager (ConfigurationManager.java:213) - Detected container provider [Struts XML configuration provider (struts.xml)] needs to be reloaded. Reloading all providers.
2017-04-19 15:47:36,820 INFO  [Scanner-0] config.ConfigurationManager (ConfigurationManager.java:213) - Detected container provider [Struts XML configuration provider (struts.xml)] needs to be reloaded. Reloading all providers.
2017-04-19 15:48:07,119 INFO  [Scanner-0] config.ConfigurationManager (ConfigurationManager.java:213) - Detected container provider [Struts XML configuration provider (struts.xml)] needs to be reloaded. Reloading all providers.
2017-04-19 15:48:15,371 ERROR [Scanner-0] dispatcher.Dispatcher (Dispatcher.java:498) - Dispatcher initialization failed
com.opensymphony.xwork2.config.ConfigurationException: Unable to load configuration.
	at com.opensymphony.xwork2.config.ConfigurationManager.getConfiguration(ConfigurationManager.java:70) ~[struts2-core-2.5.8.jar:2.5.8]
	at org.apache.struts2.dispatcher.Dispatcher.getContainer(Dispatcher.java:906) ~[struts2-core-2.5.8.jar:2.5.8]
	at org.apache.struts2.dispatcher.Dispatcher.init_PreloadConfiguration(Dispatcher.java:445) ~[struts2-core-2.5.8.jar:2.5.8]
	at org.apache.struts2.dispatcher.Dispatcher.init(Dispatcher.java:486) [struts2-core-2.5.8.jar:2.5.8]
	at org.apache.struts2.dispatcher.InitOperations.initDispatcher(InitOperations.java:75) [struts2-core-2.5.8.jar:2.5.8]
	at org.apache.struts2.dispatcher.filter.StrutsPrepareAndExecuteFilter.init(StrutsPrepareAndExecuteFilter.java:63) [struts2-core-2.5.8.jar:2.5.8]
	at org.eclipse.jetty.servlet.FilterHolder.doStart(FilterHolder.java:118) [jetty-servlet-8.1.16.v20140903.jar:8.1.16.v20140903]
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64) [jetty-util-8.1.16.v20140903.jar:8.1.16.v20140903]
	at org.eclipse.jetty.servlet.ServletHandler.initialize(ServletHandler.java:768) [jetty-servlet-8.1.16.v20140903.jar:8.1.16.v20140903]
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:265) [jetty-servlet-8.1.16.v20140903.jar:8.1.16.v20140903]
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1242) [jetty-webapp-8.1.16.v20140903.jar:8.1.16.v20140903]
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:717) [jetty-server-8.1.16.v20140903.jar:8.1.16.v20140903]
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:494) [jetty-webapp-8.1.16.v20140903.jar:8.1.16.v20140903]
	at org.mortbay.jetty.plugin.JettyWebAppContext.doStart(JettyWebAppContext.java:298) [jetty-maven-plugin-8.1.16.v20140903.jar:8.1.16.v20140903]
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64) [jetty-util-8.1.16.v20140903.jar:8.1.16.v20140903]
	at org.mortbay.jetty.plugin.JettyRunMojo.restartWebApp(JettyRunMojo.java:435) [jetty-maven-plugin-8.1.16.v20140903.jar:8.1.16.v20140903]
	at org.mortbay.jetty.plugin.JettyRunMojo$1.filesChanged(JettyRunMojo.java:394) [jetty-maven-plugin-8.1.16.v20140903.jar:8.1.16.v20140903]
	at org.eclipse.jetty.util.Scanner.reportBulkChanges(Scanner.java:691) [jetty-util-8.1.16.v20140903.jar:8.1.16.v20140903]
	at org.eclipse.jetty.util.Scanner.reportDifferences(Scanner.java:551) [jetty-util-8.1.16.v20140903.jar:8.1.16.v20140903]
	at org.eclipse.jetty.util.Scanner.scan(Scanner.java:403) [jetty-util-8.1.16.v20140903.jar:8.1.16.v20140903]
	at org.eclipse.jetty.util.Scanner$1.run(Scanner.java:353) [jetty-util-8.1.16.v20140903.jar:8.1.16.v20140903]
	at java.util.TimerThread.mainLoop(Timer.java:555) [?:1.8.0_111]
	at java.util.TimerThread.run(Timer.java:505) [?:1.8.0_111]
Caused by: com.opensymphony.xwork2.config.ConfigurationException: Action class [com.example.struts2.action.Login] not found
	at com.opensymphony.xwork2.config.providers.XmlConfigurationProvider.verifyAction(XmlConfigurationProvider.java:505) ~[struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.config.providers.XmlConfigurationProvider.addAction(XmlConfigurationProvider.java:454) ~[struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.config.providers.XmlConfigurationProvider.addPackage(XmlConfigurationProvider.java:569) ~[struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.config.providers.XmlConfigurationProvider.loadPackages(XmlConfigurationProvider.java:323) ~[struts2-core-2.5.8.jar:2.5.8]
	at org.apache.struts2.config.StrutsXmlConfigurationProvider.loadPackages(StrutsXmlConfigurationProvider.java:108) ~[struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.config.impl.DefaultConfiguration.reloadContainer(DefaultConfiguration.java:189) ~[struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.config.ConfigurationManager.getConfiguration(ConfigurationManager.java:67) ~[struts2-core-2.5.8.jar:2.5.8]
	... 22 more
2017-04-19 15:57:12,525 INFO  [Scanner-0] config.ConfigurationManager (ConfigurationManager.java:213) - Detected container provider [Struts XML configuration provider (struts.xml)] needs to be reloaded. Reloading all providers.
2017-04-19 18:17:03,528 DEBUG [main] internal.CoreLogging (CoreLogging.java:28) - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2017-04-19 18:17:03,584 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2017-04-19 18:17:03,591 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2017-04-19 18:17:03,603 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2017-04-19 18:17:04,230 INFO  [main] hibernate.Version (Version.java:45) - HHH000412: Hibernate Core {5.2.9.Final}
2017-04-19 18:17:04,239 INFO  [main] cfg.Environment (Environment.java:213) - HHH000206: hibernate.properties not found
2017-04-19 18:17:04,319 DEBUG [main] internal.JaxbCfgProcessor (JaxbCfgProcessor.java:116) - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2017-04-19 18:23:36,021 DEBUG [main] internal.CoreLogging (CoreLogging.java:28) - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2017-04-19 18:23:36,086 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2017-04-19 18:23:36,103 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2017-04-19 18:23:36,119 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2017-04-19 18:23:36,904 INFO  [main] hibernate.Version (Version.java:45) - HHH000412: Hibernate Core {5.2.9.Final}
2017-04-19 18:23:36,910 INFO  [main] cfg.Environment (Environment.java:213) - HHH000206: hibernate.properties not found
2017-04-19 18:23:37,033 DEBUG [main] internal.JaxbCfgProcessor (JaxbCfgProcessor.java:116) - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2017-04-19 18:30:01,530 DEBUG [main] internal.CoreLogging (CoreLogging.java:28) - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2017-04-19 18:30:01,711 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2017-04-19 18:30:01,718 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2017-04-19 18:30:01,736 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2017-04-19 18:30:02,254 INFO  [main] hibernate.Version (Version.java:45) - HHH000412: Hibernate Core {5.2.9.Final}
2017-04-19 18:30:02,267 INFO  [main] cfg.Environment (Environment.java:213) - HHH000206: hibernate.properties not found
2017-04-19 18:30:02,358 DEBUG [main] internal.JaxbCfgProcessor (JaxbCfgProcessor.java:116) - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2017-04-19 18:36:15,174 DEBUG [Scanner-0] internal.CoreLogging (CoreLogging.java:28) - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2017-04-19 18:36:15,238 DEBUG [Scanner-0] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2017-04-19 18:36:15,252 DEBUG [Scanner-0] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2017-04-19 18:36:15,268 DEBUG [Scanner-0] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2017-04-19 18:36:15,542 INFO  [Scanner-0] hibernate.Version (Version.java:45) - HHH000412: Hibernate Core {5.2.9.Final}
2017-04-19 18:36:15,552 INFO  [Scanner-0] cfg.Environment (Environment.java:213) - HHH000206: hibernate.properties not found
2017-04-19 18:36:15,619 DEBUG [Scanner-0] internal.JaxbCfgProcessor (JaxbCfgProcessor.java:116) - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2017-04-19 18:51:50,263 DEBUG [main] internal.CoreLogging (CoreLogging.java:28) - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2017-04-19 18:51:50,331 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2017-04-19 18:51:50,339 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2017-04-19 18:51:50,357 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2017-04-19 18:51:51,449 INFO  [main] hibernate.Version (Version.java:45) - HHH000412: Hibernate Core {5.2.9.Final}
2017-04-19 18:51:51,455 INFO  [main] cfg.Environment (Environment.java:213) - HHH000206: hibernate.properties not found
2017-04-19 18:51:51,602 DEBUG [main] internal.JaxbCfgProcessor (JaxbCfgProcessor.java:116) - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2017-04-19 18:54:48,958 DEBUG [main] internal.CoreLogging (CoreLogging.java:28) - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2017-04-19 18:54:49,099 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2017-04-19 18:54:49,118 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2017-04-19 18:54:49,198 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2017-04-19 18:54:50,151 INFO  [main] hibernate.Version (Version.java:45) - HHH000412: Hibernate Core {5.2.9.Final}
2017-04-19 18:54:50,159 INFO  [main] cfg.Environment (Environment.java:213) - HHH000206: hibernate.properties not found
2017-04-19 18:54:50,359 DEBUG [main] internal.JaxbCfgProcessor (JaxbCfgProcessor.java:116) - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2017-04-19 19:02:08,196 DEBUG [main] internal.CoreLogging (CoreLogging.java:28) - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2017-04-19 19:02:08,265 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2017-04-19 19:02:08,271 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2017-04-19 19:02:08,287 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2017-04-19 19:02:08,887 INFO  [main] hibernate.Version (Version.java:45) - HHH000412: Hibernate Core {5.2.9.Final}
2017-04-19 19:02:08,896 INFO  [main] cfg.Environment (Environment.java:213) - HHH000206: hibernate.properties not found
2017-04-19 19:02:08,973 DEBUG [main] internal.JaxbCfgProcessor (JaxbCfgProcessor.java:116) - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2017-04-19 19:06:40,756 DEBUG [main] internal.CoreLogging (CoreLogging.java:28) - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2017-04-19 19:06:40,998 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2017-04-19 19:06:41,007 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2017-04-19 19:06:41,065 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2017-04-19 19:06:41,669 INFO  [main] hibernate.Version (Version.java:45) - HHH000412: Hibernate Core {5.2.9.Final}
2017-04-19 19:06:41,680 INFO  [main] cfg.Environment (Environment.java:213) - HHH000206: hibernate.properties not found
2017-04-19 19:06:41,880 DEBUG [main] internal.JaxbCfgProcessor (JaxbCfgProcessor.java:116) - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2017-04-19 19:07:22,496 INFO  [qtp557342904-19] action.Login (Login.java:23) - VALIDATE admin admin
2017-04-19 19:18:16,576 DEBUG [main] internal.CoreLogging (CoreLogging.java:28) - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2017-04-19 19:18:16,623 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2017-04-19 19:18:16,628 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2017-04-19 19:18:16,637 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2017-04-19 19:18:16,893 INFO  [main] hibernate.Version (Version.java:45) - HHH000412: Hibernate Core {5.2.9.Final}
2017-04-19 19:18:16,899 INFO  [main] cfg.Environment (Environment.java:213) - HHH000206: hibernate.properties not found
2017-04-19 19:18:16,977 DEBUG [main] internal.JaxbCfgProcessor (JaxbCfgProcessor.java:116) - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2017-04-19 19:19:54,546 INFO  [qtp1185502159-17] action.Login (Login.java:23) - VALIDATE admin admin
2017-04-19 19:25:48,462 DEBUG [main] internal.CoreLogging (CoreLogging.java:28) - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2017-04-19 19:25:48,530 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2017-04-19 19:25:48,535 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2017-04-19 19:25:48,544 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2017-04-19 19:25:49,120 INFO  [main] hibernate.Version (Version.java:45) - HHH000412: Hibernate Core {5.2.9.Final}
2017-04-19 19:25:49,127 INFO  [main] cfg.Environment (Environment.java:213) - HHH000206: hibernate.properties not found
2017-04-19 19:25:49,214 DEBUG [main] internal.JaxbCfgProcessor (JaxbCfgProcessor.java:116) - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2017-04-19 19:25:51,158 DEBUG [main] cfg.Configuration (Configuration.java:724) - Building session factory using internal StandardServiceRegistryBuilder
2017-04-19 19:25:51,176 DEBUG [main] spi.ServiceBinding (ServiceBinding.java:68) - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2017-04-19 19:25:51,177 DEBUG [main] cfg.Configuration (Configuration.java:652) - Building session factory using provided StandardServiceRegistry
2017-04-19 19:25:51,233 DEBUG [main] internal.RegionFactoryInitiator (RegionFactoryInitiator.java:75) - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2017-04-19 19:25:51,264 INFO  [main] java.JavaReflectionManager (JavaReflectionManager.java:66) - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2017-04-19 19:25:51,334 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@11eed657
2017-04-19 19:25:51,336 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@11eed657
2017-04-19 19:25:51,343 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@11eed657
2017-04-19 19:25:51,362 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@65eb76cd
2017-04-19 19:25:51,370 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6c1cfa53
2017-04-19 19:25:51,379 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration yes_no -> org.hibernate.type.YesNoType@61bcbcce
2017-04-19 19:25:51,401 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@33f2df51
2017-04-19 19:25:51,410 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@33f2df51
2017-04-19 19:25:51,414 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@33f2df51
2017-04-19 19:25:51,431 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration character -> org.hibernate.type.CharacterType@404eca05
2017-04-19 19:25:51,436 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration char -> org.hibernate.type.CharacterType@404eca05
2017-04-19 19:25:51,438 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@404eca05
2017-04-19 19:25:51,456 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@462e1e64
2017-04-19 19:25:51,461 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@462e1e64
2017-04-19 19:25:51,463 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@462e1e64
2017-04-19 19:25:51,475 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration integer -> org.hibernate.type.IntegerType@4667c4c1
2017-04-19 19:25:51,479 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration int -> org.hibernate.type.IntegerType@4667c4c1
2017-04-19 19:25:51,482 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4667c4c1
2017-04-19 19:25:51,490 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@2f0ed952
2017-04-19 19:25:51,493 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@2f0ed952
2017-04-19 19:25:51,496 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2f0ed952
2017-04-19 19:25:51,502 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@5a8816cc
2017-04-19 19:25:51,506 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@5a8816cc
2017-04-19 19:25:51,509 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5a8816cc
2017-04-19 19:25:51,518 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@e11ecfa
2017-04-19 19:25:51,522 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@e11ecfa
2017-04-19 19:25:51,525 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@e11ecfa
2017-04-19 19:25:51,540 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@38f77cd9
2017-04-19 19:25:51,550 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@38f77cd9
2017-04-19 19:25:51,555 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5984feef
2017-04-19 19:25:51,565 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5984feef
2017-04-19 19:25:51,579 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration string -> org.hibernate.type.StringType@204abeff
2017-04-19 19:25:51,584 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.String -> org.hibernate.type.StringType@204abeff
2017-04-19 19:25:51,596 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1391af3b
2017-04-19 19:25:51,600 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3a8d467e
2017-04-19 19:25:51,603 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration url -> org.hibernate.type.UrlType@135a8c6f
2017-04-19 19:25:51,612 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@135a8c6f
2017-04-19 19:25:51,647 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Duration -> org.hibernate.type.DurationType@2ae62bb6
2017-04-19 19:25:51,648 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@2ae62bb6
2017-04-19 19:25:51,772 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Instant -> org.hibernate.type.InstantType@28ee7bee
2017-04-19 19:25:51,777 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@28ee7bee
2017-04-19 19:25:51,782 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4462efe1
2017-04-19 19:25:51,783 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4462efe1
2017-04-19 19:25:51,790 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6fc1020a
2017-04-19 19:25:51,794 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6fc1020a
2017-04-19 19:25:51,799 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7dffda8b
2017-04-19 19:25:51,801 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7dffda8b
2017-04-19 19:25:51,813 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6ca8fcf3
2017-04-19 19:25:51,814 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6ca8fcf3
2017-04-19 19:25:51,818 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@6801b414
2017-04-19 19:25:51,819 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@6801b414
2017-04-19 19:25:51,838 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@436bd4df
2017-04-19 19:25:51,840 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@436bd4df
2017-04-19 19:25:51,848 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration date -> org.hibernate.type.DateType@7be1ce6a
2017-04-19 19:25:51,849 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7be1ce6a
2017-04-19 19:25:51,854 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration time -> org.hibernate.type.TimeType@17ba57f0
2017-04-19 19:25:51,855 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@17ba57f0
2017-04-19 19:25:51,859 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration timestamp -> org.hibernate.type.TimestampType@7d70638
2017-04-19 19:25:51,860 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7d70638
2017-04-19 19:25:51,861 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7d70638
2017-04-19 19:25:51,867 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@30c4e352
2017-04-19 19:25:51,871 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration calendar -> org.hibernate.type.CalendarType@290e8cab
2017-04-19 19:25:51,872 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@290e8cab
2017-04-19 19:25:51,872 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@290e8cab
2017-04-19 19:25:51,875 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@341b13a8
2017-04-19 19:25:51,878 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration locale -> org.hibernate.type.LocaleType@37854b34
2017-04-19 19:25:51,879 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@37854b34
2017-04-19 19:25:51,882 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration currency -> org.hibernate.type.CurrencyType@7ff19c33
2017-04-19 19:25:51,883 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7ff19c33
2017-04-19 19:25:51,886 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@7a4d582c
2017-04-19 19:25:51,887 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7a4d582c
2017-04-19 19:25:51,889 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration class -> org.hibernate.type.ClassType@4d1ff6b1
2017-04-19 19:25:51,891 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4d1ff6b1
2017-04-19 19:25:51,898 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4fdca00a
2017-04-19 19:25:51,899 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4fdca00a
2017-04-19 19:25:51,901 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3bed3315
2017-04-19 19:25:51,905 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration binary -> org.hibernate.type.BinaryType@55651434
2017-04-19 19:25:51,906 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte[] -> org.hibernate.type.BinaryType@55651434
2017-04-19 19:25:51,906 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [B -> org.hibernate.type.BinaryType@55651434
2017-04-19 19:25:51,910 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@37ad042b
2017-04-19 19:25:51,911 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@37ad042b
2017-04-19 19:25:51,911 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@37ad042b
2017-04-19 19:25:51,915 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration row_version -> org.hibernate.type.RowVersionType@470d183
2017-04-19 19:25:51,917 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration image -> org.hibernate.type.ImageType@3ddeaa5f
2017-04-19 19:25:51,921 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration characters -> org.hibernate.type.CharArrayType@3bec5821
2017-04-19 19:25:51,922 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration char[] -> org.hibernate.type.CharArrayType@3bec5821
2017-04-19 19:25:51,922 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [C -> org.hibernate.type.CharArrayType@3bec5821
2017-04-19 19:25:51,925 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@176555c
2017-04-19 19:25:51,926 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@176555c
2017-04-19 19:25:51,927 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@176555c
2017-04-19 19:25:51,929 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration text -> org.hibernate.type.TextType@97a145b
2017-04-19 19:25:51,933 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ntext -> org.hibernate.type.NTextType@526a9908
2017-04-19 19:25:51,943 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration blob -> org.hibernate.type.BlobType@766a49c7
2017-04-19 19:25:51,944 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@766a49c7
2017-04-19 19:25:51,945 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6bccd036
2017-04-19 19:25:51,959 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration clob -> org.hibernate.type.ClobType@1b2df3aa
2017-04-19 19:25:51,959 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1b2df3aa
2017-04-19 19:25:51,968 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration nclob -> org.hibernate.type.NClobType@443faa85
2017-04-19 19:25:51,969 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@443faa85
2017-04-19 19:25:51,970 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5dc0ff7d
2017-04-19 19:25:51,972 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@493ac8d3
2017-04-19 19:25:51,976 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration serializable -> org.hibernate.type.SerializableType@3003e580
2017-04-19 19:25:51,983 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration object -> org.hibernate.type.ObjectType@1d6d1d42
2017-04-19 19:25:51,984 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1d6d1d42
2017-04-19 19:25:51,986 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2f894ad9
2017-04-19 19:25:51,987 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5afbd567
2017-04-19 19:25:51,987 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6993c8df
2017-04-19 19:25:51,988 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@57545c3f
2017-04-19 19:25:51,988 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@326e0b8e
2017-04-19 19:25:51,989 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@36baa049
2017-04-19 19:25:51,990 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@41184371
2017-04-19 19:25:51,990 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@34585ac9
2017-04-19 19:25:52,018 WARN  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:70) - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2017-04-19 19:25:52,088 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:126) - HHH10001005: using driver [com.microsoft.sqlserver.jdbc.SQLServerDriver] at URL [jdbc:sqlserver://localhost:1433;database=strutsproject]
2017-04-19 19:25:52,091 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:132) - HHH10001001: Connection properties: {user=SA, password=SQLServ3r}
2017-04-19 19:25:52,093 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:140) - HHH10001003: Autocommit mode: false
2017-04-19 19:25:52,114 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:384) - Initializing Connection pool with 1 Connections
2017-04-19 19:25:52,116 INFO  [main] internal.PooledConnections (PooledConnections.java:41) - HHH000115: Hibernate connection pool size: 1 (min=1)
2017-04-19 19:25:52,824 DEBUG [main] internal.JdbcEnvironmentInitiator (JdbcEnvironmentInitiator.java:72) - Database ->
       name : Microsoft SQL Server
    version : 14.00.405
      major : 14
      minor : 0
2017-04-19 19:25:52,825 DEBUG [main] internal.JdbcEnvironmentInitiator (JdbcEnvironmentInitiator.java:83) - Driver ->
       name : Microsoft JDBC Driver 4.0 for SQL Server
    version : 4.0.2206.100
      major : 4
      minor : 0
2017-04-19 19:25:52,826 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:389) - JDBC version : 4.0
2017-04-19 19:25:52,907 INFO  [main] dialect.Dialect (Dialect.java:157) - HHH000400: Using dialect: org.hibernate.dialect.SQLServer2008Dialect
2017-04-19 19:25:57,058 DEBUG [main] spi.IdentifierHelperBuilder (IdentifierHelperBuilder.java:191) - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2017-04-19 19:25:57,793 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2017-04-19 19:25:57,798 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2017-04-19 19:25:57,802 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2017-04-19 19:25:57,804 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2017-04-19 19:25:57,810 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2017-04-19 19:25:57,815 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2017-04-19 19:25:57,819 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2017-04-19 19:25:57,824 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2017-04-19 19:25:57,830 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2017-04-19 19:25:57,835 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2017-04-19 19:25:57,839 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2017-04-19 19:25:57,843 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2017-04-19 19:25:57,846 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2017-04-19 19:25:57,851 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2017-04-19 19:25:57,923 DEBUG [main] relational.Namespace (Namespace.java:47) - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2017-04-19 19:25:57,995 DEBUG [main] cfg.AnnotationBinder (AnnotationBinder.java:511) - Binding entity from annotated class: com.example.struts2.model.Users
2017-04-19 19:25:58,072 DEBUG [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2017-04-19 19:25:58,091 DEBUG [main] annotations.EntityBinder (EntityBinder.java:419) - Import with entity name users
2017-04-19 19:25:58,118 DEBUG [main] annotations.EntityBinder (EntityBinder.java:695) - Bind entity com.example.struts2.model.Users on table users
2017-04-19 19:25:58,205 DEBUG [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
2017-04-19 19:25:58,218 DEBUG [main] annotations.PropertyBinder (PropertyBinder.java:174) - MetadataSourceProcessor property id with lazy=false
2017-04-19 19:25:58,227 DEBUG [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.example.struts2.model.Users:id]
2017-04-19 19:25:58,236 DEBUG [main] annotations.SimpleValueBinder (SimpleValueBinder.java:411) - building SimpleValue for id
2017-04-19 19:25:58,246 DEBUG [main] annotations.PropertyBinder (PropertyBinder.java:265) - Building property id
2017-04-19 19:25:58,258 DEBUG [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2017-04-19 19:25:58,262 DEBUG [main] annotations.PropertyBinder (PropertyBinder.java:174) - MetadataSourceProcessor property password with lazy=false
2017-04-19 19:25:58,265 DEBUG [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.example.struts2.model.Users:password]
2017-04-19 19:25:58,268 DEBUG [main] annotations.SimpleValueBinder (SimpleValueBinder.java:411) - building SimpleValue for password
2017-04-19 19:25:58,272 DEBUG [main] annotations.PropertyBinder (PropertyBinder.java:265) - Building property password
2017-04-19 19:25:58,280 DEBUG [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=false}
2017-04-19 19:25:58,282 DEBUG [main] annotations.PropertyBinder (PropertyBinder.java:174) - MetadataSourceProcessor property username with lazy=false
2017-04-19 19:25:58,284 DEBUG [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.example.struts2.model.Users:username]
2017-04-19 19:25:58,285 DEBUG [main] annotations.SimpleValueBinder (SimpleValueBinder.java:411) - building SimpleValue for username
2017-04-19 19:25:58,291 DEBUG [main] annotations.PropertyBinder (PropertyBinder.java:265) - Building property username
2017-04-19 19:25:58,298 DEBUG [main] annotations.SimpleValueBinder (SimpleValueBinder.java:456) - Starting fillSimpleValue for id
2017-04-19 19:25:58,302 DEBUG [main] annotations.SimpleValueBinder (SimpleValueBinder.java:456) - Starting fillSimpleValue for password
2017-04-19 19:25:58,305 DEBUG [main] annotations.SimpleValueBinder (SimpleValueBinder.java:456) - Starting fillSimpleValue for username
2017-04-19 19:25:58,313 DEBUG [main] mapping.PrimaryKey (PrimaryKey.java:35) - Forcing column [id] to be non-null as it is part of the primary key for table [users]
2017-04-19 19:25:58,410 DEBUG [main] internal.SessionFactoryImpl (SessionFactoryImpl.java:199) - Building session factory
2017-04-19 19:25:58,417 DEBUG [main] cfg.Settings (Settings.java:69) - SessionFactory name : null
2017-04-19 19:25:58,421 DEBUG [main] cfg.Settings (Settings.java:70) - Automatic flush during beforeCompletion(): enabled
2017-04-19 19:25:58,424 DEBUG [main] cfg.Settings (Settings.java:71) - Automatic session close at end of transaction: disabled
2017-04-19 19:25:58,427 DEBUG [main] cfg.Settings (Settings.java:73) - Statistics: disabled
2017-04-19 19:25:58,431 DEBUG [main] cfg.Settings (Settings.java:75) - Deleted entity synthetic identifier rollback: disabled
2017-04-19 19:25:58,432 DEBUG [main] cfg.Settings (Settings.java:76) - Default entity-mode: pojo
2017-04-19 19:25:58,432 DEBUG [main] cfg.Settings (Settings.java:77) - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2017-04-19 19:25:58,433 DEBUG [main] cfg.Settings (Settings.java:78) - Allow initialization of lazy state outside session : disabled
2017-04-19 19:25:58,437 DEBUG [main] cfg.Settings (Settings.java:80) - Using BatchFetchStyle : LEGACY
2017-04-19 19:25:58,438 DEBUG [main] cfg.Settings (Settings.java:81) - Default batch fetch size: -1
2017-04-19 19:25:58,439 DEBUG [main] cfg.Settings (Settings.java:82) - Maximum outer join fetch depth: null
2017-04-19 19:25:58,444 DEBUG [main] cfg.Settings (Settings.java:83) - Default null ordering: NONE
2017-04-19 19:25:58,444 DEBUG [main] cfg.Settings (Settings.java:84) - Order SQL updates by primary key: disabled
2017-04-19 19:25:58,445 DEBUG [main] cfg.Settings (Settings.java:85) - Order SQL inserts for batching: disabled
2017-04-19 19:25:58,445 DEBUG [main] cfg.Settings (Settings.java:87) - multi-tenancy strategy : NONE
2017-04-19 19:25:58,449 DEBUG [main] cfg.Settings (Settings.java:89) - JTA Track by Thread: enabled
2017-04-19 19:25:58,451 DEBUG [main] cfg.Settings (Settings.java:91) - Query language substitutions: {}
2017-04-19 19:25:58,455 DEBUG [main] cfg.Settings (Settings.java:92) - JPA query language strict compliance: disabled
2017-04-19 19:25:58,458 DEBUG [main] cfg.Settings (Settings.java:93) - Named query checking : enabled
2017-04-19 19:25:58,460 DEBUG [main] cfg.Settings (Settings.java:95) - Second-level cache: enabled
2017-04-19 19:25:58,463 DEBUG [main] cfg.Settings (Settings.java:96) - Second-level query cache: disabled
2017-04-19 19:25:58,464 DEBUG [main] cfg.Settings (Settings.java:97) - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@6fe595dc
2017-04-19 19:25:58,467 DEBUG [main] cfg.Settings (Settings.java:98) - Second-level cache region prefix: null
2017-04-19 19:25:58,468 DEBUG [main] cfg.Settings (Settings.java:99) - Optimize second-level cache for minimal puts: disabled
2017-04-19 19:25:58,468 DEBUG [main] cfg.Settings (Settings.java:100) - Structured second-level cache entries: disabled
2017-04-19 19:25:58,469 DEBUG [main] cfg.Settings (Settings.java:101) - Second-level cache direct-reference entries: disabled
2017-04-19 19:25:58,469 DEBUG [main] cfg.Settings (Settings.java:102) - Automatic eviction of collection cache: disabled
2017-04-19 19:25:58,470 DEBUG [main] cfg.Settings (Settings.java:104) - JDBC batch size: 0
2017-04-19 19:25:58,470 DEBUG [main] cfg.Settings (Settings.java:105) - JDBC batch updates for versioned data: enabled
2017-04-19 19:25:58,471 DEBUG [main] cfg.Settings (Settings.java:106) - Scrollable result sets: enabled
2017-04-19 19:25:58,471 DEBUG [main] cfg.Settings (Settings.java:107) - Wrap result sets: disabled
2017-04-19 19:25:58,472 DEBUG [main] cfg.Settings (Settings.java:108) - JDBC3 getGeneratedKeys(): enabled
2017-04-19 19:25:58,472 DEBUG [main] cfg.Settings (Settings.java:109) - JDBC result set fetch size: null
2017-04-19 19:25:58,473 DEBUG [main] cfg.Settings (Settings.java:110) - Connection release mode: AFTER_TRANSACTION
2017-04-19 19:25:58,476 DEBUG [main] cfg.Settings (Settings.java:111) - Generate SQL with comments: disabled
2017-04-19 19:25:58,659 DEBUG [main] internal.SessionFactoryImpl (SessionFactoryImpl.java:254) - Session factory constructed with filter configurations : {}
2017-04-19 19:25:58,661 DEBUG [main] internal.SessionFactoryImpl (SessionFactoryImpl.java:255) - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.SQLServer2008Dialect, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, java.vendor.url=http://java.oracle.com/, user.timezone=Asia/Jakarta, os.name=Linux, java.vm.specification.version=1.8, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, maven.home=/usr/share/maven, sun.cpu.endian=little, user.home=/root, user.language=en, java.specification.vendor=Oracle Corporation, java.home=/usr/lib/jvm/java-8-openjdk-amd64/jre, file.separator=/, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, sun.boot.class.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/classes, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_111-8u111-b14-3-b14, user.name=root, path.separator=:, securerandom.source=file:/dev/./urandom, hibernate.connection.username=SA, os.version=4.8.0-kali2-amd64, java.endorsed.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/endorsed, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:sqlserver://localhost:1433;database=strutsproject, file.encoding=UTF-8, guice.disable.misplaced.annotation.check=true, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.microsoft.sqlserver.jdbc.SQLServerDriver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=/tmp, java.version=1.8.0_111, user.dir=/root/Source/java/struts/struts-project, os.arch=amd64, maven.multiModuleProjectDirectory=/root/Source/java/struts/struts-project, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@69f2cb04, java.library.path=/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.111-b14, classworlds.conf=/usr/share/maven/bin/m2.conf, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.pool_size=1, java.ext.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
2017-04-19 19:25:58,706 DEBUG [main] spi.JaccIntegrator (JaccIntegrator.java:80) - Skipping JACC integration as it was not enabled
2017-04-19 19:25:58,777 DEBUG [main] internal.SessionFactoryImpl (SessionFactoryImpl.java:294) - Instantiated session factory
2017-04-19 19:25:58,914 DEBUG [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [com.example.struts2.model.Users] is safe
2017-04-19 19:25:58,920 DEBUG [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.struts2.model.Users
2017-04-19 19:25:58,988 DEBUG [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [com.example.struts2.model.Users] is safe
2017-04-19 19:25:58,991 DEBUG [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.struts2.model.Users
2017-04-19 19:25:59,231 DEBUG [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3598) - Static SQL for entity: com.example.struts2.model.Users
2017-04-19 19:25:59,234 DEBUG [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3603) -  Version select: select id from users where id =?
2017-04-19 19:25:59,237 DEBUG [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3606) -  Snapshot select: select users_.id, users_.password as password2_0_, users_.username as username3_0_ from users users_ where users_.id=?
2017-04-19 19:25:59,241 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Insert 0: insert into users (password, username, id) values (?, ?, ?)
2017-04-19 19:25:59,244 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Update 0: update users set password=?, username=? where id=?
2017-04-19 19:25:59,245 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Delete 0: delete from users where id=?
2017-04-19 19:25:59,302 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@195113de]
2017-04-19 19:25:59,308 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-19 19:25:59,312 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-19 19:25:59,316 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-19 19:25:59,350 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-19 19:25:59,367 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-19 19:25:59,377 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [NONE]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-19 19:25:59,381 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@790d8fdd]
2017-04-19 19:25:59,384 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-19 19:25:59,386 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-19 19:25:59,391 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-19 19:25:59,394 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-19 19:25:59,402 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-19 19:25:59,403 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [READ]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-19 19:25:59,404 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3dbd7107]
2017-04-19 19:25:59,408 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-19 19:25:59,412 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-19 19:25:59,413 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-19 19:25:59,414 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-19 19:25:59,416 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-19 19:25:59,416 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [UPGRADE]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ with (updlock, rowlock) where users0_.id=?
2017-04-19 19:25:59,419 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f8a02cf]
2017-04-19 19:25:59,423 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-19 19:25:59,426 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-19 19:25:59,430 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-19 19:25:59,433 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-19 19:25:59,438 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-19 19:25:59,439 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [UPGRADE_NOWAIT]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ with (updlock, rowlock, nowait) where users0_.id=?
2017-04-19 19:25:59,440 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70b6db83]
2017-04-19 19:25:59,441 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-19 19:25:59,442 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-19 19:25:59,449 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-19 19:25:59,460 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-19 19:25:59,468 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-19 19:25:59,473 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [UPGRADE_SKIPLOCKED]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ with (updlock, rowlock, readpast) where users0_.id=?
2017-04-19 19:25:59,477 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@559af296]
2017-04-19 19:25:59,478 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-19 19:25:59,479 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-19 19:25:59,479 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-19 19:25:59,480 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-19 19:25:59,484 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-19 19:25:59,487 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [FORCE]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-19 19:25:59,491 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18709cb2]
2017-04-19 19:25:59,494 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-19 19:25:59,497 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-19 19:25:59,499 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-19 19:25:59,500 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-19 19:25:59,505 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-19 19:25:59,509 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [PESSIMISTIC_READ]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ with (holdlock, rowlock) where users0_.id=?
2017-04-19 19:25:59,516 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@89caf47]
2017-04-19 19:25:59,518 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-19 19:25:59,519 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-19 19:25:59,519 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-19 19:25:59,520 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-19 19:25:59,522 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-19 19:25:59,523 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [PESSIMISTIC_WRITE]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ with (updlock, rowlock) where users0_.id=?
2017-04-19 19:25:59,524 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b877a54]
2017-04-19 19:25:59,525 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-19 19:25:59,525 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-19 19:25:59,526 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-19 19:25:59,527 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-19 19:25:59,529 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-19 19:25:59,530 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [PESSIMISTIC_FORCE_INCREMENT]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-19 19:25:59,531 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b87760e]
2017-04-19 19:25:59,535 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-19 19:25:59,536 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-19 19:25:59,537 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-19 19:25:59,538 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-19 19:25:59,539 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-19 19:25:59,540 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [OPTIMISTIC]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-19 19:25:59,541 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b24ea2a]
2017-04-19 19:25:59,543 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-19 19:25:59,543 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-19 19:25:59,544 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-19 19:25:59,545 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-19 19:25:59,547 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-19 19:25:59,547 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [OPTIMISTIC_FORCE_INCREMENT]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-19 19:25:59,594 DEBUG [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_MERGE on entity com.example.struts2.model.Users: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-19 19:25:59,595 DEBUG [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_REFRESH on entity com.example.struts2.model.Users: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-19 19:25:59,673 DEBUG [main] spi.SchemaManagementToolCoordinator (SchemaManagementToolCoordinator.java:56) - No actions specified; doing nothing
2017-04-19 19:25:59,674 DEBUG [main] internal.JtaPlatformInitiator (JtaPlatformInitiator.java:42) - No JtaPlatform was specified, checking resolver
2017-04-19 19:25:59,676 DEBUG [main] internal.JtaPlatformResolverInitiator (JtaPlatformResolverInitiator.java:33) - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2017-04-19 19:25:59,695 DEBUG [main] internal.StandardJtaPlatformResolver (StandardJtaPlatformResolver.java:102) - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2017-04-19 19:25:59,700 DEBUG [main] spi.NamedQueryRepository (NamedQueryRepository.java:151) - Checking 0 named HQL queries
2017-04-19 19:25:59,701 DEBUG [main] spi.NamedQueryRepository (NamedQueryRepository.java:167) - Checking 0 named SQL queries
2017-04-19 19:25:59,708 DEBUG [main] internal.SessionFactoryRegistry (SessionFactoryRegistry.java:52) - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6dcab9d9
2017-04-19 19:25:59,714 DEBUG [main] internal.SessionFactoryRegistry (SessionFactoryRegistry.java:74) - Registering SessionFactory: 40eb5c1b-5e61-441f-9ae2-76008b166b4a (<unnamed>)
2017-04-19 19:25:59,715 DEBUG [main] internal.SessionFactoryRegistry (SessionFactoryRegistry.java:81) - Not binding SessionFactory to JNDI, no JNDI name configured
2017-04-19 19:26:22,115 INFO  [qtp1245439653-17] action.Login (Login.java:23) - VALIDATE admin admin
2017-04-19 19:26:22,391 DEBUG [qtp1245439653-17] internal.StatisticsInitiator (StatisticsInitiator.java:82) - Statistics initialized [enabled=false]
2017-04-19 19:26:22,422 DEBUG [qtp1245439653-17] internal.TransactionImpl (TransactionImpl.java:55) - begin
2017-04-19 19:26:22,443 DEBUG [qtp1245439653-17] internal.AbstractSaveEventListener (AbstractSaveEventListener.java:118) - Generated identifier: 0, using strategy: org.hibernate.id.Assigned
2017-04-19 19:26:22,501 DEBUG [qtp1245439653-17] internal.TransactionImpl (TransactionImpl.java:66) - committing
2017-04-19 19:26:22,514 DEBUG [qtp1245439653-17] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:132) - Processing flush-time cascades
2017-04-19 19:26:22,524 DEBUG [qtp1245439653-17] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:174) - Dirty checking collections
2017-04-19 19:26:22,533 DEBUG [qtp1245439653-17] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:106) - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2017-04-19 19:26:22,537 DEBUG [qtp1245439653-17] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:113) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2017-04-19 19:26:22,551 DEBUG [qtp1245439653-17] util.EntityPrinter (EntityPrinter.java:102) - Listing entities:
2017-04-19 19:26:22,557 DEBUG [qtp1245439653-17] util.EntityPrinter (EntityPrinter.java:109) - com.example.struts2.model.Users{password=admin, id=0, username=admin}
2017-04-19 19:26:22,598 DEBUG [qtp1245439653-17] spi.SqlStatementLogger (SqlStatementLogger.java:92) - insert into users (password, username, id) values (?, ?, ?)
2017-04-19 19:26:23,144 DEBUG [qtp1245439653-17] spi.SqlExceptionHelper (SqlExceptionHelper.java:124) - could not execute statement [n/a]
com.microsoft.sqlserver.jdbc.SQLServerException: Cannot insert explicit value for identity column in table 'users' when IDENTITY_INSERT is set to OFF.
	at com.microsoft.sqlserver.jdbc.SQLServerException.makeFromDatabaseError(SQLServerException.java:216) ~[sqljdbc4-4.0.jar:?]
	at com.microsoft.sqlserver.jdbc.SQLServerStatement.getNextResult(SQLServerStatement.java:1515) ~[sqljdbc4-4.0.jar:?]
	at com.microsoft.sqlserver.jdbc.SQLServerPreparedStatement.doExecutePreparedStatement(SQLServerPreparedStatement.java:404) ~[sqljdbc4-4.0.jar:?]
	at com.microsoft.sqlserver.jdbc.SQLServerPreparedStatement$PrepStmtExecCmd.doExecute(SQLServerPreparedStatement.java:350) ~[sqljdbc4-4.0.jar:?]
	at com.microsoft.sqlserver.jdbc.TDSCommand.execute(IOBuffer.java:5696) ~[sqljdbc4-4.0.jar:?]
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.executeCommand(SQLServerConnection.java:1715) ~[sqljdbc4-4.0.jar:?]
	at com.microsoft.sqlserver.jdbc.SQLServerStatement.executeCommand(SQLServerStatement.java:180) ~[sqljdbc4-4.0.jar:?]
	at com.microsoft.sqlserver.jdbc.SQLServerStatement.executeStatement(SQLServerStatement.java:155) ~[sqljdbc4-4.0.jar:?]
	at com.microsoft.sqlserver.jdbc.SQLServerPreparedStatement.executeUpdate(SQLServerPreparedStatement.java:314) ~[sqljdbc4-4.0.jar:?]
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:205) [hibernate-core-5.2.9.Final.jar:5.2.9.Final]
	at org.hibernate.engine.jdbc.batch.internal.NonBatchingBatch.addToBatch(NonBatchingBatch.java:45) [hibernate-core-5.2.9.Final.jar:5.2.9.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3003) [hibernate-core-5.2.9.Final.jar:5.2.9.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3503) [hibernate-core-5.2.9.Final.jar:5.2.9.Final]
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:89) [hibernate-core-5.2.9.Final.jar:5.2.9.Final]
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:586) [hibernate-core-5.2.9.Final.jar:5.2.9.Final]
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:460) [hibernate-core-5.2.9.Final.jar:5.2.9.Final]
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:337) [hibernate-core-5.2.9.Final.jar:5.2.9.Final]
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:39) [hibernate-core-5.2.9.Final.jar:5.2.9.Final]
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1428) [hibernate-core-5.2.9.Final.jar:5.2.9.Final]
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:484) [hibernate-core-5.2.9.Final.jar:5.2.9.Final]
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3190) [hibernate-core-5.2.9.Final.jar:5.2.9.Final]
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2404) [hibernate-core-5.2.9.Final.jar:5.2.9.Final]
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:467) [hibernate-core-5.2.9.Final.jar:5.2.9.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:146) [hibernate-core-5.2.9.Final.jar:5.2.9.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$100(JdbcResourceLocalTransactionCoordinatorImpl.java:38) [hibernate-core-5.2.9.Final.jar:5.2.9.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:220) [hibernate-core-5.2.9.Final.jar:5.2.9.Final]
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:68) [hibernate-core-5.2.9.Final.jar:5.2.9.Final]
	at com.example.struts2.action.Login.validate(Login.java:40) [classes/:?]
	at com.opensymphony.xwork2.validator.ValidationInterceptor.doBeforeInvocation(ValidationInterceptor.java:247) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.validator.ValidationInterceptor.doIntercept(ValidationInterceptor.java:259) [struts2-core-2.5.8.jar:2.5.8]
	at org.apache.struts2.interceptor.validation.AnnotationValidationInterceptor.doIntercept(AnnotationValidationInterceptor.java:69) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:97) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.ConversionErrorInterceptor.doIntercept(ConversionErrorInterceptor.java:139) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:97) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.ParametersInterceptor.doIntercept(ParametersInterceptor.java:133) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:97) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.ParametersInterceptor.doIntercept(ParametersInterceptor.java:133) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:97) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.StaticParametersInterceptor.intercept(StaticParametersInterceptor.java:192) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at org.apache.struts2.interceptor.MultiselectInterceptor.intercept(MultiselectInterceptor.java:69) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at org.apache.struts2.interceptor.DateTextFieldInterceptor.intercept(DateTextFieldInterceptor.java:121) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at org.apache.struts2.interceptor.CheckboxInterceptor.intercept(CheckboxInterceptor.java:88) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at org.apache.struts2.interceptor.FileUploadInterceptor.intercept(FileUploadInterceptor.java:248) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.ModelDrivenInterceptor.intercept(ModelDrivenInterceptor.java:99) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.ScopedModelDrivenInterceptor.intercept(ScopedModelDrivenInterceptor.java:139) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.ChainingInterceptor.intercept(ChainingInterceptor.java:155) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.PrepareInterceptor.doIntercept(PrepareInterceptor.java:174) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:97) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at org.apache.struts2.interceptor.I18nInterceptor.intercept(I18nInterceptor.java:163) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at org.apache.struts2.interceptor.ServletConfigInterceptor.intercept(ServletConfigInterceptor.java:171) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.AliasInterceptor.intercept(AliasInterceptor.java:195) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.ExceptionMappingInterceptor.intercept(ExceptionMappingInterceptor.java:193) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at org.apache.struts2.factory.StrutsActionProxy.execute(StrutsActionProxy.java:54) [struts2-core-2.5.8.jar:2.5.8]
	at org.apache.struts2.dispatcher.Dispatcher.serviceAction(Dispatcher.java:564) [struts2-core-2.5.8.jar:2.5.8]
	at org.apache.struts2.dispatcher.ExecuteOperations.executeAction(ExecuteOperations.java:81) [struts2-core-2.5.8.jar:2.5.8]
	at org.apache.struts2.dispatcher.filter.StrutsPrepareAndExecuteFilter.doFilter(StrutsPrepareAndExecuteFilter.java:143) [struts2-core-2.5.8.jar:2.5.8]
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652) [jetty-servlet-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585) [jetty-servlet-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143) [jetty-server-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:550) [jetty-security-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:223) [jetty-server-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1128) [jetty-server-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515) [jetty-servlet-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185) [jetty-server-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1062) [jetty-server-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141) [jetty-server-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:215) [jetty-server-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:110) [jetty-server-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:113) [jetty-server-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.server.Server.handle(Server.java:507) [jetty-server-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:284) [jetty-server-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:237) [jetty-server-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:240) [jetty-io-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:93) [jetty-io-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:53) [jetty-io-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceRun.produceAndRun(ExecuteProduceRun.java:191) [jetty-util-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceRun.run(ExecuteProduceRun.java:126) [jetty-util-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:641) [jetty-util-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:559) [jetty-util-9.3.0.M2.jar:9.3.0.M2]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_111]
2017-04-19 19:26:23,242 WARN  [qtp1245439653-17] spi.SqlExceptionHelper (SqlExceptionHelper.java:129) - SQL Error: 544, SQLState: S0001
2017-04-19 19:26:23,246 ERROR [qtp1245439653-17] spi.SqlExceptionHelper (SqlExceptionHelper.java:131) - Cannot insert explicit value for identity column in table 'users' when IDENTITY_INSERT is set to OFF.
2017-04-19 19:26:23,308 INFO  [qtp1245439653-17] internal.AbstractBatchImpl (AbstractBatchImpl.java:193) - HHH000010: On release of batch it still contained JDBC statements
2017-04-19 19:26:23,339 DEBUG [qtp1245439653-17] internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl (JdbcResourceLocalTransactionCoordinatorImpl.java:255) - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:255) [hibernate-core-5.2.9.Final.jar:5.2.9.Final]
	at org.hibernate.engine.transaction.internal.TransactionImpl.setRollbackOnly(TransactionImpl.java:143) [hibernate-core-5.2.9.Final.jar:5.2.9.Final]
	at org.hibernate.Transaction.markRollbackOnly(Transaction.java:68) [hibernate-core-5.2.9.Final.jar:5.2.9.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.markForRollbackOnly(AbstractSharedSessionContract.java:352) [hibernate-core-5.2.9.Final.jar:5.2.9.Final]
	at org.hibernate.internal.ExceptionConverterImpl.handlePersistenceException(ExceptionConverterImpl.java:271) [hibernate-core-5.2.9.Final.jar:5.2.9.Final]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:148) [hibernate-core-5.2.9.Final.jar:5.2.9.Final]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:155) [hibernate-core-5.2.9.Final.jar:5.2.9.Final]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:162) [hibernate-core-5.2.9.Final.jar:5.2.9.Final]
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1434) [hibernate-core-5.2.9.Final.jar:5.2.9.Final]
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:484) [hibernate-core-5.2.9.Final.jar:5.2.9.Final]
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3190) [hibernate-core-5.2.9.Final.jar:5.2.9.Final]
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2404) [hibernate-core-5.2.9.Final.jar:5.2.9.Final]
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:467) [hibernate-core-5.2.9.Final.jar:5.2.9.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:146) [hibernate-core-5.2.9.Final.jar:5.2.9.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$100(JdbcResourceLocalTransactionCoordinatorImpl.java:38) [hibernate-core-5.2.9.Final.jar:5.2.9.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:220) [hibernate-core-5.2.9.Final.jar:5.2.9.Final]
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:68) [hibernate-core-5.2.9.Final.jar:5.2.9.Final]
	at com.example.struts2.action.Login.validate(Login.java:40) [classes/:?]
	at com.opensymphony.xwork2.validator.ValidationInterceptor.doBeforeInvocation(ValidationInterceptor.java:247) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.validator.ValidationInterceptor.doIntercept(ValidationInterceptor.java:259) [struts2-core-2.5.8.jar:2.5.8]
	at org.apache.struts2.interceptor.validation.AnnotationValidationInterceptor.doIntercept(AnnotationValidationInterceptor.java:69) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:97) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.ConversionErrorInterceptor.doIntercept(ConversionErrorInterceptor.java:139) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:97) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.ParametersInterceptor.doIntercept(ParametersInterceptor.java:133) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:97) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.ParametersInterceptor.doIntercept(ParametersInterceptor.java:133) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:97) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.StaticParametersInterceptor.intercept(StaticParametersInterceptor.java:192) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at org.apache.struts2.interceptor.MultiselectInterceptor.intercept(MultiselectInterceptor.java:69) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at org.apache.struts2.interceptor.DateTextFieldInterceptor.intercept(DateTextFieldInterceptor.java:121) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at org.apache.struts2.interceptor.CheckboxInterceptor.intercept(CheckboxInterceptor.java:88) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at org.apache.struts2.interceptor.FileUploadInterceptor.intercept(FileUploadInterceptor.java:248) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.ModelDrivenInterceptor.intercept(ModelDrivenInterceptor.java:99) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.ScopedModelDrivenInterceptor.intercept(ScopedModelDrivenInterceptor.java:139) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.ChainingInterceptor.intercept(ChainingInterceptor.java:155) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.PrepareInterceptor.doIntercept(PrepareInterceptor.java:174) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:97) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at org.apache.struts2.interceptor.I18nInterceptor.intercept(I18nInterceptor.java:163) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at org.apache.struts2.interceptor.ServletConfigInterceptor.intercept(ServletConfigInterceptor.java:171) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.AliasInterceptor.intercept(AliasInterceptor.java:195) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.ExceptionMappingInterceptor.intercept(ExceptionMappingInterceptor.java:193) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at org.apache.struts2.factory.StrutsActionProxy.execute(StrutsActionProxy.java:54) [struts2-core-2.5.8.jar:2.5.8]
	at org.apache.struts2.dispatcher.Dispatcher.serviceAction(Dispatcher.java:564) [struts2-core-2.5.8.jar:2.5.8]
	at org.apache.struts2.dispatcher.ExecuteOperations.executeAction(ExecuteOperations.java:81) [struts2-core-2.5.8.jar:2.5.8]
	at org.apache.struts2.dispatcher.filter.StrutsPrepareAndExecuteFilter.doFilter(StrutsPrepareAndExecuteFilter.java:143) [struts2-core-2.5.8.jar:2.5.8]
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652) [jetty-servlet-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585) [jetty-servlet-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143) [jetty-server-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:550) [jetty-security-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:223) [jetty-server-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1128) [jetty-server-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515) [jetty-servlet-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185) [jetty-server-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1062) [jetty-server-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141) [jetty-server-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:215) [jetty-server-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:110) [jetty-server-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:113) [jetty-server-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.server.Server.handle(Server.java:507) [jetty-server-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:284) [jetty-server-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:237) [jetty-server-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:240) [jetty-io-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:93) [jetty-io-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:53) [jetty-io-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceRun.produceAndRun(ExecuteProduceRun.java:191) [jetty-util-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceRun.run(ExecuteProduceRun.java:126) [jetty-util-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:641) [jetty-util-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:559) [jetty-util-9.3.0.M2.jar:9.3.0.M2]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_111]
2017-04-19 19:26:23,360 ERROR [qtp1245439653-17] internal.ExceptionMapperStandardImpl (ExceptionMapperStandardImpl.java:39) - HHH000346: Error during managed flush [org.hibernate.exception.SQLGrammarException: could not execute statement]
2017-04-19 19:26:23,368 DEBUG [qtp1245439653-17] internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl (JdbcResourceLocalTransactionCoordinatorImpl.java:255) - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:255) [hibernate-core-5.2.9.Final.jar:5.2.9.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:155) [hibernate-core-5.2.9.Final.jar:5.2.9.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$100(JdbcResourceLocalTransactionCoordinatorImpl.java:38) [hibernate-core-5.2.9.Final.jar:5.2.9.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:220) [hibernate-core-5.2.9.Final.jar:5.2.9.Final]
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:68) [hibernate-core-5.2.9.Final.jar:5.2.9.Final]
	at com.example.struts2.action.Login.validate(Login.java:40) [classes/:?]
	at com.opensymphony.xwork2.validator.ValidationInterceptor.doBeforeInvocation(ValidationInterceptor.java:247) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.validator.ValidationInterceptor.doIntercept(ValidationInterceptor.java:259) [struts2-core-2.5.8.jar:2.5.8]
	at org.apache.struts2.interceptor.validation.AnnotationValidationInterceptor.doIntercept(AnnotationValidationInterceptor.java:69) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:97) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.ConversionErrorInterceptor.doIntercept(ConversionErrorInterceptor.java:139) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:97) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.ParametersInterceptor.doIntercept(ParametersInterceptor.java:133) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:97) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.ParametersInterceptor.doIntercept(ParametersInterceptor.java:133) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:97) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.StaticParametersInterceptor.intercept(StaticParametersInterceptor.java:192) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at org.apache.struts2.interceptor.MultiselectInterceptor.intercept(MultiselectInterceptor.java:69) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at org.apache.struts2.interceptor.DateTextFieldInterceptor.intercept(DateTextFieldInterceptor.java:121) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at org.apache.struts2.interceptor.CheckboxInterceptor.intercept(CheckboxInterceptor.java:88) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at org.apache.struts2.interceptor.FileUploadInterceptor.intercept(FileUploadInterceptor.java:248) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.ModelDrivenInterceptor.intercept(ModelDrivenInterceptor.java:99) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.ScopedModelDrivenInterceptor.intercept(ScopedModelDrivenInterceptor.java:139) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.ChainingInterceptor.intercept(ChainingInterceptor.java:155) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.PrepareInterceptor.doIntercept(PrepareInterceptor.java:174) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:97) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at org.apache.struts2.interceptor.I18nInterceptor.intercept(I18nInterceptor.java:163) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at org.apache.struts2.interceptor.ServletConfigInterceptor.intercept(ServletConfigInterceptor.java:171) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.AliasInterceptor.intercept(AliasInterceptor.java:195) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.ExceptionMappingInterceptor.intercept(ExceptionMappingInterceptor.java:193) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at org.apache.struts2.factory.StrutsActionProxy.execute(StrutsActionProxy.java:54) [struts2-core-2.5.8.jar:2.5.8]
	at org.apache.struts2.dispatcher.Dispatcher.serviceAction(Dispatcher.java:564) [struts2-core-2.5.8.jar:2.5.8]
	at org.apache.struts2.dispatcher.ExecuteOperations.executeAction(ExecuteOperations.java:81) [struts2-core-2.5.8.jar:2.5.8]
	at org.apache.struts2.dispatcher.filter.StrutsPrepareAndExecuteFilter.doFilter(StrutsPrepareAndExecuteFilter.java:143) [struts2-core-2.5.8.jar:2.5.8]
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652) [jetty-servlet-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585) [jetty-servlet-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143) [jetty-server-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:550) [jetty-security-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:223) [jetty-server-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1128) [jetty-server-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515) [jetty-servlet-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185) [jetty-server-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1062) [jetty-server-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141) [jetty-server-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:215) [jetty-server-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:110) [jetty-server-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:113) [jetty-server-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.server.Server.handle(Server.java:507) [jetty-server-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:284) [jetty-server-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:237) [jetty-server-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:240) [jetty-io-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:93) [jetty-io-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:53) [jetty-io-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceRun.produceAndRun(ExecuteProduceRun.java:191) [jetty-util-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceRun.run(ExecuteProduceRun.java:126) [jetty-util-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:641) [jetty-util-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:559) [jetty-util-9.3.0.M2.jar:9.3.0.M2]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_111]
2017-04-19 19:26:23,386 DEBUG [qtp1245439653-17] internal.LogicalConnectionManagedImpl (LogicalConnectionManagedImpl.java:154) - Initiating JDBC connection release from afterTransaction
2017-04-19 19:26:23,399 DEBUG [qtp1245439653-17] internal.LogicalConnectionManagedImpl (LogicalConnectionManagedImpl.java:154) - Initiating JDBC connection release from afterTransaction
2017-04-19 19:26:52,804 DEBUG [pool-3-thread-1] internal.PooledConnections (PooledConnections.java:51) - Connection pool now considered primed; min-size will be maintained
2017-04-19 19:29:30,768 DEBUG [main] internal.CoreLogging (CoreLogging.java:28) - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2017-04-19 19:29:30,805 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2017-04-19 19:29:30,812 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2017-04-19 19:29:30,824 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2017-04-19 19:29:31,411 INFO  [main] hibernate.Version (Version.java:45) - HHH000412: Hibernate Core {5.2.9.Final}
2017-04-19 19:29:31,419 INFO  [main] cfg.Environment (Environment.java:213) - HHH000206: hibernate.properties not found
2017-04-19 19:29:31,477 DEBUG [main] internal.JaxbCfgProcessor (JaxbCfgProcessor.java:116) - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2017-04-19 19:29:32,000 DEBUG [main] cfg.Configuration (Configuration.java:724) - Building session factory using internal StandardServiceRegistryBuilder
2017-04-19 19:29:32,019 DEBUG [main] spi.ServiceBinding (ServiceBinding.java:68) - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2017-04-19 19:29:32,030 DEBUG [main] cfg.Configuration (Configuration.java:652) - Building session factory using provided StandardServiceRegistry
2017-04-19 19:29:32,090 DEBUG [main] internal.RegionFactoryInitiator (RegionFactoryInitiator.java:75) - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2017-04-19 19:29:32,116 INFO  [main] java.JavaReflectionManager (JavaReflectionManager.java:66) - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2017-04-19 19:29:32,183 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@12a14b74
2017-04-19 19:29:32,187 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@12a14b74
2017-04-19 19:29:32,191 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@12a14b74
2017-04-19 19:29:32,196 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2aa7399c
2017-04-19 19:29:32,203 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6415f61e
2017-04-19 19:29:32,208 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration yes_no -> org.hibernate.type.YesNoType@6468a7b6
2017-04-19 19:29:32,216 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@6af91cc8
2017-04-19 19:29:32,220 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@6af91cc8
2017-04-19 19:29:32,224 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6af91cc8
2017-04-19 19:29:32,231 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration character -> org.hibernate.type.CharacterType@6056232d
2017-04-19 19:29:32,235 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration char -> org.hibernate.type.CharacterType@6056232d
2017-04-19 19:29:32,242 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6056232d
2017-04-19 19:29:32,250 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@58b91d57
2017-04-19 19:29:32,254 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@58b91d57
2017-04-19 19:29:32,257 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@58b91d57
2017-04-19 19:29:32,267 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration integer -> org.hibernate.type.IntegerType@1806bc4c
2017-04-19 19:29:32,271 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration int -> org.hibernate.type.IntegerType@1806bc4c
2017-04-19 19:29:32,274 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1806bc4c
2017-04-19 19:29:32,281 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@2f9a4401
2017-04-19 19:29:32,285 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@2f9a4401
2017-04-19 19:29:32,288 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2f9a4401
2017-04-19 19:29:32,298 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@c017175
2017-04-19 19:29:32,302 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@c017175
2017-04-19 19:29:32,305 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@c017175
2017-04-19 19:29:32,312 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@68565bc7
2017-04-19 19:29:32,315 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@68565bc7
2017-04-19 19:29:32,319 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@68565bc7
2017-04-19 19:29:32,326 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2ff7a73
2017-04-19 19:29:32,329 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2ff7a73
2017-04-19 19:29:32,333 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1e1b061
2017-04-19 19:29:32,334 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1e1b061
2017-04-19 19:29:32,337 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration string -> org.hibernate.type.StringType@60c73e58
2017-04-19 19:29:32,338 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.String -> org.hibernate.type.StringType@60c73e58
2017-04-19 19:29:32,340 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4483d35
2017-04-19 19:29:32,343 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2f4ba1ae
2017-04-19 19:29:32,346 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration url -> org.hibernate.type.UrlType@1b6924cb
2017-04-19 19:29:32,347 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1b6924cb
2017-04-19 19:29:32,355 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Duration -> org.hibernate.type.DurationType@6ed043d3
2017-04-19 19:29:32,356 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@6ed043d3
2017-04-19 19:29:32,403 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Instant -> org.hibernate.type.InstantType@6342ff7f
2017-04-19 19:29:32,405 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6342ff7f
2017-04-19 19:29:32,409 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7da31a40
2017-04-19 19:29:32,410 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7da31a40
2017-04-19 19:29:32,415 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7c3e4b1a
2017-04-19 19:29:32,416 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7c3e4b1a
2017-04-19 19:29:32,421 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5762658b
2017-04-19 19:29:32,422 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5762658b
2017-04-19 19:29:32,426 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6e4599c0
2017-04-19 19:29:32,428 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6e4599c0
2017-04-19 19:29:32,432 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@2b5c4f17
2017-04-19 19:29:32,433 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@2b5c4f17
2017-04-19 19:29:32,445 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1fc713c9
2017-04-19 19:29:32,446 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1fc713c9
2017-04-19 19:29:32,450 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration date -> org.hibernate.type.DateType@6848a051
2017-04-19 19:29:32,451 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6848a051
2017-04-19 19:29:32,456 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration time -> org.hibernate.type.TimeType@2b0b7e5a
2017-04-19 19:29:32,457 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2b0b7e5a
2017-04-19 19:29:32,463 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration timestamp -> org.hibernate.type.TimestampType@68a78f3c
2017-04-19 19:29:32,467 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@68a78f3c
2017-04-19 19:29:32,468 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@68a78f3c
2017-04-19 19:29:32,476 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2ddb3ae8
2017-04-19 19:29:32,483 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration calendar -> org.hibernate.type.CalendarType@6fbc1bb
2017-04-19 19:29:32,487 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6fbc1bb
2017-04-19 19:29:32,490 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6fbc1bb
2017-04-19 19:29:32,497 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@73809e7
2017-04-19 19:29:32,503 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration locale -> org.hibernate.type.LocaleType@67507df
2017-04-19 19:29:32,507 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@67507df
2017-04-19 19:29:32,515 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration currency -> org.hibernate.type.CurrencyType@33feb805
2017-04-19 19:29:32,520 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@33feb805
2017-04-19 19:29:32,526 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6f8aba08
2017-04-19 19:29:32,530 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6f8aba08
2017-04-19 19:29:32,538 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration class -> org.hibernate.type.ClassType@35c9a231
2017-04-19 19:29:32,542 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@35c9a231
2017-04-19 19:29:32,549 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3003827c
2017-04-19 19:29:32,553 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3003827c
2017-04-19 19:29:32,559 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@656f62dc
2017-04-19 19:29:32,567 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration binary -> org.hibernate.type.BinaryType@5a8c93
2017-04-19 19:29:32,571 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte[] -> org.hibernate.type.BinaryType@5a8c93
2017-04-19 19:29:32,575 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [B -> org.hibernate.type.BinaryType@5a8c93
2017-04-19 19:29:32,581 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1c7350b0
2017-04-19 19:29:32,585 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1c7350b0
2017-04-19 19:29:32,586 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1c7350b0
2017-04-19 19:29:32,589 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration row_version -> org.hibernate.type.RowVersionType@2b0dc227
2017-04-19 19:29:32,592 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration image -> org.hibernate.type.ImageType@2a334bac
2017-04-19 19:29:32,595 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration characters -> org.hibernate.type.CharArrayType@3c854752
2017-04-19 19:29:32,596 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration char[] -> org.hibernate.type.CharArrayType@3c854752
2017-04-19 19:29:32,596 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [C -> org.hibernate.type.CharArrayType@3c854752
2017-04-19 19:29:32,600 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@210d2a6c
2017-04-19 19:29:32,600 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@210d2a6c
2017-04-19 19:29:32,601 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@210d2a6c
2017-04-19 19:29:32,603 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration text -> org.hibernate.type.TextType@77c10a5f
2017-04-19 19:29:32,606 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ntext -> org.hibernate.type.NTextType@355c94be
2017-04-19 19:29:32,616 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration blob -> org.hibernate.type.BlobType@57fbc06f
2017-04-19 19:29:32,617 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@57fbc06f
2017-04-19 19:29:32,624 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7c52fc81
2017-04-19 19:29:32,638 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration clob -> org.hibernate.type.ClobType@361abd01
2017-04-19 19:29:32,641 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@361abd01
2017-04-19 19:29:32,654 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration nclob -> org.hibernate.type.NClobType@7c011174
2017-04-19 19:29:32,657 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7c011174
2017-04-19 19:29:32,661 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@40f35e52
2017-04-19 19:29:32,666 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@443faa85
2017-04-19 19:29:32,674 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration serializable -> org.hibernate.type.SerializableType@13dbed9e
2017-04-19 19:29:32,685 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration object -> org.hibernate.type.ObjectType@45aca496
2017-04-19 19:29:32,687 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@45aca496
2017-04-19 19:29:32,699 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3d90eeb3
2017-04-19 19:29:32,702 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1db87583
2017-04-19 19:29:32,706 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7fb53256
2017-04-19 19:29:32,709 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1d6d1d42
2017-04-19 19:29:32,713 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@27329d2a
2017-04-19 19:29:32,715 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7978e022
2017-04-19 19:29:32,716 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2f894ad9
2017-04-19 19:29:32,719 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5afbd567
2017-04-19 19:29:32,758 WARN  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:70) - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2017-04-19 19:29:32,820 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:126) - HHH10001005: using driver [com.microsoft.sqlserver.jdbc.SQLServerDriver] at URL [jdbc:sqlserver://localhost:1433;database=strutsproject]
2017-04-19 19:29:32,826 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:132) - HHH10001001: Connection properties: {user=SA, password=SQLServ3r}
2017-04-19 19:29:32,830 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:140) - HHH10001003: Autocommit mode: false
2017-04-19 19:29:32,851 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:384) - Initializing Connection pool with 1 Connections
2017-04-19 19:29:32,854 INFO  [main] internal.PooledConnections (PooledConnections.java:41) - HHH000115: Hibernate connection pool size: 1 (min=1)
2017-04-19 19:29:33,773 DEBUG [main] internal.JdbcEnvironmentInitiator (JdbcEnvironmentInitiator.java:72) - Database ->
       name : Microsoft SQL Server
    version : 14.00.405
      major : 14
      minor : 0
2017-04-19 19:29:33,774 DEBUG [main] internal.JdbcEnvironmentInitiator (JdbcEnvironmentInitiator.java:83) - Driver ->
       name : Microsoft JDBC Driver 4.0 for SQL Server
    version : 4.0.2206.100
      major : 4
      minor : 0
2017-04-19 19:29:33,775 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:389) - JDBC version : 4.0
2017-04-19 19:29:33,825 INFO  [main] dialect.Dialect (Dialect.java:157) - HHH000400: Using dialect: org.hibernate.dialect.SQLServer2008Dialect
2017-04-19 19:29:34,491 DEBUG [main] spi.IdentifierHelperBuilder (IdentifierHelperBuilder.java:191) - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2017-04-19 19:29:34,624 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2017-04-19 19:29:34,628 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2017-04-19 19:29:34,633 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2017-04-19 19:29:34,636 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2017-04-19 19:29:34,640 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2017-04-19 19:29:34,647 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2017-04-19 19:29:34,652 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2017-04-19 19:29:34,657 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2017-04-19 19:29:34,664 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2017-04-19 19:29:34,668 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2017-04-19 19:29:34,672 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2017-04-19 19:29:34,676 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2017-04-19 19:29:34,681 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2017-04-19 19:29:34,687 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2017-04-19 19:29:34,765 DEBUG [main] relational.Namespace (Namespace.java:47) - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2017-04-19 19:29:34,838 DEBUG [main] cfg.AnnotationBinder (AnnotationBinder.java:511) - Binding entity from annotated class: com.example.struts2.model.Users
2017-04-19 19:29:34,915 DEBUG [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2017-04-19 19:29:34,937 DEBUG [main] annotations.EntityBinder (EntityBinder.java:419) - Import with entity name users
2017-04-19 19:29:34,959 DEBUG [main] annotations.EntityBinder (EntityBinder.java:695) - Bind entity com.example.struts2.model.Users on table users
2017-04-19 19:29:56,683 INFO  [qtp1007664442-24] action.Login (Login.java:23) - VALIDATE admin admin
2017-04-19 19:30:03,731 DEBUG [pool-3-thread-1] internal.PooledConnections (PooledConnections.java:51) - Connection pool now considered primed; min-size will be maintained
2017-04-19 19:31:20,540 DEBUG [main] internal.CoreLogging (CoreLogging.java:28) - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2017-04-19 19:31:20,580 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2017-04-19 19:31:20,588 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2017-04-19 19:31:20,600 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2017-04-19 19:31:20,971 INFO  [main] hibernate.Version (Version.java:45) - HHH000412: Hibernate Core {5.2.9.Final}
2017-04-19 19:31:20,980 INFO  [main] cfg.Environment (Environment.java:213) - HHH000206: hibernate.properties not found
2017-04-19 19:31:21,050 DEBUG [main] internal.JaxbCfgProcessor (JaxbCfgProcessor.java:116) - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2017-04-19 19:31:21,443 DEBUG [main] cfg.Configuration (Configuration.java:724) - Building session factory using internal StandardServiceRegistryBuilder
2017-04-19 19:31:21,461 DEBUG [main] spi.ServiceBinding (ServiceBinding.java:68) - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2017-04-19 19:31:21,464 DEBUG [main] cfg.Configuration (Configuration.java:652) - Building session factory using provided StandardServiceRegistry
2017-04-19 19:31:21,512 DEBUG [main] internal.RegionFactoryInitiator (RegionFactoryInitiator.java:75) - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2017-04-19 19:31:21,534 INFO  [main] java.JavaReflectionManager (JavaReflectionManager.java:66) - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2017-04-19 19:31:21,590 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@68ee3b6d
2017-04-19 19:31:21,594 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@68ee3b6d
2017-04-19 19:31:21,599 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@68ee3b6d
2017-04-19 19:31:21,605 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@11eed657
2017-04-19 19:31:21,611 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@334ebcaa
2017-04-19 19:31:21,615 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration yes_no -> org.hibernate.type.YesNoType@2f860823
2017-04-19 19:31:21,625 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@6232ffdb
2017-04-19 19:31:21,629 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@6232ffdb
2017-04-19 19:31:21,632 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6232ffdb
2017-04-19 19:31:21,638 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration character -> org.hibernate.type.CharacterType@33f2df51
2017-04-19 19:31:21,642 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration char -> org.hibernate.type.CharacterType@33f2df51
2017-04-19 19:31:21,646 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@33f2df51
2017-04-19 19:31:21,653 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@61a91c9b
2017-04-19 19:31:21,657 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@61a91c9b
2017-04-19 19:31:21,661 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@61a91c9b
2017-04-19 19:31:21,667 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration integer -> org.hibernate.type.IntegerType@462e1e64
2017-04-19 19:31:21,671 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration int -> org.hibernate.type.IntegerType@462e1e64
2017-04-19 19:31:21,675 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@462e1e64
2017-04-19 19:31:21,682 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@22c75c01
2017-04-19 19:31:21,686 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@22c75c01
2017-04-19 19:31:21,689 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@22c75c01
2017-04-19 19:31:21,696 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@559cedee
2017-04-19 19:31:21,700 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@559cedee
2017-04-19 19:31:21,704 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@559cedee
2017-04-19 19:31:21,711 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@37baddde
2017-04-19 19:31:21,715 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@37baddde
2017-04-19 19:31:21,719 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@37baddde
2017-04-19 19:31:21,728 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@38830ea
2017-04-19 19:31:21,731 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@38830ea
2017-04-19 19:31:21,737 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@38f77cd9
2017-04-19 19:31:21,741 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@38f77cd9
2017-04-19 19:31:21,747 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration string -> org.hibernate.type.StringType@5984feef
2017-04-19 19:31:21,751 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.String -> org.hibernate.type.StringType@5984feef
2017-04-19 19:31:21,757 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@204abeff
2017-04-19 19:31:21,762 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1391af3b
2017-04-19 19:31:21,768 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration url -> org.hibernate.type.UrlType@3a8d467e
2017-04-19 19:31:21,772 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@3a8d467e
2017-04-19 19:31:21,779 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Duration -> org.hibernate.type.DurationType@135a8c6f
2017-04-19 19:31:21,782 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@135a8c6f
2017-04-19 19:31:21,830 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Instant -> org.hibernate.type.InstantType@403c3a01
2017-04-19 19:31:21,834 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@403c3a01
2017-04-19 19:31:21,842 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@28ee7bee
2017-04-19 19:31:21,845 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@28ee7bee
2017-04-19 19:31:21,854 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@2db4ad1
2017-04-19 19:31:21,857 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@2db4ad1
2017-04-19 19:31:21,863 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2629d5dc
2017-04-19 19:31:21,864 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2629d5dc
2017-04-19 19:31:21,871 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7dffda8b
2017-04-19 19:31:21,874 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7dffda8b
2017-04-19 19:31:21,881 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@6ca8fcf3
2017-04-19 19:31:21,887 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@6ca8fcf3
2017-04-19 19:31:21,902 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7301eebe
2017-04-19 19:31:21,906 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7301eebe
2017-04-19 19:31:21,913 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration date -> org.hibernate.type.DateType@149b0577
2017-04-19 19:31:21,917 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@149b0577
2017-04-19 19:31:21,924 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration time -> org.hibernate.type.TimeType@7be1ce6a
2017-04-19 19:31:21,928 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7be1ce6a
2017-04-19 19:31:21,934 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration timestamp -> org.hibernate.type.TimestampType@17ba57f0
2017-04-19 19:31:21,938 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@17ba57f0
2017-04-19 19:31:21,942 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@17ba57f0
2017-04-19 19:31:21,951 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@79518e00
2017-04-19 19:31:21,957 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration calendar -> org.hibernate.type.CalendarType@30c4e352
2017-04-19 19:31:21,961 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@30c4e352
2017-04-19 19:31:21,966 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@30c4e352
2017-04-19 19:31:21,971 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5f96f6a2
2017-04-19 19:31:21,977 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration locale -> org.hibernate.type.LocaleType@341b13a8
2017-04-19 19:31:21,980 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@341b13a8
2017-04-19 19:31:21,986 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration currency -> org.hibernate.type.CurrencyType@37854b34
2017-04-19 19:31:21,990 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@37854b34
2017-04-19 19:31:21,996 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@7ff19c33
2017-04-19 19:31:22,001 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7ff19c33
2017-04-19 19:31:22,007 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration class -> org.hibernate.type.ClassType@7a4d582c
2017-04-19 19:31:22,011 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7a4d582c
2017-04-19 19:31:22,018 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@29b40b3
2017-04-19 19:31:22,031 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@29b40b3
2017-04-19 19:31:22,038 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@49d30c6f
2017-04-19 19:31:22,048 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration binary -> org.hibernate.type.BinaryType@3bed3315
2017-04-19 19:31:22,052 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte[] -> org.hibernate.type.BinaryType@3bed3315
2017-04-19 19:31:22,056 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [B -> org.hibernate.type.BinaryType@3bed3315
2017-04-19 19:31:22,062 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@55651434
2017-04-19 19:31:22,066 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@55651434
2017-04-19 19:31:22,070 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@55651434
2017-04-19 19:31:22,076 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration row_version -> org.hibernate.type.RowVersionType@37ad042b
2017-04-19 19:31:22,081 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration image -> org.hibernate.type.ImageType@470d183
2017-04-19 19:31:22,087 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration characters -> org.hibernate.type.CharArrayType@3ddeaa5f
2017-04-19 19:31:22,091 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration char[] -> org.hibernate.type.CharArrayType@3ddeaa5f
2017-04-19 19:31:22,094 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [C -> org.hibernate.type.CharArrayType@3ddeaa5f
2017-04-19 19:31:22,100 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3bec5821
2017-04-19 19:31:22,104 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3bec5821
2017-04-19 19:31:22,108 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3bec5821
2017-04-19 19:31:22,115 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration text -> org.hibernate.type.TextType@176555c
2017-04-19 19:31:22,121 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ntext -> org.hibernate.type.NTextType@97a145b
2017-04-19 19:31:22,134 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration blob -> org.hibernate.type.BlobType@51a18b21
2017-04-19 19:31:22,137 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@51a18b21
2017-04-19 19:31:22,142 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7523a3dc
2017-04-19 19:31:22,156 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration clob -> org.hibernate.type.ClobType@575b5f7d
2017-04-19 19:31:22,160 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@575b5f7d
2017-04-19 19:31:22,170 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration nclob -> org.hibernate.type.NClobType@794366a5
2017-04-19 19:31:22,174 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@794366a5
2017-04-19 19:31:22,178 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@340d6d89
2017-04-19 19:31:22,183 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1ee47d9e
2017-04-19 19:31:22,189 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration serializable -> org.hibernate.type.SerializableType@67531e3a
2017-04-19 19:31:22,200 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration object -> org.hibernate.type.ObjectType@697173d9
2017-04-19 19:31:22,204 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@697173d9
2017-04-19 19:31:22,208 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1db87583
2017-04-19 19:31:22,212 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7fb53256
2017-04-19 19:31:22,215 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1d6d1d42
2017-04-19 19:31:22,216 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@27329d2a
2017-04-19 19:31:22,220 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7978e022
2017-04-19 19:31:22,221 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2f894ad9
2017-04-19 19:31:22,222 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5afbd567
2017-04-19 19:31:22,223 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6993c8df
2017-04-19 19:31:22,251 WARN  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:70) - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2017-04-19 19:31:22,338 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:126) - HHH10001005: using driver [com.microsoft.sqlserver.jdbc.SQLServerDriver] at URL [jdbc:sqlserver://localhost:1433;database=strutsproject]
2017-04-19 19:31:22,342 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:132) - HHH10001001: Connection properties: {user=SA, password=SQLServ3r}
2017-04-19 19:31:22,343 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:140) - HHH10001003: Autocommit mode: false
2017-04-19 19:31:22,362 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:384) - Initializing Connection pool with 1 Connections
2017-04-19 19:31:22,363 INFO  [main] internal.PooledConnections (PooledConnections.java:41) - HHH000115: Hibernate connection pool size: 1 (min=1)
2017-04-19 19:31:22,809 DEBUG [main] internal.JdbcEnvironmentInitiator (JdbcEnvironmentInitiator.java:72) - Database ->
       name : Microsoft SQL Server
    version : 14.00.405
      major : 14
      minor : 0
2017-04-19 19:31:22,813 DEBUG [main] internal.JdbcEnvironmentInitiator (JdbcEnvironmentInitiator.java:83) - Driver ->
       name : Microsoft JDBC Driver 4.0 for SQL Server
    version : 4.0.2206.100
      major : 4
      minor : 0
2017-04-19 19:31:22,817 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:389) - JDBC version : 4.0
2017-04-19 19:31:22,851 INFO  [main] dialect.Dialect (Dialect.java:157) - HHH000400: Using dialect: org.hibernate.dialect.SQLServer2008Dialect
2017-04-19 19:31:23,091 DEBUG [main] spi.IdentifierHelperBuilder (IdentifierHelperBuilder.java:191) - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2017-04-19 19:31:23,225 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2017-04-19 19:31:23,230 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2017-04-19 19:31:23,235 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2017-04-19 19:31:23,239 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2017-04-19 19:31:23,244 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2017-04-19 19:31:23,249 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2017-04-19 19:31:23,254 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2017-04-19 19:31:23,260 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2017-04-19 19:31:23,266 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2017-04-19 19:31:23,271 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2017-04-19 19:31:23,276 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2017-04-19 19:31:23,281 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2017-04-19 19:31:23,287 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2017-04-19 19:31:23,292 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2017-04-19 19:31:23,767 DEBUG [main] relational.Namespace (Namespace.java:47) - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2017-04-19 19:31:23,832 DEBUG [main] cfg.AnnotationBinder (AnnotationBinder.java:511) - Binding entity from annotated class: com.example.struts2.model.Users
2017-04-19 19:31:23,890 DEBUG [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2017-04-19 19:31:23,905 DEBUG [main] annotations.EntityBinder (EntityBinder.java:419) - Import with entity name users
2017-04-19 19:31:23,923 DEBUG [main] annotations.EntityBinder (EntityBinder.java:695) - Bind entity com.example.struts2.model.Users on table users
2017-04-19 19:31:52,792 DEBUG [pool-3-thread-1] internal.PooledConnections (PooledConnections.java:51) - Connection pool now considered primed; min-size will be maintained
2017-04-19 19:32:25,229 DEBUG [Scanner-0] internal.CoreLogging (CoreLogging.java:28) - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2017-04-19 19:32:25,528 DEBUG [Scanner-0] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2017-04-19 19:32:25,532 DEBUG [Scanner-0] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2017-04-19 19:32:25,539 DEBUG [Scanner-0] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2017-04-19 19:32:25,830 INFO  [Scanner-0] hibernate.Version (Version.java:45) - HHH000412: Hibernate Core {5.2.9.Final}
2017-04-19 19:32:25,838 INFO  [Scanner-0] cfg.Environment (Environment.java:213) - HHH000206: hibernate.properties not found
2017-04-19 19:32:25,895 DEBUG [Scanner-0] internal.JaxbCfgProcessor (JaxbCfgProcessor.java:116) - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2017-04-19 19:32:26,438 DEBUG [Scanner-0] cfg.Configuration (Configuration.java:724) - Building session factory using internal StandardServiceRegistryBuilder
2017-04-19 19:32:26,457 DEBUG [Scanner-0] spi.ServiceBinding (ServiceBinding.java:68) - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2017-04-19 19:32:26,460 DEBUG [Scanner-0] cfg.Configuration (Configuration.java:652) - Building session factory using provided StandardServiceRegistry
2017-04-19 19:32:26,643 DEBUG [Scanner-0] internal.RegionFactoryInitiator (RegionFactoryInitiator.java:75) - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2017-04-19 19:32:26,680 INFO  [Scanner-0] java.JavaReflectionManager (JavaReflectionManager.java:66) - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2017-04-19 19:32:26,817 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@1f35ee15
2017-04-19 19:32:26,836 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@1f35ee15
2017-04-19 19:32:26,846 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1f35ee15
2017-04-19 19:32:26,850 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@14c4fc1a
2017-04-19 19:32:26,863 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@16049aa9
2017-04-19 19:32:26,870 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration yes_no -> org.hibernate.type.YesNoType@37e3ab50
2017-04-19 19:32:26,878 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@5fac0b90
2017-04-19 19:32:26,879 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@5fac0b90
2017-04-19 19:32:26,885 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5fac0b90
2017-04-19 19:32:26,892 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration character -> org.hibernate.type.CharacterType@2d4f7d0a
2017-04-19 19:32:26,892 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration char -> org.hibernate.type.CharacterType@2d4f7d0a
2017-04-19 19:32:26,893 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2d4f7d0a
2017-04-19 19:32:26,897 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@492a97cb
2017-04-19 19:32:26,897 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@492a97cb
2017-04-19 19:32:26,898 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@492a97cb
2017-04-19 19:32:26,910 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration integer -> org.hibernate.type.IntegerType@ba17488
2017-04-19 19:32:26,913 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration int -> org.hibernate.type.IntegerType@ba17488
2017-04-19 19:32:26,914 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@ba17488
2017-04-19 19:32:26,919 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@3de5f98a
2017-04-19 19:32:26,919 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@3de5f98a
2017-04-19 19:32:26,920 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3de5f98a
2017-04-19 19:32:26,928 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@6ccbe52d
2017-04-19 19:32:26,928 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@6ccbe52d
2017-04-19 19:32:26,929 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6ccbe52d
2017-04-19 19:32:26,933 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@736daaab
2017-04-19 19:32:26,935 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@736daaab
2017-04-19 19:32:26,936 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@736daaab
2017-04-19 19:32:26,940 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@b5d65bc
2017-04-19 19:32:26,941 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@b5d65bc
2017-04-19 19:32:26,944 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@22e3e041
2017-04-19 19:32:26,946 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@22e3e041
2017-04-19 19:32:26,951 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration string -> org.hibernate.type.StringType@104686dd
2017-04-19 19:32:26,952 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.String -> org.hibernate.type.StringType@104686dd
2017-04-19 19:32:26,955 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1313d6d1
2017-04-19 19:32:26,958 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@33662ef4
2017-04-19 19:32:26,960 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration url -> org.hibernate.type.UrlType@2c614672
2017-04-19 19:32:26,961 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@2c614672
2017-04-19 19:32:26,965 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Duration -> org.hibernate.type.DurationType@3dde303d
2017-04-19 19:32:26,966 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@3dde303d
2017-04-19 19:32:26,972 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Instant -> org.hibernate.type.InstantType@1c9e77a7
2017-04-19 19:32:26,975 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@1c9e77a7
2017-04-19 19:32:26,979 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@188cddee
2017-04-19 19:32:26,980 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@188cddee
2017-04-19 19:32:26,984 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@15354c67
2017-04-19 19:32:26,986 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@15354c67
2017-04-19 19:32:26,993 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@6ce45eb4
2017-04-19 19:32:26,994 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@6ce45eb4
2017-04-19 19:32:26,998 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4e7bd185
2017-04-19 19:32:26,999 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4e7bd185
2017-04-19 19:32:27,007 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4e7f8700
2017-04-19 19:32:27,007 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4e7f8700
2017-04-19 19:32:27,012 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4eb70ac7
2017-04-19 19:32:27,013 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4eb70ac7
2017-04-19 19:32:27,020 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration date -> org.hibernate.type.DateType@6c79b8e9
2017-04-19 19:32:27,031 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6c79b8e9
2017-04-19 19:32:27,041 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration time -> org.hibernate.type.TimeType@a08f448
2017-04-19 19:32:27,042 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@a08f448
2017-04-19 19:32:27,046 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration timestamp -> org.hibernate.type.TimestampType@41f6812f
2017-04-19 19:32:27,047 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@41f6812f
2017-04-19 19:32:27,047 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@41f6812f
2017-04-19 19:32:27,052 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2332dee7
2017-04-19 19:32:27,064 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration calendar -> org.hibernate.type.CalendarType@765ac15b
2017-04-19 19:32:27,066 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@765ac15b
2017-04-19 19:32:27,067 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@765ac15b
2017-04-19 19:32:27,074 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@373e439b
2017-04-19 19:32:27,085 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration locale -> org.hibernate.type.LocaleType@5acf720b
2017-04-19 19:32:27,087 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5acf720b
2017-04-19 19:32:27,095 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration currency -> org.hibernate.type.CurrencyType@5df44fce
2017-04-19 19:32:27,098 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5df44fce
2017-04-19 19:32:27,105 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@71738d6c
2017-04-19 19:32:27,108 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@71738d6c
2017-04-19 19:32:27,116 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration class -> org.hibernate.type.ClassType@7ae29d6a
2017-04-19 19:32:27,121 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7ae29d6a
2017-04-19 19:32:27,135 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5c3460f1
2017-04-19 19:32:27,141 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5c3460f1
2017-04-19 19:32:27,149 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2bdce1a4
2017-04-19 19:32:27,156 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration binary -> org.hibernate.type.BinaryType@68a63c59
2017-04-19 19:32:27,156 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte[] -> org.hibernate.type.BinaryType@68a63c59
2017-04-19 19:32:27,157 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [B -> org.hibernate.type.BinaryType@68a63c59
2017-04-19 19:32:27,160 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@73da3c06
2017-04-19 19:32:27,161 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@73da3c06
2017-04-19 19:32:27,162 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@73da3c06
2017-04-19 19:32:27,166 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration row_version -> org.hibernate.type.RowVersionType@3a21d7aa
2017-04-19 19:32:27,175 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration image -> org.hibernate.type.ImageType@115524f4
2017-04-19 19:32:27,182 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration characters -> org.hibernate.type.CharArrayType@49817840
2017-04-19 19:32:27,194 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration char[] -> org.hibernate.type.CharArrayType@49817840
2017-04-19 19:32:27,196 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [C -> org.hibernate.type.CharArrayType@49817840
2017-04-19 19:32:27,204 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7b82e33
2017-04-19 19:32:27,210 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7b82e33
2017-04-19 19:32:27,211 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7b82e33
2017-04-19 19:32:27,215 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration text -> org.hibernate.type.TextType@5fe18785
2017-04-19 19:32:27,231 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ntext -> org.hibernate.type.NTextType@3391cc04
2017-04-19 19:32:27,248 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration blob -> org.hibernate.type.BlobType@34679a6
2017-04-19 19:32:27,265 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@34679a6
2017-04-19 19:32:27,276 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@42836856
2017-04-19 19:32:27,300 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration clob -> org.hibernate.type.ClobType@5cef42e5
2017-04-19 19:32:27,314 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5cef42e5
2017-04-19 19:32:27,326 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration nclob -> org.hibernate.type.NClobType@51e0c1e2
2017-04-19 19:32:27,327 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@51e0c1e2
2017-04-19 19:32:27,328 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6849fa9e
2017-04-19 19:32:27,330 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@49f9ac30
2017-04-19 19:32:27,334 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration serializable -> org.hibernate.type.SerializableType@61dd66e8
2017-04-19 19:32:27,341 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration object -> org.hibernate.type.ObjectType@3012bea5
2017-04-19 19:32:27,342 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3012bea5
2017-04-19 19:32:27,343 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@c533a18
2017-04-19 19:32:27,344 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@29115aa1
2017-04-19 19:32:27,344 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@62c9cb4e
2017-04-19 19:32:27,345 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@19adef73
2017-04-19 19:32:27,345 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@c3b95a4
2017-04-19 19:32:27,346 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2f5c02d0
2017-04-19 19:32:27,346 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3e33fce
2017-04-19 19:32:27,346 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@75438eb6
2017-04-19 19:32:27,372 WARN  [Scanner-0] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:70) - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2017-04-19 19:32:27,452 INFO  [Scanner-0] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:126) - HHH10001005: using driver [com.microsoft.sqlserver.jdbc.SQLServerDriver] at URL [jdbc:sqlserver://localhost:1433;database=strutsproject]
2017-04-19 19:32:27,455 INFO  [Scanner-0] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:132) - HHH10001001: Connection properties: {user=SA, password=SQLServ3r}
2017-04-19 19:32:27,457 INFO  [Scanner-0] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:140) - HHH10001003: Autocommit mode: false
2017-04-19 19:32:27,475 DEBUG [Scanner-0] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:384) - Initializing Connection pool with 1 Connections
2017-04-19 19:32:27,477 INFO  [Scanner-0] internal.PooledConnections (PooledConnections.java:41) - HHH000115: Hibernate connection pool size: 1 (min=1)
2017-04-19 19:32:27,972 DEBUG [Scanner-0] internal.JdbcEnvironmentInitiator (JdbcEnvironmentInitiator.java:72) - Database ->
       name : Microsoft SQL Server
    version : 14.00.405
      major : 14
      minor : 0
2017-04-19 19:32:27,976 DEBUG [Scanner-0] internal.JdbcEnvironmentInitiator (JdbcEnvironmentInitiator.java:83) - Driver ->
       name : Microsoft JDBC Driver 4.0 for SQL Server
    version : 4.0.2206.100
      major : 4
      minor : 0
2017-04-19 19:32:27,980 DEBUG [Scanner-0] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:389) - JDBC version : 4.0
2017-04-19 19:32:28,012 INFO  [Scanner-0] dialect.Dialect (Dialect.java:157) - HHH000400: Using dialect: org.hibernate.dialect.SQLServer2008Dialect
2017-04-19 19:32:28,351 DEBUG [Scanner-0] spi.IdentifierHelperBuilder (IdentifierHelperBuilder.java:191) - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2017-04-19 19:32:28,468 DEBUG [Scanner-0] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2017-04-19 19:32:28,473 DEBUG [Scanner-0] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2017-04-19 19:32:28,478 DEBUG [Scanner-0] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2017-04-19 19:32:28,481 DEBUG [Scanner-0] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2017-04-19 19:32:28,485 DEBUG [Scanner-0] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2017-04-19 19:32:28,490 DEBUG [Scanner-0] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2017-04-19 19:32:28,495 DEBUG [Scanner-0] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2017-04-19 19:32:28,500 DEBUG [Scanner-0] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2017-04-19 19:32:28,507 DEBUG [Scanner-0] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2017-04-19 19:32:28,512 DEBUG [Scanner-0] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2017-04-19 19:32:28,516 DEBUG [Scanner-0] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2017-04-19 19:32:28,523 DEBUG [Scanner-0] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2017-04-19 19:32:28,526 DEBUG [Scanner-0] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2017-04-19 19:32:28,531 DEBUG [Scanner-0] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2017-04-19 19:32:28,607 DEBUG [Scanner-0] relational.Namespace (Namespace.java:47) - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2017-04-19 19:32:28,726 DEBUG [Scanner-0] cfg.AnnotationBinder (AnnotationBinder.java:511) - Binding entity from annotated class: com.example.struts2.model.Users
2017-04-19 19:32:28,790 DEBUG [Scanner-0] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2017-04-19 19:32:28,809 DEBUG [Scanner-0] annotations.EntityBinder (EntityBinder.java:419) - Import with entity name users
2017-04-19 19:32:28,829 DEBUG [Scanner-0] annotations.EntityBinder (EntityBinder.java:695) - Bind entity com.example.struts2.model.Users on table users
2017-04-19 19:32:28,909 DEBUG [Scanner-0] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
2017-04-19 19:32:28,923 DEBUG [Scanner-0] annotations.PropertyBinder (PropertyBinder.java:174) - MetadataSourceProcessor property id with lazy=false
2017-04-19 19:32:28,932 DEBUG [Scanner-0] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.example.struts2.model.Users:id]
2017-04-19 19:32:28,940 DEBUG [Scanner-0] annotations.SimpleValueBinder (SimpleValueBinder.java:411) - building SimpleValue for id
2017-04-19 19:32:28,952 DEBUG [Scanner-0] annotations.PropertyBinder (PropertyBinder.java:265) - Building property id
2017-04-19 19:32:28,971 DEBUG [Scanner-0] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2017-04-19 19:32:28,975 DEBUG [Scanner-0] annotations.PropertyBinder (PropertyBinder.java:174) - MetadataSourceProcessor property password with lazy=false
2017-04-19 19:32:28,978 DEBUG [Scanner-0] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.example.struts2.model.Users:password]
2017-04-19 19:32:28,982 DEBUG [Scanner-0] annotations.SimpleValueBinder (SimpleValueBinder.java:411) - building SimpleValue for password
2017-04-19 19:32:28,984 DEBUG [Scanner-0] annotations.PropertyBinder (PropertyBinder.java:265) - Building property password
2017-04-19 19:32:28,988 DEBUG [Scanner-0] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=false}
2017-04-19 19:32:28,990 DEBUG [Scanner-0] annotations.PropertyBinder (PropertyBinder.java:174) - MetadataSourceProcessor property username with lazy=false
2017-04-19 19:32:28,992 DEBUG [Scanner-0] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.example.struts2.model.Users:username]
2017-04-19 19:32:28,995 DEBUG [Scanner-0] annotations.SimpleValueBinder (SimpleValueBinder.java:411) - building SimpleValue for username
2017-04-19 19:32:28,998 DEBUG [Scanner-0] annotations.PropertyBinder (PropertyBinder.java:265) - Building property username
2017-04-19 19:32:29,004 DEBUG [Scanner-0] annotations.SimpleValueBinder (SimpleValueBinder.java:456) - Starting fillSimpleValue for id
2017-04-19 19:32:29,008 DEBUG [Scanner-0] annotations.SimpleValueBinder (SimpleValueBinder.java:456) - Starting fillSimpleValue for password
2017-04-19 19:32:29,011 DEBUG [Scanner-0] annotations.SimpleValueBinder (SimpleValueBinder.java:456) - Starting fillSimpleValue for username
2017-04-19 19:32:29,018 DEBUG [Scanner-0] mapping.PrimaryKey (PrimaryKey.java:35) - Forcing column [id] to be non-null as it is part of the primary key for table [users]
2017-04-19 19:32:29,137 DEBUG [Scanner-0] internal.SessionFactoryImpl (SessionFactoryImpl.java:199) - Building session factory
2017-04-19 19:32:29,143 DEBUG [Scanner-0] cfg.Settings (Settings.java:69) - SessionFactory name : null
2017-04-19 19:32:29,146 DEBUG [Scanner-0] cfg.Settings (Settings.java:70) - Automatic flush during beforeCompletion(): enabled
2017-04-19 19:32:29,149 DEBUG [Scanner-0] cfg.Settings (Settings.java:71) - Automatic session close at end of transaction: disabled
2017-04-19 19:32:29,153 DEBUG [Scanner-0] cfg.Settings (Settings.java:73) - Statistics: disabled
2017-04-19 19:32:29,154 DEBUG [Scanner-0] cfg.Settings (Settings.java:75) - Deleted entity synthetic identifier rollback: disabled
2017-04-19 19:32:29,155 DEBUG [Scanner-0] cfg.Settings (Settings.java:76) - Default entity-mode: pojo
2017-04-19 19:32:29,155 DEBUG [Scanner-0] cfg.Settings (Settings.java:77) - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2017-04-19 19:32:29,155 DEBUG [Scanner-0] cfg.Settings (Settings.java:78) - Allow initialization of lazy state outside session : disabled
2017-04-19 19:32:29,156 DEBUG [Scanner-0] cfg.Settings (Settings.java:80) - Using BatchFetchStyle : LEGACY
2017-04-19 19:32:29,156 DEBUG [Scanner-0] cfg.Settings (Settings.java:81) - Default batch fetch size: -1
2017-04-19 19:32:29,156 DEBUG [Scanner-0] cfg.Settings (Settings.java:82) - Maximum outer join fetch depth: null
2017-04-19 19:32:29,161 DEBUG [Scanner-0] cfg.Settings (Settings.java:83) - Default null ordering: NONE
2017-04-19 19:32:29,164 DEBUG [Scanner-0] cfg.Settings (Settings.java:84) - Order SQL updates by primary key: disabled
2017-04-19 19:32:29,166 DEBUG [Scanner-0] cfg.Settings (Settings.java:85) - Order SQL inserts for batching: disabled
2017-04-19 19:32:29,168 DEBUG [Scanner-0] cfg.Settings (Settings.java:87) - multi-tenancy strategy : NONE
2017-04-19 19:32:29,168 DEBUG [Scanner-0] cfg.Settings (Settings.java:89) - JTA Track by Thread: enabled
2017-04-19 19:32:29,169 DEBUG [Scanner-0] cfg.Settings (Settings.java:91) - Query language substitutions: {}
2017-04-19 19:32:29,171 DEBUG [Scanner-0] cfg.Settings (Settings.java:92) - JPA query language strict compliance: disabled
2017-04-19 19:32:29,172 DEBUG [Scanner-0] cfg.Settings (Settings.java:93) - Named query checking : enabled
2017-04-19 19:32:29,173 DEBUG [Scanner-0] cfg.Settings (Settings.java:95) - Second-level cache: enabled
2017-04-19 19:32:29,174 DEBUG [Scanner-0] cfg.Settings (Settings.java:96) - Second-level query cache: disabled
2017-04-19 19:32:29,176 DEBUG [Scanner-0] cfg.Settings (Settings.java:97) - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@20298993
2017-04-19 19:32:29,179 DEBUG [Scanner-0] cfg.Settings (Settings.java:98) - Second-level cache region prefix: null
2017-04-19 19:32:29,181 DEBUG [Scanner-0] cfg.Settings (Settings.java:99) - Optimize second-level cache for minimal puts: disabled
2017-04-19 19:32:29,182 DEBUG [Scanner-0] cfg.Settings (Settings.java:100) - Structured second-level cache entries: disabled
2017-04-19 19:32:29,184 DEBUG [Scanner-0] cfg.Settings (Settings.java:101) - Second-level cache direct-reference entries: disabled
2017-04-19 19:32:29,186 DEBUG [Scanner-0] cfg.Settings (Settings.java:102) - Automatic eviction of collection cache: disabled
2017-04-19 19:32:29,187 DEBUG [Scanner-0] cfg.Settings (Settings.java:104) - JDBC batch size: 0
2017-04-19 19:32:29,191 DEBUG [Scanner-0] cfg.Settings (Settings.java:105) - JDBC batch updates for versioned data: enabled
2017-04-19 19:32:29,192 DEBUG [Scanner-0] cfg.Settings (Settings.java:106) - Scrollable result sets: enabled
2017-04-19 19:32:29,192 DEBUG [Scanner-0] cfg.Settings (Settings.java:107) - Wrap result sets: disabled
2017-04-19 19:32:29,193 DEBUG [Scanner-0] cfg.Settings (Settings.java:108) - JDBC3 getGeneratedKeys(): enabled
2017-04-19 19:32:29,194 DEBUG [Scanner-0] cfg.Settings (Settings.java:109) - JDBC result set fetch size: null
2017-04-19 19:32:29,197 DEBUG [Scanner-0] cfg.Settings (Settings.java:110) - Connection release mode: AFTER_TRANSACTION
2017-04-19 19:32:29,198 DEBUG [Scanner-0] cfg.Settings (Settings.java:111) - Generate SQL with comments: disabled
2017-04-19 19:32:29,389 DEBUG [Scanner-0] internal.SessionFactoryImpl (SessionFactoryImpl.java:254) - Session factory constructed with filter configurations : {}
2017-04-19 19:32:29,393 DEBUG [Scanner-0] internal.SessionFactoryImpl (SessionFactoryImpl.java:255) - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.SQLServer2008Dialect, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, java.vendor.url=http://java.oracle.com/, user.timezone=Asia/Jakarta, os.name=Linux, java.vm.specification.version=1.8, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, maven.home=/usr/share/maven, sun.cpu.endian=little, user.home=/root, user.language=en, java.specification.vendor=Oracle Corporation, java.home=/usr/lib/jvm/java-8-openjdk-amd64/jre, file.separator=/, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, sun.boot.class.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/classes, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_111-8u111-b14-3-b14, user.name=root, path.separator=:, securerandom.source=file:/dev/./urandom, hibernate.connection.username=SA, os.version=4.8.0-kali2-amd64, java.endorsed.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/endorsed, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:sqlserver://localhost:1433;database=strutsproject, file.encoding=UTF-8, guice.disable.misplaced.annotation.check=true, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.microsoft.sqlserver.jdbc.SQLServerDriver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=/tmp, java.version=1.8.0_111, user.dir=/root/Source/java/struts/struts-project, os.arch=amd64, maven.multiModuleProjectDirectory=/root/Source/java/struts/struts-project, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@41d22771, java.library.path=/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.111-b14, classworlds.conf=/usr/share/maven/bin/m2.conf, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.pool_size=1, java.ext.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
2017-04-19 19:32:29,427 DEBUG [Scanner-0] spi.JaccIntegrator (JaccIntegrator.java:80) - Skipping JACC integration as it was not enabled
2017-04-19 19:32:29,674 DEBUG [Scanner-0] internal.SessionFactoryImpl (SessionFactoryImpl.java:294) - Instantiated session factory
2017-04-19 19:32:29,800 DEBUG [Scanner-0] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [com.example.struts2.model.Users] is safe
2017-04-19 19:32:29,803 DEBUG [Scanner-0] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.struts2.model.Users
2017-04-19 19:32:29,859 DEBUG [Scanner-0] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [com.example.struts2.model.Users] is safe
2017-04-19 19:32:29,861 DEBUG [Scanner-0] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.struts2.model.Users
2017-04-19 19:32:30,086 DEBUG [Scanner-0] entity.AbstractEntityPersister (AbstractEntityPersister.java:3598) - Static SQL for entity: com.example.struts2.model.Users
2017-04-19 19:32:30,090 DEBUG [Scanner-0] entity.AbstractEntityPersister (AbstractEntityPersister.java:3603) -  Version select: select id from users where id =?
2017-04-19 19:32:30,094 DEBUG [Scanner-0] entity.AbstractEntityPersister (AbstractEntityPersister.java:3606) -  Snapshot select: select users_.id, users_.password as password2_0_, users_.username as username3_0_ from users users_ where users_.id=?
2017-04-19 19:32:30,097 DEBUG [Scanner-0] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Insert 0: insert into users (password, username, id) values (?, ?, ?)
2017-04-19 19:32:30,099 DEBUG [Scanner-0] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Update 0: update users set password=?, username=? where id=?
2017-04-19 19:32:30,100 DEBUG [Scanner-0] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Delete 0: delete from users where id=?
2017-04-19 19:32:30,178 DEBUG [Scanner-0] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@742d3c75]
2017-04-19 19:32:30,190 DEBUG [Scanner-0] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-19 19:32:30,193 DEBUG [Scanner-0] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-19 19:32:30,195 DEBUG [Scanner-0] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-19 19:32:30,245 DEBUG [Scanner-0] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-19 19:32:30,257 DEBUG [Scanner-0] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-19 19:32:30,262 DEBUG [Scanner-0] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [NONE]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-19 19:32:30,263 DEBUG [Scanner-0] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67493c29]
2017-04-19 19:32:30,264 DEBUG [Scanner-0] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-19 19:32:30,265 DEBUG [Scanner-0] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-19 19:32:30,266 DEBUG [Scanner-0] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-19 19:32:30,266 DEBUG [Scanner-0] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-19 19:32:30,279 DEBUG [Scanner-0] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-19 19:32:30,280 DEBUG [Scanner-0] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [READ]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-19 19:32:30,281 DEBUG [Scanner-0] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@435a82c4]
2017-04-19 19:32:30,282 DEBUG [Scanner-0] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-19 19:32:30,282 DEBUG [Scanner-0] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-19 19:32:30,283 DEBUG [Scanner-0] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-19 19:32:30,283 DEBUG [Scanner-0] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-19 19:32:30,285 DEBUG [Scanner-0] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-19 19:32:30,285 DEBUG [Scanner-0] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [UPGRADE]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ with (updlock, rowlock) where users0_.id=?
2017-04-19 19:32:30,286 DEBUG [Scanner-0] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78b0df72]
2017-04-19 19:32:30,287 DEBUG [Scanner-0] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-19 19:32:30,288 DEBUG [Scanner-0] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-19 19:32:30,288 DEBUG [Scanner-0] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-19 19:32:30,289 DEBUG [Scanner-0] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-19 19:32:30,290 DEBUG [Scanner-0] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-19 19:32:30,291 DEBUG [Scanner-0] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [UPGRADE_NOWAIT]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ with (updlock, rowlock, nowait) where users0_.id=?
2017-04-19 19:32:30,291 DEBUG [Scanner-0] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2fc8745]
2017-04-19 19:32:30,292 DEBUG [Scanner-0] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-19 19:32:30,293 DEBUG [Scanner-0] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-19 19:32:30,296 DEBUG [Scanner-0] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-19 19:32:30,303 DEBUG [Scanner-0] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-19 19:32:30,305 DEBUG [Scanner-0] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-19 19:32:30,309 DEBUG [Scanner-0] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [UPGRADE_SKIPLOCKED]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ with (updlock, rowlock, readpast) where users0_.id=?
2017-04-19 19:32:30,310 DEBUG [Scanner-0] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a562793]
2017-04-19 19:32:30,312 DEBUG [Scanner-0] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-19 19:32:30,312 DEBUG [Scanner-0] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-19 19:32:30,313 DEBUG [Scanner-0] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-19 19:32:30,314 DEBUG [Scanner-0] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-19 19:32:30,315 DEBUG [Scanner-0] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-19 19:32:30,316 DEBUG [Scanner-0] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [FORCE]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-19 19:32:30,317 DEBUG [Scanner-0] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5223e3f7]
2017-04-19 19:32:30,318 DEBUG [Scanner-0] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-19 19:32:30,319 DEBUG [Scanner-0] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-19 19:32:30,320 DEBUG [Scanner-0] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-19 19:32:30,321 DEBUG [Scanner-0] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-19 19:32:30,322 DEBUG [Scanner-0] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-19 19:32:30,323 DEBUG [Scanner-0] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [PESSIMISTIC_READ]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ with (holdlock, rowlock) where users0_.id=?
2017-04-19 19:32:30,324 DEBUG [Scanner-0] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4059cfa]
2017-04-19 19:32:30,325 DEBUG [Scanner-0] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-19 19:32:30,326 DEBUG [Scanner-0] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-19 19:32:30,326 DEBUG [Scanner-0] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-19 19:32:30,327 DEBUG [Scanner-0] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-19 19:32:30,328 DEBUG [Scanner-0] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-19 19:32:30,329 DEBUG [Scanner-0] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [PESSIMISTIC_WRITE]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ with (updlock, rowlock) where users0_.id=?
2017-04-19 19:32:30,330 DEBUG [Scanner-0] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@613b7d36]
2017-04-19 19:32:30,330 DEBUG [Scanner-0] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-19 19:32:30,331 DEBUG [Scanner-0] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-19 19:32:30,331 DEBUG [Scanner-0] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-19 19:32:30,332 DEBUG [Scanner-0] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-19 19:32:30,334 DEBUG [Scanner-0] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-19 19:32:30,335 DEBUG [Scanner-0] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [PESSIMISTIC_FORCE_INCREMENT]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-19 19:32:30,335 DEBUG [Scanner-0] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44d94b27]
2017-04-19 19:32:30,337 DEBUG [Scanner-0] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-19 19:32:30,338 DEBUG [Scanner-0] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-19 19:32:30,339 DEBUG [Scanner-0] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-19 19:32:30,340 DEBUG [Scanner-0] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-19 19:32:30,341 DEBUG [Scanner-0] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-19 19:32:30,342 DEBUG [Scanner-0] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [OPTIMISTIC]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-19 19:32:30,343 DEBUG [Scanner-0] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27f6e51]
2017-04-19 19:32:30,344 DEBUG [Scanner-0] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-19 19:32:30,345 DEBUG [Scanner-0] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-19 19:32:30,345 DEBUG [Scanner-0] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-19 19:32:30,347 DEBUG [Scanner-0] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-19 19:32:30,348 DEBUG [Scanner-0] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-19 19:32:30,349 DEBUG [Scanner-0] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [OPTIMISTIC_FORCE_INCREMENT]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-19 19:32:30,421 DEBUG [Scanner-0] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_MERGE on entity com.example.struts2.model.Users: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-19 19:32:30,426 DEBUG [Scanner-0] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_REFRESH on entity com.example.struts2.model.Users: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-19 19:32:30,508 DEBUG [Scanner-0] spi.SchemaManagementToolCoordinator (SchemaManagementToolCoordinator.java:56) - No actions specified; doing nothing
2017-04-19 19:32:30,509 DEBUG [Scanner-0] internal.JtaPlatformInitiator (JtaPlatformInitiator.java:42) - No JtaPlatform was specified, checking resolver
2017-04-19 19:32:30,511 DEBUG [Scanner-0] internal.JtaPlatformResolverInitiator (JtaPlatformResolverInitiator.java:33) - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2017-04-19 19:32:30,526 DEBUG [Scanner-0] internal.StandardJtaPlatformResolver (StandardJtaPlatformResolver.java:102) - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2017-04-19 19:32:30,540 DEBUG [Scanner-0] spi.NamedQueryRepository (NamedQueryRepository.java:151) - Checking 0 named HQL queries
2017-04-19 19:32:30,540 DEBUG [Scanner-0] spi.NamedQueryRepository (NamedQueryRepository.java:167) - Checking 0 named SQL queries
2017-04-19 19:32:30,571 DEBUG [Scanner-0] internal.SessionFactoryRegistry (SessionFactoryRegistry.java:52) - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@78371728
2017-04-19 19:32:30,579 DEBUG [Scanner-0] internal.SessionFactoryRegistry (SessionFactoryRegistry.java:74) - Registering SessionFactory: de0e46ba-77f6-463b-879a-97e597bac841 (<unnamed>)
2017-04-19 19:32:30,580 DEBUG [Scanner-0] internal.SessionFactoryRegistry (SessionFactoryRegistry.java:81) - Not binding SessionFactory to JNDI, no JNDI name configured
2017-04-19 19:32:57,952 DEBUG [pool-6-thread-1] internal.PooledConnections (PooledConnections.java:51) - Connection pool now considered primed; min-size will be maintained
2017-04-19 19:33:11,461 DEBUG [Scanner-0] internal.CoreLogging (CoreLogging.java:28) - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2017-04-19 19:33:11,514 DEBUG [Scanner-0] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2017-04-19 19:33:11,525 DEBUG [Scanner-0] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2017-04-19 19:33:11,535 DEBUG [Scanner-0] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2017-04-19 19:33:11,738 INFO  [Scanner-0] hibernate.Version (Version.java:45) - HHH000412: Hibernate Core {5.2.9.Final}
2017-04-19 19:33:11,743 INFO  [Scanner-0] cfg.Environment (Environment.java:213) - HHH000206: hibernate.properties not found
2017-04-19 19:33:11,796 DEBUG [Scanner-0] internal.JaxbCfgProcessor (JaxbCfgProcessor.java:116) - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2017-04-19 19:33:12,011 DEBUG [Scanner-0] cfg.Configuration (Configuration.java:724) - Building session factory using internal StandardServiceRegistryBuilder
2017-04-19 19:33:12,029 DEBUG [Scanner-0] spi.ServiceBinding (ServiceBinding.java:68) - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2017-04-19 19:33:12,033 DEBUG [Scanner-0] cfg.Configuration (Configuration.java:652) - Building session factory using provided StandardServiceRegistry
2017-04-19 19:33:12,073 DEBUG [Scanner-0] internal.RegionFactoryInitiator (RegionFactoryInitiator.java:75) - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2017-04-19 19:33:12,091 INFO  [Scanner-0] java.JavaReflectionManager (JavaReflectionManager.java:66) - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2017-04-19 19:33:12,153 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@2e09fd44
2017-04-19 19:33:12,154 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@2e09fd44
2017-04-19 19:33:12,154 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2e09fd44
2017-04-19 19:33:12,157 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7cbe9ab0
2017-04-19 19:33:12,159 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@55f9c815
2017-04-19 19:33:12,161 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration yes_no -> org.hibernate.type.YesNoType@67cea1f3
2017-04-19 19:33:12,167 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@505e34f2
2017-04-19 19:33:12,167 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@505e34f2
2017-04-19 19:33:12,168 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@505e34f2
2017-04-19 19:33:12,171 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration character -> org.hibernate.type.CharacterType@46d3a7a1
2017-04-19 19:33:12,172 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration char -> org.hibernate.type.CharacterType@46d3a7a1
2017-04-19 19:33:12,172 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@46d3a7a1
2017-04-19 19:33:12,176 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@490973eb
2017-04-19 19:33:12,177 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@490973eb
2017-04-19 19:33:12,177 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@490973eb
2017-04-19 19:33:12,180 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration integer -> org.hibernate.type.IntegerType@466acea2
2017-04-19 19:33:12,181 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration int -> org.hibernate.type.IntegerType@466acea2
2017-04-19 19:33:12,181 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@466acea2
2017-04-19 19:33:12,186 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@6ed893a
2017-04-19 19:33:12,188 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@6ed893a
2017-04-19 19:33:12,189 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6ed893a
2017-04-19 19:33:12,192 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@7ba0deae
2017-04-19 19:33:12,193 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@7ba0deae
2017-04-19 19:33:12,193 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7ba0deae
2017-04-19 19:33:12,196 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@68ed98b1
2017-04-19 19:33:12,197 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@68ed98b1
2017-04-19 19:33:12,198 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@68ed98b1
2017-04-19 19:33:12,201 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@76104ca3
2017-04-19 19:33:12,201 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@76104ca3
2017-04-19 19:33:12,205 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@579e71d6
2017-04-19 19:33:12,206 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@579e71d6
2017-04-19 19:33:12,214 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration string -> org.hibernate.type.StringType@32847ba4
2017-04-19 19:33:12,215 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.String -> org.hibernate.type.StringType@32847ba4
2017-04-19 19:33:12,219 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@66f904dd
2017-04-19 19:33:12,221 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2c63f606
2017-04-19 19:33:12,224 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration url -> org.hibernate.type.UrlType@14607a12
2017-04-19 19:33:12,225 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@14607a12
2017-04-19 19:33:12,228 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Duration -> org.hibernate.type.DurationType@798c6339
2017-04-19 19:33:12,228 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@798c6339
2017-04-19 19:33:12,232 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Instant -> org.hibernate.type.InstantType@14f9e73e
2017-04-19 19:33:12,233 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@14f9e73e
2017-04-19 19:33:12,237 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@64c9250a
2017-04-19 19:33:12,238 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@64c9250a
2017-04-19 19:33:12,241 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@366e2759
2017-04-19 19:33:12,242 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@366e2759
2017-04-19 19:33:12,245 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@55808a4c
2017-04-19 19:33:12,246 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@55808a4c
2017-04-19 19:33:12,249 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1cc6b646
2017-04-19 19:33:12,250 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1cc6b646
2017-04-19 19:33:12,253 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3f910ce2
2017-04-19 19:33:12,253 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3f910ce2
2017-04-19 19:33:12,257 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@d9c7e28
2017-04-19 19:33:12,257 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@d9c7e28
2017-04-19 19:33:12,263 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration date -> org.hibernate.type.DateType@43d78e7b
2017-04-19 19:33:12,265 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@43d78e7b
2017-04-19 19:33:12,268 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration time -> org.hibernate.type.TimeType@6864c640
2017-04-19 19:33:12,269 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6864c640
2017-04-19 19:33:12,272 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration timestamp -> org.hibernate.type.TimestampType@347de33d
2017-04-19 19:33:12,272 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@347de33d
2017-04-19 19:33:12,273 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@347de33d
2017-04-19 19:33:12,276 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@61e5c861
2017-04-19 19:33:12,279 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration calendar -> org.hibernate.type.CalendarType@39213d8a
2017-04-19 19:33:12,280 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@39213d8a
2017-04-19 19:33:12,281 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@39213d8a
2017-04-19 19:33:12,283 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5bca76f4
2017-04-19 19:33:12,286 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration locale -> org.hibernate.type.LocaleType@7df34243
2017-04-19 19:33:12,286 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7df34243
2017-04-19 19:33:12,289 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration currency -> org.hibernate.type.CurrencyType@7d6a99e
2017-04-19 19:33:12,289 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7d6a99e
2017-04-19 19:33:12,292 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1673bdc
2017-04-19 19:33:12,293 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1673bdc
2017-04-19 19:33:12,295 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration class -> org.hibernate.type.ClassType@23ddd959
2017-04-19 19:33:12,296 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@23ddd959
2017-04-19 19:33:12,302 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2dc9f887
2017-04-19 19:33:12,305 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2dc9f887
2017-04-19 19:33:12,309 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@11b59c1b
2017-04-19 19:33:12,317 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration binary -> org.hibernate.type.BinaryType@7321aeb3
2017-04-19 19:33:12,320 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte[] -> org.hibernate.type.BinaryType@7321aeb3
2017-04-19 19:33:12,323 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [B -> org.hibernate.type.BinaryType@7321aeb3
2017-04-19 19:33:12,328 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@21d3cdd6
2017-04-19 19:33:12,331 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@21d3cdd6
2017-04-19 19:33:12,334 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@21d3cdd6
2017-04-19 19:33:12,340 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration row_version -> org.hibernate.type.RowVersionType@292b1c7
2017-04-19 19:33:12,343 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration image -> org.hibernate.type.ImageType@25ca7979
2017-04-19 19:33:12,346 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration characters -> org.hibernate.type.CharArrayType@4121d61
2017-04-19 19:33:12,346 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration char[] -> org.hibernate.type.CharArrayType@4121d61
2017-04-19 19:33:12,347 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [C -> org.hibernate.type.CharArrayType@4121d61
2017-04-19 19:33:12,349 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@218684a6
2017-04-19 19:33:12,350 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@218684a6
2017-04-19 19:33:12,351 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@218684a6
2017-04-19 19:33:12,352 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration text -> org.hibernate.type.TextType@7aa337f9
2017-04-19 19:33:12,354 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ntext -> org.hibernate.type.NTextType@7a18b8d5
2017-04-19 19:33:12,362 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration blob -> org.hibernate.type.BlobType@4fb6cfb3
2017-04-19 19:33:12,362 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4fb6cfb3
2017-04-19 19:33:12,364 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@675ed44b
2017-04-19 19:33:12,374 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration clob -> org.hibernate.type.ClobType@6eb926f4
2017-04-19 19:33:12,374 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6eb926f4
2017-04-19 19:33:12,380 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration nclob -> org.hibernate.type.NClobType@145c6d16
2017-04-19 19:33:12,381 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@145c6d16
2017-04-19 19:33:12,382 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6f88718a
2017-04-19 19:33:12,384 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1ca4f214
2017-04-19 19:33:12,388 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration serializable -> org.hibernate.type.SerializableType@13c76626
2017-04-19 19:33:12,403 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration object -> org.hibernate.type.ObjectType@1d82d5cc
2017-04-19 19:33:12,406 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1d82d5cc
2017-04-19 19:33:12,410 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6500dbe5
2017-04-19 19:33:12,415 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6e275e3c
2017-04-19 19:33:12,416 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@f34a35f
2017-04-19 19:33:12,416 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@11d2096e
2017-04-19 19:33:12,417 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@72ee3742
2017-04-19 19:33:12,417 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@26ec519d
2017-04-19 19:33:12,417 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@ce83044
2017-04-19 19:33:12,418 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@d70c1ce
2017-04-19 19:33:12,447 WARN  [Scanner-0] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:70) - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2017-04-19 19:33:12,474 INFO  [Scanner-0] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:126) - HHH10001005: using driver [com.microsoft.sqlserver.jdbc.SQLServerDriver] at URL [jdbc:sqlserver://localhost:1433;database=strutsproject]
2017-04-19 19:33:12,476 INFO  [Scanner-0] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:132) - HHH10001001: Connection properties: {user=SA, password=SQLServ3r}
2017-04-19 19:33:12,476 INFO  [Scanner-0] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:140) - HHH10001003: Autocommit mode: false
2017-04-19 19:33:12,484 DEBUG [Scanner-0] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:384) - Initializing Connection pool with 1 Connections
2017-04-19 19:33:12,485 INFO  [Scanner-0] internal.PooledConnections (PooledConnections.java:41) - HHH000115: Hibernate connection pool size: 1 (min=1)
2017-04-19 19:33:13,031 DEBUG [Scanner-0] internal.JdbcEnvironmentInitiator (JdbcEnvironmentInitiator.java:72) - Database ->
       name : Microsoft SQL Server
    version : 14.00.405
      major : 14
      minor : 0
2017-04-19 19:33:13,035 DEBUG [Scanner-0] internal.JdbcEnvironmentInitiator (JdbcEnvironmentInitiator.java:83) - Driver ->
       name : Microsoft JDBC Driver 4.0 for SQL Server
    version : 4.0.2206.100
      major : 4
      minor : 0
2017-04-19 19:33:13,039 DEBUG [Scanner-0] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:389) - JDBC version : 4.0
2017-04-19 19:33:13,069 INFO  [Scanner-0] dialect.Dialect (Dialect.java:157) - HHH000400: Using dialect: org.hibernate.dialect.SQLServer2008Dialect
2017-04-19 19:33:13,319 DEBUG [Scanner-0] spi.IdentifierHelperBuilder (IdentifierHelperBuilder.java:191) - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2017-04-19 19:33:13,554 DEBUG [Scanner-0] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2017-04-19 19:33:13,555 DEBUG [Scanner-0] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2017-04-19 19:33:13,558 DEBUG [Scanner-0] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2017-04-19 19:33:13,558 DEBUG [Scanner-0] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2017-04-19 19:33:13,560 DEBUG [Scanner-0] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2017-04-19 19:33:13,562 DEBUG [Scanner-0] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2017-04-19 19:33:13,563 DEBUG [Scanner-0] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2017-04-19 19:33:13,566 DEBUG [Scanner-0] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2017-04-19 19:33:13,568 DEBUG [Scanner-0] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2017-04-19 19:33:13,570 DEBUG [Scanner-0] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2017-04-19 19:33:13,572 DEBUG [Scanner-0] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2017-04-19 19:33:13,574 DEBUG [Scanner-0] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2017-04-19 19:33:13,575 DEBUG [Scanner-0] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2017-04-19 19:33:13,577 DEBUG [Scanner-0] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2017-04-19 19:33:13,642 DEBUG [Scanner-0] relational.Namespace (Namespace.java:47) - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2017-04-19 19:33:13,905 DEBUG [Scanner-0] cfg.AnnotationBinder (AnnotationBinder.java:511) - Binding entity from annotated class: com.example.struts2.model.Users
2017-04-19 19:33:14,114 DEBUG [Scanner-0] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2017-04-19 19:33:14,130 DEBUG [Scanner-0] annotations.EntityBinder (EntityBinder.java:419) - Import with entity name users
2017-04-19 19:33:14,172 DEBUG [Scanner-0] annotations.EntityBinder (EntityBinder.java:695) - Bind entity com.example.struts2.model.Users on table users
2017-04-19 19:33:14,244 DEBUG [Scanner-0] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
2017-04-19 19:33:14,253 DEBUG [Scanner-0] annotations.PropertyBinder (PropertyBinder.java:174) - MetadataSourceProcessor property id with lazy=false
2017-04-19 19:33:14,259 DEBUG [Scanner-0] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.example.struts2.model.Users:id]
2017-04-19 19:33:14,264 DEBUG [Scanner-0] annotations.SimpleValueBinder (SimpleValueBinder.java:411) - building SimpleValue for id
2017-04-19 19:33:14,271 DEBUG [Scanner-0] annotations.PropertyBinder (PropertyBinder.java:265) - Building property id
2017-04-19 19:33:14,380 DEBUG [Scanner-0] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2017-04-19 19:33:14,383 DEBUG [Scanner-0] annotations.PropertyBinder (PropertyBinder.java:174) - MetadataSourceProcessor property password with lazy=false
2017-04-19 19:33:14,386 DEBUG [Scanner-0] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.example.struts2.model.Users:password]
2017-04-19 19:33:14,390 DEBUG [Scanner-0] annotations.SimpleValueBinder (SimpleValueBinder.java:411) - building SimpleValue for password
2017-04-19 19:33:14,393 DEBUG [Scanner-0] annotations.PropertyBinder (PropertyBinder.java:265) - Building property password
2017-04-19 19:33:14,396 DEBUG [Scanner-0] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=false}
2017-04-19 19:33:14,398 DEBUG [Scanner-0] annotations.PropertyBinder (PropertyBinder.java:174) - MetadataSourceProcessor property username with lazy=false
2017-04-19 19:33:14,399 DEBUG [Scanner-0] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.example.struts2.model.Users:username]
2017-04-19 19:33:14,403 DEBUG [Scanner-0] annotations.SimpleValueBinder (SimpleValueBinder.java:411) - building SimpleValue for username
2017-04-19 19:33:14,406 DEBUG [Scanner-0] annotations.PropertyBinder (PropertyBinder.java:265) - Building property username
2017-04-19 19:33:14,413 DEBUG [Scanner-0] annotations.SimpleValueBinder (SimpleValueBinder.java:456) - Starting fillSimpleValue for id
2017-04-19 19:33:14,417 DEBUG [Scanner-0] annotations.SimpleValueBinder (SimpleValueBinder.java:456) - Starting fillSimpleValue for password
2017-04-19 19:33:14,419 DEBUG [Scanner-0] annotations.SimpleValueBinder (SimpleValueBinder.java:456) - Starting fillSimpleValue for username
2017-04-19 19:33:14,429 DEBUG [Scanner-0] mapping.PrimaryKey (PrimaryKey.java:35) - Forcing column [id] to be non-null as it is part of the primary key for table [users]
2017-04-19 19:33:14,837 DEBUG [Scanner-0] internal.SessionFactoryImpl (SessionFactoryImpl.java:199) - Building session factory
2017-04-19 19:33:14,841 DEBUG [Scanner-0] cfg.Settings (Settings.java:69) - SessionFactory name : null
2017-04-19 19:33:14,841 DEBUG [Scanner-0] cfg.Settings (Settings.java:70) - Automatic flush during beforeCompletion(): enabled
2017-04-19 19:33:14,842 DEBUG [Scanner-0] cfg.Settings (Settings.java:71) - Automatic session close at end of transaction: disabled
2017-04-19 19:33:14,842 DEBUG [Scanner-0] cfg.Settings (Settings.java:73) - Statistics: disabled
2017-04-19 19:33:14,843 DEBUG [Scanner-0] cfg.Settings (Settings.java:75) - Deleted entity synthetic identifier rollback: disabled
2017-04-19 19:33:14,843 DEBUG [Scanner-0] cfg.Settings (Settings.java:76) - Default entity-mode: pojo
2017-04-19 19:33:14,844 DEBUG [Scanner-0] cfg.Settings (Settings.java:77) - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2017-04-19 19:33:14,844 DEBUG [Scanner-0] cfg.Settings (Settings.java:78) - Allow initialization of lazy state outside session : disabled
2017-04-19 19:33:14,844 DEBUG [Scanner-0] cfg.Settings (Settings.java:80) - Using BatchFetchStyle : LEGACY
2017-04-19 19:33:14,845 DEBUG [Scanner-0] cfg.Settings (Settings.java:81) - Default batch fetch size: -1
2017-04-19 19:33:14,847 DEBUG [Scanner-0] cfg.Settings (Settings.java:82) - Maximum outer join fetch depth: null
2017-04-19 19:33:14,847 DEBUG [Scanner-0] cfg.Settings (Settings.java:83) - Default null ordering: NONE
2017-04-19 19:33:14,849 DEBUG [Scanner-0] cfg.Settings (Settings.java:84) - Order SQL updates by primary key: disabled
2017-04-19 19:33:14,850 DEBUG [Scanner-0] cfg.Settings (Settings.java:85) - Order SQL inserts for batching: disabled
2017-04-19 19:33:14,851 DEBUG [Scanner-0] cfg.Settings (Settings.java:87) - multi-tenancy strategy : NONE
2017-04-19 19:33:14,852 DEBUG [Scanner-0] cfg.Settings (Settings.java:89) - JTA Track by Thread: enabled
2017-04-19 19:33:14,854 DEBUG [Scanner-0] cfg.Settings (Settings.java:91) - Query language substitutions: {}
2017-04-19 19:33:14,856 DEBUG [Scanner-0] cfg.Settings (Settings.java:92) - JPA query language strict compliance: disabled
2017-04-19 19:33:14,857 DEBUG [Scanner-0] cfg.Settings (Settings.java:93) - Named query checking : enabled
2017-04-19 19:33:14,858 DEBUG [Scanner-0] cfg.Settings (Settings.java:95) - Second-level cache: enabled
2017-04-19 19:33:14,859 DEBUG [Scanner-0] cfg.Settings (Settings.java:96) - Second-level query cache: disabled
2017-04-19 19:33:14,859 DEBUG [Scanner-0] cfg.Settings (Settings.java:97) - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@36a0a935
2017-04-19 19:33:14,860 DEBUG [Scanner-0] cfg.Settings (Settings.java:98) - Second-level cache region prefix: null
2017-04-19 19:33:14,863 DEBUG [Scanner-0] cfg.Settings (Settings.java:99) - Optimize second-level cache for minimal puts: disabled
2017-04-19 19:33:14,864 DEBUG [Scanner-0] cfg.Settings (Settings.java:100) - Structured second-level cache entries: disabled
2017-04-19 19:33:14,864 DEBUG [Scanner-0] cfg.Settings (Settings.java:101) - Second-level cache direct-reference entries: disabled
2017-04-19 19:33:14,865 DEBUG [Scanner-0] cfg.Settings (Settings.java:102) - Automatic eviction of collection cache: disabled
2017-04-19 19:33:14,865 DEBUG [Scanner-0] cfg.Settings (Settings.java:104) - JDBC batch size: 0
2017-04-19 19:33:14,865 DEBUG [Scanner-0] cfg.Settings (Settings.java:105) - JDBC batch updates for versioned data: enabled
2017-04-19 19:33:14,867 DEBUG [Scanner-0] cfg.Settings (Settings.java:106) - Scrollable result sets: enabled
2017-04-19 19:33:14,872 DEBUG [Scanner-0] cfg.Settings (Settings.java:107) - Wrap result sets: disabled
2017-04-19 19:33:14,874 DEBUG [Scanner-0] cfg.Settings (Settings.java:108) - JDBC3 getGeneratedKeys(): enabled
2017-04-19 19:33:14,875 DEBUG [Scanner-0] cfg.Settings (Settings.java:109) - JDBC result set fetch size: null
2017-04-19 19:33:14,875 DEBUG [Scanner-0] cfg.Settings (Settings.java:110) - Connection release mode: AFTER_TRANSACTION
2017-04-19 19:33:14,875 DEBUG [Scanner-0] cfg.Settings (Settings.java:111) - Generate SQL with comments: disabled
2017-04-19 19:33:15,240 DEBUG [Scanner-0] internal.SessionFactoryImpl (SessionFactoryImpl.java:254) - Session factory constructed with filter configurations : {}
2017-04-19 19:33:15,243 DEBUG [Scanner-0] internal.SessionFactoryImpl (SessionFactoryImpl.java:255) - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.SQLServer2008Dialect, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, java.vendor.url=http://java.oracle.com/, user.timezone=Asia/Jakarta, os.name=Linux, java.vm.specification.version=1.8, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, maven.home=/usr/share/maven, sun.cpu.endian=little, user.home=/root, user.language=en, java.specification.vendor=Oracle Corporation, java.home=/usr/lib/jvm/java-8-openjdk-amd64/jre, file.separator=/, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, sun.boot.class.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/classes, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_111-8u111-b14-3-b14, user.name=root, path.separator=:, securerandom.source=file:/dev/./urandom, hibernate.connection.username=SA, os.version=4.8.0-kali2-amd64, java.endorsed.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/endorsed, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:sqlserver://localhost:1433;database=strutsproject, file.encoding=UTF-8, guice.disable.misplaced.annotation.check=true, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.microsoft.sqlserver.jdbc.SQLServerDriver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=/tmp, java.version=1.8.0_111, user.dir=/root/Source/java/struts/struts-project, os.arch=amd64, maven.multiModuleProjectDirectory=/root/Source/java/struts/struts-project, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@6f1ce545, java.library.path=/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.111-b14, classworlds.conf=/usr/share/maven/bin/m2.conf, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.pool_size=1, java.ext.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
2017-04-19 19:33:15,357 DEBUG [Scanner-0] spi.JaccIntegrator (JaccIntegrator.java:80) - Skipping JACC integration as it was not enabled
2017-04-19 19:33:15,362 DEBUG [Scanner-0] internal.SessionFactoryImpl (SessionFactoryImpl.java:294) - Instantiated session factory
2017-04-19 19:33:15,562 DEBUG [Scanner-0] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [com.example.struts2.model.Users] is safe
2017-04-19 19:33:15,564 DEBUG [Scanner-0] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.struts2.model.Users
2017-04-19 19:33:15,681 DEBUG [Scanner-0] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [com.example.struts2.model.Users] is safe
2017-04-19 19:33:15,686 DEBUG [Scanner-0] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.struts2.model.Users
2017-04-19 19:33:15,973 DEBUG [Scanner-0] entity.AbstractEntityPersister (AbstractEntityPersister.java:3598) - Static SQL for entity: com.example.struts2.model.Users
2017-04-19 19:33:15,976 DEBUG [Scanner-0] entity.AbstractEntityPersister (AbstractEntityPersister.java:3603) -  Version select: select id from users where id =?
2017-04-19 19:33:15,982 DEBUG [Scanner-0] entity.AbstractEntityPersister (AbstractEntityPersister.java:3606) -  Snapshot select: select users_.id, users_.password as password2_0_, users_.username as username3_0_ from users users_ where users_.id=?
2017-04-19 19:33:15,983 DEBUG [Scanner-0] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Insert 0: insert into users (password, username, id) values (?, ?, ?)
2017-04-19 19:33:15,984 DEBUG [Scanner-0] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Update 0: update users set password=?, username=? where id=?
2017-04-19 19:33:15,985 DEBUG [Scanner-0] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Delete 0: delete from users where id=?
2017-04-19 19:33:16,070 DEBUG [Scanner-0] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ab12030]
2017-04-19 19:33:16,076 DEBUG [Scanner-0] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-19 19:33:16,076 DEBUG [Scanner-0] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-19 19:33:16,078 DEBUG [Scanner-0] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-19 19:33:16,115 DEBUG [Scanner-0] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-19 19:33:16,145 DEBUG [Scanner-0] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-19 19:33:16,153 DEBUG [Scanner-0] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [NONE]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-19 19:33:16,157 DEBUG [Scanner-0] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63eea0e6]
2017-04-19 19:33:16,158 DEBUG [Scanner-0] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-19 19:33:16,159 DEBUG [Scanner-0] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-19 19:33:16,160 DEBUG [Scanner-0] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-19 19:33:16,160 DEBUG [Scanner-0] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-19 19:33:16,162 DEBUG [Scanner-0] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-19 19:33:16,163 DEBUG [Scanner-0] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [READ]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-19 19:33:16,164 DEBUG [Scanner-0] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32432ee]
2017-04-19 19:33:16,165 DEBUG [Scanner-0] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-19 19:33:16,165 DEBUG [Scanner-0] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-19 19:33:16,166 DEBUG [Scanner-0] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-19 19:33:16,167 DEBUG [Scanner-0] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-19 19:33:16,168 DEBUG [Scanner-0] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-19 19:33:16,170 DEBUG [Scanner-0] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [UPGRADE]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ with (updlock, rowlock) where users0_.id=?
2017-04-19 19:33:16,170 DEBUG [Scanner-0] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7fc44e14]
2017-04-19 19:33:16,171 DEBUG [Scanner-0] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-19 19:33:16,172 DEBUG [Scanner-0] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-19 19:33:16,172 DEBUG [Scanner-0] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-19 19:33:16,173 DEBUG [Scanner-0] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-19 19:33:16,175 DEBUG [Scanner-0] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-19 19:33:16,175 DEBUG [Scanner-0] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [UPGRADE_NOWAIT]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ with (updlock, rowlock, nowait) where users0_.id=?
2017-04-19 19:33:16,176 DEBUG [Scanner-0] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@197931ad]
2017-04-19 19:33:16,177 DEBUG [Scanner-0] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-19 19:33:16,178 DEBUG [Scanner-0] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-19 19:33:16,179 DEBUG [Scanner-0] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-19 19:33:16,180 DEBUG [Scanner-0] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-19 19:33:16,181 DEBUG [Scanner-0] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-19 19:33:16,182 DEBUG [Scanner-0] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [UPGRADE_SKIPLOCKED]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ with (updlock, rowlock, readpast) where users0_.id=?
2017-04-19 19:33:16,182 DEBUG [Scanner-0] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7449061b]
2017-04-19 19:33:16,183 DEBUG [Scanner-0] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-19 19:33:16,184 DEBUG [Scanner-0] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-19 19:33:16,185 DEBUG [Scanner-0] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-19 19:33:16,186 DEBUG [Scanner-0] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-19 19:33:16,187 DEBUG [Scanner-0] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-19 19:33:16,189 DEBUG [Scanner-0] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [FORCE]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-19 19:33:16,190 DEBUG [Scanner-0] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59c35001]
2017-04-19 19:33:16,190 DEBUG [Scanner-0] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-19 19:33:16,191 DEBUG [Scanner-0] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-19 19:33:16,191 DEBUG [Scanner-0] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-19 19:33:16,192 DEBUG [Scanner-0] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-19 19:33:16,193 DEBUG [Scanner-0] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-19 19:33:16,194 DEBUG [Scanner-0] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [PESSIMISTIC_READ]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ with (holdlock, rowlock) where users0_.id=?
2017-04-19 19:33:16,195 DEBUG [Scanner-0] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ec36d08]
2017-04-19 19:33:16,196 DEBUG [Scanner-0] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-19 19:33:16,197 DEBUG [Scanner-0] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-19 19:33:16,197 DEBUG [Scanner-0] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-19 19:33:16,198 DEBUG [Scanner-0] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-19 19:33:16,199 DEBUG [Scanner-0] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-19 19:33:16,202 DEBUG [Scanner-0] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [PESSIMISTIC_WRITE]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ with (updlock, rowlock) where users0_.id=?
2017-04-19 19:33:16,203 DEBUG [Scanner-0] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3bf445fa]
2017-04-19 19:33:16,204 DEBUG [Scanner-0] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-19 19:33:16,205 DEBUG [Scanner-0] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-19 19:33:16,205 DEBUG [Scanner-0] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-19 19:33:16,206 DEBUG [Scanner-0] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-19 19:33:16,208 DEBUG [Scanner-0] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-19 19:33:16,208 DEBUG [Scanner-0] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [PESSIMISTIC_FORCE_INCREMENT]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-19 19:33:16,209 DEBUG [Scanner-0] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2aec4572]
2017-04-19 19:33:16,210 DEBUG [Scanner-0] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-19 19:33:16,211 DEBUG [Scanner-0] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-19 19:33:16,211 DEBUG [Scanner-0] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-19 19:33:16,212 DEBUG [Scanner-0] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-19 19:33:16,213 DEBUG [Scanner-0] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-19 19:33:16,214 DEBUG [Scanner-0] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [OPTIMISTIC]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-19 19:33:16,215 DEBUG [Scanner-0] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@690dd04d]
2017-04-19 19:33:16,216 DEBUG [Scanner-0] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-19 19:33:16,216 DEBUG [Scanner-0] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-19 19:33:16,217 DEBUG [Scanner-0] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-19 19:33:16,218 DEBUG [Scanner-0] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-19 19:33:16,219 DEBUG [Scanner-0] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-19 19:33:16,220 DEBUG [Scanner-0] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [OPTIMISTIC_FORCE_INCREMENT]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-19 19:33:16,271 DEBUG [Scanner-0] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_MERGE on entity com.example.struts2.model.Users: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-19 19:33:16,272 DEBUG [Scanner-0] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_REFRESH on entity com.example.struts2.model.Users: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-19 19:33:16,332 DEBUG [Scanner-0] spi.SchemaManagementToolCoordinator (SchemaManagementToolCoordinator.java:56) - No actions specified; doing nothing
2017-04-19 19:33:16,333 DEBUG [Scanner-0] internal.JtaPlatformInitiator (JtaPlatformInitiator.java:42) - No JtaPlatform was specified, checking resolver
2017-04-19 19:33:16,334 DEBUG [Scanner-0] internal.JtaPlatformResolverInitiator (JtaPlatformResolverInitiator.java:33) - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2017-04-19 19:33:16,348 DEBUG [Scanner-0] internal.StandardJtaPlatformResolver (StandardJtaPlatformResolver.java:102) - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2017-04-19 19:33:16,350 DEBUG [Scanner-0] spi.NamedQueryRepository (NamedQueryRepository.java:151) - Checking 0 named HQL queries
2017-04-19 19:33:16,350 DEBUG [Scanner-0] spi.NamedQueryRepository (NamedQueryRepository.java:167) - Checking 0 named SQL queries
2017-04-19 19:33:16,355 DEBUG [Scanner-0] internal.SessionFactoryRegistry (SessionFactoryRegistry.java:52) - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@38ac6881
2017-04-19 19:33:16,360 DEBUG [Scanner-0] internal.SessionFactoryRegistry (SessionFactoryRegistry.java:74) - Registering SessionFactory: 1d1ff63e-4337-4271-a7ca-f4b6df258f81 (<unnamed>)
2017-04-19 19:33:16,361 DEBUG [Scanner-0] internal.SessionFactoryRegistry (SessionFactoryRegistry.java:81) - Not binding SessionFactory to JNDI, no JNDI name configured
2017-04-19 19:33:43,008 DEBUG [pool-9-thread-1] internal.PooledConnections (PooledConnections.java:51) - Connection pool now considered primed; min-size will be maintained
2017-04-24 09:28:04,533 DEBUG [main] internal.CoreLogging (CoreLogging.java:28) - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2017-04-24 09:28:04,567 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2017-04-24 09:28:04,575 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2017-04-24 09:28:04,585 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2017-04-24 09:28:04,994 INFO  [main] hibernate.Version (Version.java:45) - HHH000412: Hibernate Core {5.2.9.Final}
2017-04-24 09:28:05,003 INFO  [main] cfg.Environment (Environment.java:213) - HHH000206: hibernate.properties not found
2017-04-24 09:28:05,072 DEBUG [main] internal.JaxbCfgProcessor (JaxbCfgProcessor.java:116) - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2017-04-24 09:28:05,804 DEBUG [main] cfg.Configuration (Configuration.java:724) - Building session factory using internal StandardServiceRegistryBuilder
2017-04-24 09:28:05,818 DEBUG [main] spi.ServiceBinding (ServiceBinding.java:68) - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2017-04-24 09:28:05,819 DEBUG [main] cfg.Configuration (Configuration.java:652) - Building session factory using provided StandardServiceRegistry
2017-04-24 09:28:05,867 DEBUG [main] internal.RegionFactoryInitiator (RegionFactoryInitiator.java:75) - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2017-04-24 09:28:05,887 INFO  [main] java.JavaReflectionManager (JavaReflectionManager.java:66) - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2017-04-24 09:28:05,940 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@61bcbcce
2017-04-24 09:28:05,942 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@61bcbcce
2017-04-24 09:28:05,943 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@61bcbcce
2017-04-24 09:28:05,945 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@15efda6c
2017-04-24 09:28:05,948 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@404eca05
2017-04-24 09:28:05,951 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration yes_no -> org.hibernate.type.YesNoType@17092fff
2017-04-24 09:28:05,957 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@643d2dae
2017-04-24 09:28:05,958 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@643d2dae
2017-04-24 09:28:05,959 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@643d2dae
2017-04-24 09:28:05,966 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration character -> org.hibernate.type.CharacterType@46e64760
2017-04-24 09:28:05,968 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration char -> org.hibernate.type.CharacterType@46e64760
2017-04-24 09:28:05,968 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@46e64760
2017-04-24 09:28:05,972 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@c017175
2017-04-24 09:28:05,974 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@c017175
2017-04-24 09:28:05,974 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@c017175
2017-04-24 09:28:05,978 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration integer -> org.hibernate.type.IntegerType@7af3874e
2017-04-24 09:28:05,979 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration int -> org.hibernate.type.IntegerType@7af3874e
2017-04-24 09:28:05,979 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7af3874e
2017-04-24 09:28:05,983 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@70d63e05
2017-04-24 09:28:05,984 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@70d63e05
2017-04-24 09:28:05,985 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@70d63e05
2017-04-24 09:28:05,989 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@1e1b061
2017-04-24 09:28:05,990 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@1e1b061
2017-04-24 09:28:05,990 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1e1b061
2017-04-24 09:28:05,994 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@6c0905f6
2017-04-24 09:28:05,994 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@6c0905f6
2017-04-24 09:28:05,995 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6c0905f6
2017-04-24 09:28:05,999 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1391af3b
2017-04-24 09:28:06,000 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1391af3b
2017-04-24 09:28:06,002 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3a8d467e
2017-04-24 09:28:06,003 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3a8d467e
2017-04-24 09:28:06,007 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration string -> org.hibernate.type.StringType@135a8c6f
2017-04-24 09:28:06,008 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.String -> org.hibernate.type.StringType@135a8c6f
2017-04-24 09:28:06,012 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2ae62bb6
2017-04-24 09:28:06,014 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@43bf5397
2017-04-24 09:28:06,018 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration url -> org.hibernate.type.UrlType@516462cc
2017-04-24 09:28:06,019 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@516462cc
2017-04-24 09:28:06,025 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Duration -> org.hibernate.type.DurationType@3679d92e
2017-04-24 09:28:06,026 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@3679d92e
2017-04-24 09:28:06,106 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Instant -> org.hibernate.type.InstantType@2596d7f4
2017-04-24 09:28:06,109 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2596d7f4
2017-04-24 09:28:06,118 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@3d1f558a
2017-04-24 09:28:06,122 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@3d1f558a
2017-04-24 09:28:06,138 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@2f7efd0b
2017-04-24 09:28:06,141 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@2f7efd0b
2017-04-24 09:28:06,148 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@d2291de
2017-04-24 09:28:06,149 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@d2291de
2017-04-24 09:28:06,156 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1e236278
2017-04-24 09:28:06,162 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1e236278
2017-04-24 09:28:06,169 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4d6ccc97
2017-04-24 09:28:06,172 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4d6ccc97
2017-04-24 09:28:06,186 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@79518e00
2017-04-24 09:28:06,189 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@79518e00
2017-04-24 09:28:06,198 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration date -> org.hibernate.type.DateType@73809e7
2017-04-24 09:28:06,201 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@73809e7
2017-04-24 09:28:06,207 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration time -> org.hibernate.type.TimeType@67507df
2017-04-24 09:28:06,208 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@67507df
2017-04-24 09:28:06,212 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration timestamp -> org.hibernate.type.TimestampType@33feb805
2017-04-24 09:28:06,213 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@33feb805
2017-04-24 09:28:06,214 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@33feb805
2017-04-24 09:28:06,220 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@34332b8d
2017-04-24 09:28:06,224 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration calendar -> org.hibernate.type.CalendarType@7cca01a8
2017-04-24 09:28:06,225 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7cca01a8
2017-04-24 09:28:06,226 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7cca01a8
2017-04-24 09:28:06,228 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7a4d582c
2017-04-24 09:28:06,231 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration locale -> org.hibernate.type.LocaleType@4d1ff6b1
2017-04-24 09:28:06,232 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4d1ff6b1
2017-04-24 09:28:06,235 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration currency -> org.hibernate.type.CurrencyType@7d247660
2017-04-24 09:28:06,236 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7d247660
2017-04-24 09:28:06,238 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@513b52af
2017-04-24 09:28:06,239 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@513b52af
2017-04-24 09:28:06,243 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration class -> org.hibernate.type.ClassType@4ed4a7e4
2017-04-24 09:28:06,244 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4ed4a7e4
2017-04-24 09:28:06,248 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@30b975ad
2017-04-24 09:28:06,250 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@30b975ad
2017-04-24 09:28:06,253 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@470d183
2017-04-24 09:28:06,256 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration binary -> org.hibernate.type.BinaryType@3ddeaa5f
2017-04-24 09:28:06,257 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte[] -> org.hibernate.type.BinaryType@3ddeaa5f
2017-04-24 09:28:06,258 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [B -> org.hibernate.type.BinaryType@3ddeaa5f
2017-04-24 09:28:06,260 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3bec5821
2017-04-24 09:28:06,263 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3bec5821
2017-04-24 09:28:06,264 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3bec5821
2017-04-24 09:28:06,271 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration row_version -> org.hibernate.type.RowVersionType@176555c
2017-04-24 09:28:06,273 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration image -> org.hibernate.type.ImageType@97a145b
2017-04-24 09:28:06,276 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration characters -> org.hibernate.type.CharArrayType@526a9908
2017-04-24 09:28:06,277 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration char[] -> org.hibernate.type.CharArrayType@526a9908
2017-04-24 09:28:06,278 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [C -> org.hibernate.type.CharArrayType@526a9908
2017-04-24 09:28:06,280 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@60a19573
2017-04-24 09:28:06,281 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@60a19573
2017-04-24 09:28:06,282 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@60a19573
2017-04-24 09:28:06,286 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration text -> org.hibernate.type.TextType@4db60246
2017-04-24 09:28:06,290 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ntext -> org.hibernate.type.NTextType@34d45ec0
2017-04-24 09:28:06,299 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration blob -> org.hibernate.type.BlobType@22f4f8f2
2017-04-24 09:28:06,300 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@22f4f8f2
2017-04-24 09:28:06,303 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@73971965
2017-04-24 09:28:06,312 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration clob -> org.hibernate.type.ClobType@7c011174
2017-04-24 09:28:06,313 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7c011174
2017-04-24 09:28:06,320 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration nclob -> org.hibernate.type.NClobType@21a02556
2017-04-24 09:28:06,321 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@21a02556
2017-04-24 09:28:06,323 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@10a98392
2017-04-24 09:28:06,325 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1945113f
2017-04-24 09:28:06,329 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration serializable -> org.hibernate.type.SerializableType@1d6d1d42
2017-04-24 09:28:06,335 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration object -> org.hibernate.type.ObjectType@56382bc9
2017-04-24 09:28:06,336 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@56382bc9
2017-04-24 09:28:06,338 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6ba060f3
2017-04-24 09:28:06,339 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7c51782d
2017-04-24 09:28:06,339 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@77bc2e16
2017-04-24 09:28:06,340 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@48e8c32a
2017-04-24 09:28:06,340 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@20a7953c
2017-04-24 09:28:06,341 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@57c00115
2017-04-24 09:28:06,341 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@411a5965
2017-04-24 09:28:06,342 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4fe533ff
2017-04-24 09:28:06,386 WARN  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:70) - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2017-04-24 09:28:06,463 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:126) - HHH10001005: using driver [com.microsoft.sqlserver.jdbc.SQLServerDriver] at URL [jdbc:sqlserver://localhost:1433;database=strutsproject]
2017-04-24 09:28:06,467 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:132) - HHH10001001: Connection properties: {user=SA, password=SQLServ3r}
2017-04-24 09:28:06,471 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:140) - HHH10001003: Autocommit mode: false
2017-04-24 09:28:06,482 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:384) - Initializing Connection pool with 1 Connections
2017-04-24 09:28:06,486 INFO  [main] internal.PooledConnections (PooledConnections.java:41) - HHH000115: Hibernate connection pool size: 1 (min=1)
2017-04-24 09:32:45,337 DEBUG [main] internal.CoreLogging (CoreLogging.java:28) - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2017-04-24 09:32:45,374 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2017-04-24 09:32:45,381 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2017-04-24 09:32:45,394 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2017-04-24 09:32:45,838 INFO  [main] hibernate.Version (Version.java:45) - HHH000412: Hibernate Core {5.2.9.Final}
2017-04-24 09:32:45,843 INFO  [main] cfg.Environment (Environment.java:213) - HHH000206: hibernate.properties not found
2017-04-24 09:32:45,962 DEBUG [main] internal.JaxbCfgProcessor (JaxbCfgProcessor.java:116) - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2017-04-24 09:32:46,571 DEBUG [main] cfg.Configuration (Configuration.java:724) - Building session factory using internal StandardServiceRegistryBuilder
2017-04-24 09:32:46,588 DEBUG [main] spi.ServiceBinding (ServiceBinding.java:68) - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2017-04-24 09:32:46,591 DEBUG [main] cfg.Configuration (Configuration.java:652) - Building session factory using provided StandardServiceRegistry
2017-04-24 09:32:46,650 DEBUG [main] internal.RegionFactoryInitiator (RegionFactoryInitiator.java:75) - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2017-04-24 09:32:46,675 INFO  [main] java.JavaReflectionManager (JavaReflectionManager.java:66) - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2017-04-24 09:32:46,747 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@2ab26378
2017-04-24 09:32:46,753 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@2ab26378
2017-04-24 09:32:46,754 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2ab26378
2017-04-24 09:32:46,756 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@17092fff
2017-04-24 09:32:46,768 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@643d2dae
2017-04-24 09:32:46,780 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration yes_no -> org.hibernate.type.YesNoType@2f9a4401
2017-04-24 09:32:46,788 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@6f044c58
2017-04-24 09:32:46,800 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@6f044c58
2017-04-24 09:32:46,805 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6f044c58
2017-04-24 09:32:46,812 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration character -> org.hibernate.type.CharacterType@4f3faa70
2017-04-24 09:32:46,816 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration char -> org.hibernate.type.CharacterType@4f3faa70
2017-04-24 09:32:46,822 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4f3faa70
2017-04-24 09:32:46,828 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@4b31a708
2017-04-24 09:32:46,829 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@4b31a708
2017-04-24 09:32:46,830 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4b31a708
2017-04-24 09:32:46,837 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration integer -> org.hibernate.type.IntegerType@43984213
2017-04-24 09:32:46,841 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration int -> org.hibernate.type.IntegerType@43984213
2017-04-24 09:32:46,844 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@43984213
2017-04-24 09:32:46,853 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@38f77cd9
2017-04-24 09:32:46,857 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@38f77cd9
2017-04-24 09:32:46,860 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@38f77cd9
2017-04-24 09:32:46,869 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@4483d35
2017-04-24 09:32:46,873 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@4483d35
2017-04-24 09:32:46,879 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4483d35
2017-04-24 09:32:46,896 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@3762c4fc
2017-04-24 09:32:46,899 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@3762c4fc
2017-04-24 09:32:46,904 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3762c4fc
2017-04-24 09:32:46,912 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@135a8c6f
2017-04-24 09:32:46,923 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@135a8c6f
2017-04-24 09:32:46,929 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2ae62bb6
2017-04-24 09:32:46,943 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2ae62bb6
2017-04-24 09:32:46,947 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration string -> org.hibernate.type.StringType@43bf5397
2017-04-24 09:32:46,948 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.String -> org.hibernate.type.StringType@43bf5397
2017-04-24 09:32:46,955 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@516462cc
2017-04-24 09:32:46,962 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3679d92e
2017-04-24 09:32:46,974 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration url -> org.hibernate.type.UrlType@16a35bd
2017-04-24 09:32:46,978 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@16a35bd
2017-04-24 09:32:47,003 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Duration -> org.hibernate.type.DurationType@6342ff7f
2017-04-24 09:32:47,006 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@6342ff7f
2017-04-24 09:32:47,086 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Instant -> org.hibernate.type.InstantType@69f0b0f4
2017-04-24 09:32:47,087 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@69f0b0f4
2017-04-24 09:32:47,095 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@177c41d7
2017-04-24 09:32:47,096 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@177c41d7
2017-04-24 09:32:47,117 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@11f9535b
2017-04-24 09:32:47,118 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@11f9535b
2017-04-24 09:32:47,129 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@4d6ccc97
2017-04-24 09:32:47,131 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@4d6ccc97
2017-04-24 09:32:47,136 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@149b0577
2017-04-24 09:32:47,137 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@149b0577
2017-04-24 09:32:47,143 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@7be1ce6a
2017-04-24 09:32:47,144 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@7be1ce6a
2017-04-24 09:32:47,170 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@290e8cab
2017-04-24 09:32:47,175 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@290e8cab
2017-04-24 09:32:47,180 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration date -> org.hibernate.type.DateType@33feb805
2017-04-24 09:32:47,186 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@33feb805
2017-04-24 09:32:47,195 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration time -> org.hibernate.type.TimeType@6f8aba08
2017-04-24 09:32:47,196 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6f8aba08
2017-04-24 09:32:47,207 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration timestamp -> org.hibernate.type.TimestampType@35c9a231
2017-04-24 09:32:47,208 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@35c9a231
2017-04-24 09:32:47,209 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@35c9a231
2017-04-24 09:32:47,222 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@45e9b12d
2017-04-24 09:32:47,236 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration calendar -> org.hibernate.type.CalendarType@329548d0
2017-04-24 09:32:47,237 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@329548d0
2017-04-24 09:32:47,239 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@329548d0
2017-04-24 09:32:47,246 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7d247660
2017-04-24 09:32:47,252 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration locale -> org.hibernate.type.LocaleType@513b52af
2017-04-24 09:32:47,253 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@513b52af
2017-04-24 09:32:47,264 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration currency -> org.hibernate.type.CurrencyType@4ed4a7e4
2017-04-24 09:32:47,267 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4ed4a7e4
2017-04-24 09:32:47,276 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@5634a861
2017-04-24 09:32:47,278 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5634a861
2017-04-24 09:32:47,283 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration class -> org.hibernate.type.ClassType@75e09567
2017-04-24 09:32:47,284 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@75e09567
2017-04-24 09:32:47,288 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7f608e21
2017-04-24 09:32:47,290 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7f608e21
2017-04-24 09:32:47,293 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3bec5821
2017-04-24 09:32:47,296 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration binary -> org.hibernate.type.BinaryType@176555c
2017-04-24 09:32:47,297 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte[] -> org.hibernate.type.BinaryType@176555c
2017-04-24 09:32:47,298 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [B -> org.hibernate.type.BinaryType@176555c
2017-04-24 09:32:47,303 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@97a145b
2017-04-24 09:32:47,305 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@97a145b
2017-04-24 09:32:47,306 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@97a145b
2017-04-24 09:32:47,309 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration row_version -> org.hibernate.type.RowVersionType@526a9908
2017-04-24 09:32:47,314 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration image -> org.hibernate.type.ImageType@60a19573
2017-04-24 09:32:47,319 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration characters -> org.hibernate.type.CharArrayType@4db60246
2017-04-24 09:32:47,320 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration char[] -> org.hibernate.type.CharArrayType@4db60246
2017-04-24 09:32:47,321 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [C -> org.hibernate.type.CharArrayType@4db60246
2017-04-24 09:32:47,325 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@34d45ec0
2017-04-24 09:32:47,327 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@34d45ec0
2017-04-24 09:32:47,328 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@34d45ec0
2017-04-24 09:32:47,333 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration text -> org.hibernate.type.TextType@3ce443f9
2017-04-24 09:32:47,337 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ntext -> org.hibernate.type.NTextType@7523a3dc
2017-04-24 09:32:47,347 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration blob -> org.hibernate.type.BlobType@64f981e2
2017-04-24 09:32:47,349 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@64f981e2
2017-04-24 09:32:47,354 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@59bbb974
2017-04-24 09:32:47,363 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration clob -> org.hibernate.type.ClobType@64920dc2
2017-04-24 09:32:47,364 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@64920dc2
2017-04-24 09:32:47,373 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration nclob -> org.hibernate.type.NClobType@3d90eeb3
2017-04-24 09:32:47,374 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3d90eeb3
2017-04-24 09:32:47,376 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1d6d1d42
2017-04-24 09:32:47,378 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2f894ad9
2017-04-24 09:32:47,383 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration serializable -> org.hibernate.type.SerializableType@34585ac9
2017-04-24 09:32:47,391 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration object -> org.hibernate.type.ObjectType@4fe533ff
2017-04-24 09:32:47,392 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4fe533ff
2017-04-24 09:32:47,405 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@17aa8a11
2017-04-24 09:32:47,406 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@71b639d0
2017-04-24 09:32:47,411 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@18a25bbd
2017-04-24 09:32:47,411 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5d5b9ecb
2017-04-24 09:32:47,413 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1ee27d73
2017-04-24 09:32:47,416 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5e5aafc6
2017-04-24 09:32:47,419 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@542f6803
2017-04-24 09:32:47,426 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5583098b
2017-04-24 09:32:47,460 WARN  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:70) - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2017-04-24 09:32:47,521 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:126) - HHH10001005: using driver [com.microsoft.sqlserver.jdbc.SQLServerDriver] at URL [jdbc:sqlserver://localhost:1433;database=strutsproject]
2017-04-24 09:32:47,523 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:132) - HHH10001001: Connection properties: {user=SA, password=SQLServ3r}
2017-04-24 09:32:47,525 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:140) - HHH10001003: Autocommit mode: false
2017-04-24 09:32:47,544 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:384) - Initializing Connection pool with 1 Connections
2017-04-24 09:32:47,545 INFO  [main] internal.PooledConnections (PooledConnections.java:41) - HHH000115: Hibernate connection pool size: 1 (min=1)
2017-04-24 09:37:45,804 DEBUG [main] internal.CoreLogging (CoreLogging.java:28) - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2017-04-24 09:37:45,898 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2017-04-24 09:37:45,918 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2017-04-24 09:37:45,945 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2017-04-24 09:37:46,592 INFO  [main] hibernate.Version (Version.java:45) - HHH000412: Hibernate Core {5.2.9.Final}
2017-04-24 09:37:46,602 INFO  [main] cfg.Environment (Environment.java:213) - HHH000206: hibernate.properties not found
2017-04-24 09:37:46,668 DEBUG [main] internal.JaxbCfgProcessor (JaxbCfgProcessor.java:116) - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2017-04-24 09:37:47,355 DEBUG [main] cfg.Configuration (Configuration.java:724) - Building session factory using internal StandardServiceRegistryBuilder
2017-04-24 09:37:47,377 DEBUG [main] spi.ServiceBinding (ServiceBinding.java:68) - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2017-04-24 09:37:47,378 DEBUG [main] cfg.Configuration (Configuration.java:652) - Building session factory using provided StandardServiceRegistry
2017-04-24 09:37:47,449 DEBUG [main] internal.RegionFactoryInitiator (RegionFactoryInitiator.java:75) - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2017-04-24 09:37:47,499 INFO  [main] java.JavaReflectionManager (JavaReflectionManager.java:66) - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2017-04-24 09:37:47,616 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@61a91c9b
2017-04-24 09:37:47,617 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@61a91c9b
2017-04-24 09:37:47,618 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@61a91c9b
2017-04-24 09:37:47,621 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@462e1e64
2017-04-24 09:37:47,624 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@22c75c01
2017-04-24 09:37:47,626 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration yes_no -> org.hibernate.type.YesNoType@43982337
2017-04-24 09:37:47,641 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@18371d89
2017-04-24 09:37:47,644 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@18371d89
2017-04-24 09:37:47,645 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@18371d89
2017-04-24 09:37:47,650 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration character -> org.hibernate.type.CharacterType@68565bc7
2017-04-24 09:37:47,652 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration char -> org.hibernate.type.CharacterType@68565bc7
2017-04-24 09:37:47,653 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@68565bc7
2017-04-24 09:37:47,658 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@485e13d7
2017-04-24 09:37:47,661 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@485e13d7
2017-04-24 09:37:47,662 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@485e13d7
2017-04-24 09:37:47,665 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration integer -> org.hibernate.type.IntegerType@3a790e40
2017-04-24 09:37:47,666 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration int -> org.hibernate.type.IntegerType@3a790e40
2017-04-24 09:37:47,670 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3a790e40
2017-04-24 09:37:47,675 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@60c73e58
2017-04-24 09:37:47,676 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@60c73e58
2017-04-24 09:37:47,677 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@60c73e58
2017-04-24 09:37:47,682 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@5a034157
2017-04-24 09:37:47,688 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@5a034157
2017-04-24 09:37:47,689 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5a034157
2017-04-24 09:37:47,694 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@3a8d467e
2017-04-24 09:37:47,695 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@3a8d467e
2017-04-24 09:37:47,696 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3a8d467e
2017-04-24 09:37:47,705 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3d19d85
2017-04-24 09:37:47,706 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3d19d85
2017-04-24 09:37:47,709 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@42aae04d
2017-04-24 09:37:47,710 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@42aae04d
2017-04-24 09:37:47,716 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration string -> org.hibernate.type.StringType@7426a448
2017-04-24 09:37:47,717 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.String -> org.hibernate.type.StringType@7426a448
2017-04-24 09:37:47,720 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1e3e1014
2017-04-24 09:37:47,722 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4ee25d80
2017-04-24 09:37:47,728 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration url -> org.hibernate.type.UrlType@633cc6b5
2017-04-24 09:37:47,732 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@633cc6b5
2017-04-24 09:37:47,737 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Duration -> org.hibernate.type.DurationType@5ceecfee
2017-04-24 09:37:47,738 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@5ceecfee
2017-04-24 09:37:47,810 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Instant -> org.hibernate.type.InstantType@6801b414
2017-04-24 09:37:47,811 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6801b414
2017-04-24 09:37:47,835 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@d2291de
2017-04-24 09:37:47,836 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@d2291de
2017-04-24 09:37:47,852 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@1fc713c9
2017-04-24 09:37:47,856 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@1fc713c9
2017-04-24 09:37:47,862 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@6848a051
2017-04-24 09:37:47,865 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@6848a051
2017-04-24 09:37:47,869 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2b0b7e5a
2017-04-24 09:37:47,870 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2b0b7e5a
2017-04-24 09:37:47,874 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@68a78f3c
2017-04-24 09:37:47,877 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@68a78f3c
2017-04-24 09:37:47,901 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@692dba54
2017-04-24 09:37:47,903 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@692dba54
2017-04-24 09:37:47,908 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration date -> org.hibernate.type.DateType@724b939e
2017-04-24 09:37:47,911 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@724b939e
2017-04-24 09:37:47,918 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration time -> org.hibernate.type.TimeType@462abec3
2017-04-24 09:37:47,919 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@462abec3
2017-04-24 09:37:47,924 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration timestamp -> org.hibernate.type.TimestampType@3dc95b8b
2017-04-24 09:37:47,925 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3dc95b8b
2017-04-24 09:37:47,926 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3dc95b8b
2017-04-24 09:37:47,933 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@45f756e6
2017-04-24 09:37:47,936 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration calendar -> org.hibernate.type.CalendarType@656f62dc
2017-04-24 09:37:47,937 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@656f62dc
2017-04-24 09:37:47,938 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@656f62dc
2017-04-24 09:37:47,942 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4fdca00a
2017-04-24 09:37:47,949 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration locale -> org.hibernate.type.LocaleType@1a3e8e24
2017-04-24 09:37:47,951 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1a3e8e24
2017-04-24 09:37:47,956 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration currency -> org.hibernate.type.CurrencyType@50448409
2017-04-24 09:37:47,958 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@50448409
2017-04-24 09:37:47,961 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@30b975ad
2017-04-24 09:37:47,962 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@30b975ad
2017-04-24 09:37:47,969 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration class -> org.hibernate.type.ClassType@ea52184
2017-04-24 09:37:47,970 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@ea52184
2017-04-24 09:37:47,975 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4086d8fb
2017-04-24 09:37:47,982 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4086d8fb
2017-04-24 09:37:47,984 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@77c10a5f
2017-04-24 09:37:47,988 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration binary -> org.hibernate.type.BinaryType@355c94be
2017-04-24 09:37:47,989 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte[] -> org.hibernate.type.BinaryType@355c94be
2017-04-24 09:37:47,990 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [B -> org.hibernate.type.BinaryType@355c94be
2017-04-24 09:37:47,992 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1dd74143
2017-04-24 09:37:47,995 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1dd74143
2017-04-24 09:37:47,996 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1dd74143
2017-04-24 09:37:48,001 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration row_version -> org.hibernate.type.RowVersionType@66f28a1f
2017-04-24 09:37:48,003 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration image -> org.hibernate.type.ImageType@df921b1
2017-04-24 09:37:48,011 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration characters -> org.hibernate.type.CharArrayType@eb6ec6
2017-04-24 09:37:48,012 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration char[] -> org.hibernate.type.CharArrayType@eb6ec6
2017-04-24 09:37:48,014 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [C -> org.hibernate.type.CharArrayType@eb6ec6
2017-04-24 09:37:48,027 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3f018494
2017-04-24 09:37:48,036 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3f018494
2017-04-24 09:37:48,044 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3f018494
2017-04-24 09:37:48,056 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration text -> org.hibernate.type.TextType@7c52fc81
2017-04-24 09:37:48,066 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ntext -> org.hibernate.type.NTextType@75e27856
2017-04-24 09:37:48,112 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration blob -> org.hibernate.type.BlobType@7165d530
2017-04-24 09:37:48,123 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7165d530
2017-04-24 09:37:48,127 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1b2df3aa
2017-04-24 09:37:48,153 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration clob -> org.hibernate.type.ClobType@67531e3a
2017-04-24 09:37:48,157 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@67531e3a
2017-04-24 09:37:48,176 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration nclob -> org.hibernate.type.NClobType@27329d2a
2017-04-24 09:37:48,177 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@27329d2a
2017-04-24 09:37:48,179 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5afbd567
2017-04-24 09:37:48,183 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@326e0b8e
2017-04-24 09:37:48,186 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration serializable -> org.hibernate.type.SerializableType@608b1fd2
2017-04-24 09:37:48,201 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration object -> org.hibernate.type.ObjectType@71b639d0
2017-04-24 09:37:48,202 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@71b639d0
2017-04-24 09:37:48,210 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1ee27d73
2017-04-24 09:37:48,211 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5e5aafc6
2017-04-24 09:37:48,212 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@542f6803
2017-04-24 09:37:48,213 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5583098b
2017-04-24 09:37:48,215 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5807efad
2017-04-24 09:37:48,216 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@53a84ff4
2017-04-24 09:37:48,216 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7ce85af2
2017-04-24 09:37:48,217 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@316acbb5
2017-04-24 09:37:48,262 WARN  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:70) - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2017-04-24 09:37:48,266 DEBUG [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:154) - No driver class specified
2017-04-24 09:37:48,268 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:126) - HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:1433;database=strutsproject]
2017-04-24 09:37:48,269 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:132) - HHH10001001: Connection properties: {user=SA, password=SQLServ3r}
2017-04-24 09:37:48,285 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:140) - HHH10001003: Autocommit mode: false
2017-04-24 09:37:48,298 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:384) - Initializing Connection pool with 1 Connections
2017-04-24 09:37:48,300 INFO  [main] internal.PooledConnections (PooledConnections.java:41) - HHH000115: Hibernate connection pool size: 1 (min=1)
2017-04-24 09:39:32,409 INFO  [qtp2049837144-23] action.Login (Login.java:23) - VALIDATE admin admin
2017-04-24 09:53:22,492 DEBUG [main] internal.CoreLogging (CoreLogging.java:28) - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2017-04-24 09:53:22,527 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2017-04-24 09:53:22,534 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2017-04-24 09:53:22,545 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2017-04-24 09:53:22,943 INFO  [main] hibernate.Version (Version.java:45) - HHH000412: Hibernate Core {5.2.9.Final}
2017-04-24 09:53:22,948 INFO  [main] cfg.Environment (Environment.java:213) - HHH000206: hibernate.properties not found
2017-04-24 09:53:22,999 DEBUG [main] internal.JaxbCfgProcessor (JaxbCfgProcessor.java:116) - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2017-04-24 09:53:23,521 DEBUG [main] cfg.Configuration (Configuration.java:724) - Building session factory using internal StandardServiceRegistryBuilder
2017-04-24 09:53:23,538 DEBUG [main] spi.ServiceBinding (ServiceBinding.java:68) - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2017-04-24 09:53:23,541 DEBUG [main] cfg.Configuration (Configuration.java:652) - Building session factory using provided StandardServiceRegistry
2017-04-24 09:53:23,607 DEBUG [main] internal.RegionFactoryInitiator (RegionFactoryInitiator.java:75) - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2017-04-24 09:53:23,632 INFO  [main] java.JavaReflectionManager (JavaReflectionManager.java:66) - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2017-04-24 09:53:23,697 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@37d28f02
2017-04-24 09:53:23,702 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@37d28f02
2017-04-24 09:53:23,706 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@37d28f02
2017-04-24 09:53:23,712 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7bac686b
2017-04-24 09:53:23,718 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2121d1f9
2017-04-24 09:53:23,723 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration yes_no -> org.hibernate.type.YesNoType@462e1e64
2017-04-24 09:53:23,732 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@22c75c01
2017-04-24 09:53:23,737 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@22c75c01
2017-04-24 09:53:23,740 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@22c75c01
2017-04-24 09:53:23,753 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration character -> org.hibernate.type.CharacterType@2f0ed952
2017-04-24 09:53:23,766 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration char -> org.hibernate.type.CharacterType@2f0ed952
2017-04-24 09:53:23,771 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2f0ed952
2017-04-24 09:53:23,780 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@4832f03b
2017-04-24 09:53:23,788 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@4832f03b
2017-04-24 09:53:23,793 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4832f03b
2017-04-24 09:53:23,799 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration integer -> org.hibernate.type.IntegerType@5115f590
2017-04-24 09:53:23,803 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration int -> org.hibernate.type.IntegerType@5115f590
2017-04-24 09:53:23,807 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5115f590
2017-04-24 09:53:23,815 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@2ff7a73
2017-04-24 09:53:23,816 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@2ff7a73
2017-04-24 09:53:23,817 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2ff7a73
2017-04-24 09:53:23,827 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@63d5874f
2017-04-24 09:53:23,832 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@63d5874f
2017-04-24 09:53:23,835 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@63d5874f
2017-04-24 09:53:23,842 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@204abeff
2017-04-24 09:53:23,846 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@204abeff
2017-04-24 09:53:23,850 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@204abeff
2017-04-24 09:53:23,857 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1b6924cb
2017-04-24 09:53:23,861 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1b6924cb
2017-04-24 09:53:23,868 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6ed043d3
2017-04-24 09:53:23,871 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6ed043d3
2017-04-24 09:53:23,882 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration string -> org.hibernate.type.StringType@3d19d85
2017-04-24 09:53:23,886 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.String -> org.hibernate.type.StringType@3d19d85
2017-04-24 09:53:23,893 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@42aae04d
2017-04-24 09:53:23,898 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7426a448
2017-04-24 09:53:23,905 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration url -> org.hibernate.type.UrlType@1e3e1014
2017-04-24 09:53:23,908 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1e3e1014
2017-04-24 09:53:23,916 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Duration -> org.hibernate.type.DurationType@4ee25d80
2017-04-24 09:53:23,919 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4ee25d80
2017-04-24 09:53:23,982 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Instant -> org.hibernate.type.InstantType@7dffda8b
2017-04-24 09:53:23,987 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7dffda8b
2017-04-24 09:53:24,000 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@6ca8fcf3
2017-04-24 09:53:24,004 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@6ca8fcf3
2017-04-24 09:53:24,019 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4f327096
2017-04-24 09:53:24,023 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4f327096
2017-04-24 09:53:24,032 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@8cc8cdb
2017-04-24 09:53:24,039 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@8cc8cdb
2017-04-24 09:53:24,046 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@76b47204
2017-04-24 09:53:24,049 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@76b47204
2017-04-24 09:53:24,057 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@6848a051
2017-04-24 09:53:24,060 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@6848a051
2017-04-24 09:53:24,080 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6fbc1bb
2017-04-24 09:53:24,084 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6fbc1bb
2017-04-24 09:53:24,094 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration date -> org.hibernate.type.DateType@6e3ecf5c
2017-04-24 09:53:24,098 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6e3ecf5c
2017-04-24 09:53:24,105 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration time -> org.hibernate.type.TimeType@5f14761c
2017-04-24 09:53:24,108 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5f14761c
2017-04-24 09:53:24,114 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration timestamp -> org.hibernate.type.TimestampType@724b939e
2017-04-24 09:53:24,118 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@724b939e
2017-04-24 09:53:24,121 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@724b939e
2017-04-24 09:53:24,130 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@52b3bf03
2017-04-24 09:53:24,137 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration calendar -> org.hibernate.type.CalendarType@5626d18c
2017-04-24 09:53:24,143 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5626d18c
2017-04-24 09:53:24,146 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5626d18c
2017-04-24 09:53:24,151 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2d55e826
2017-04-24 09:53:24,154 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration locale -> org.hibernate.type.LocaleType@29b40b3
2017-04-24 09:53:24,160 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@29b40b3
2017-04-24 09:53:24,165 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration currency -> org.hibernate.type.CurrencyType@4fdca00a
2017-04-24 09:53:24,171 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4fdca00a
2017-04-24 09:53:24,176 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1a3e8e24
2017-04-24 09:53:24,181 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1a3e8e24
2017-04-24 09:53:24,188 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration class -> org.hibernate.type.ClassType@50448409
2017-04-24 09:53:24,193 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@50448409
2017-04-24 09:53:24,201 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7f9fc8bd
2017-04-24 09:53:24,206 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7f9fc8bd
2017-04-24 09:53:24,211 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3c854752
2017-04-24 09:53:24,217 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration binary -> org.hibernate.type.BinaryType@210d2a6c
2017-04-24 09:53:24,221 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte[] -> org.hibernate.type.BinaryType@210d2a6c
2017-04-24 09:53:24,224 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [B -> org.hibernate.type.BinaryType@210d2a6c
2017-04-24 09:53:24,230 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@77c10a5f
2017-04-24 09:53:24,235 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@77c10a5f
2017-04-24 09:53:24,239 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@77c10a5f
2017-04-24 09:53:24,245 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration row_version -> org.hibernate.type.RowVersionType@355c94be
2017-04-24 09:53:24,248 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration image -> org.hibernate.type.ImageType@1dd74143
2017-04-24 09:53:24,263 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration characters -> org.hibernate.type.CharArrayType@66f28a1f
2017-04-24 09:53:24,267 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration char[] -> org.hibernate.type.CharArrayType@66f28a1f
2017-04-24 09:53:24,270 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [C -> org.hibernate.type.CharArrayType@66f28a1f
2017-04-24 09:53:24,276 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@df921b1
2017-04-24 09:53:24,279 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@df921b1
2017-04-24 09:53:24,283 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@df921b1
2017-04-24 09:53:24,289 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration text -> org.hibernate.type.TextType@eb6ec6
2017-04-24 09:53:24,296 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ntext -> org.hibernate.type.NTextType@3f018494
2017-04-24 09:53:24,308 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration blob -> org.hibernate.type.BlobType@76a14c8d
2017-04-24 09:53:24,312 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@76a14c8d
2017-04-24 09:53:24,327 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@257ef9ed
2017-04-24 09:53:24,341 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration clob -> org.hibernate.type.ClobType@340d6d89
2017-04-24 09:53:24,344 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@340d6d89
2017-04-24 09:53:24,354 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration nclob -> org.hibernate.type.NClobType@30839e44
2017-04-24 09:53:24,358 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@30839e44
2017-04-24 09:53:24,363 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@45aca496
2017-04-24 09:53:24,367 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3d90eeb3
2017-04-24 09:53:24,374 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration serializable -> org.hibernate.type.SerializableType@5afbd567
2017-04-24 09:53:24,391 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration object -> org.hibernate.type.ObjectType@7c51782d
2017-04-24 09:53:24,395 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7c51782d
2017-04-24 09:53:24,403 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@20a7953c
2017-04-24 09:53:24,407 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@57c00115
2017-04-24 09:53:24,410 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@411a5965
2017-04-24 09:53:24,413 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4fe533ff
2017-04-24 09:53:24,418 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5377414a
2017-04-24 09:53:24,421 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4e83a98
2017-04-24 09:53:24,422 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@17aa8a11
2017-04-24 09:53:24,423 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@71b639d0
2017-04-24 09:53:24,461 WARN  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:70) - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2017-04-24 09:53:24,467 DEBUG [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:154) - No driver class specified
2017-04-24 09:53:24,471 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:126) - HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:1433;database=strutsproject]
2017-04-24 09:53:24,475 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:132) - HHH10001001: Connection properties: {user=SA, password=SQLServ3r}
2017-04-24 09:53:24,487 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:140) - HHH10001003: Autocommit mode: false
2017-04-24 09:53:24,498 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:384) - Initializing Connection pool with 1 Connections
2017-04-24 09:53:24,499 INFO  [main] internal.PooledConnections (PooledConnections.java:41) - HHH000115: Hibernate connection pool size: 1 (min=1)
2017-04-24 09:54:33,854 DEBUG [main] internal.CoreLogging (CoreLogging.java:28) - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2017-04-24 09:54:33,887 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2017-04-24 09:54:33,894 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2017-04-24 09:54:33,905 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2017-04-24 09:54:34,240 INFO  [main] hibernate.Version (Version.java:45) - HHH000412: Hibernate Core {5.2.9.Final}
2017-04-24 09:54:34,248 INFO  [main] cfg.Environment (Environment.java:213) - HHH000206: hibernate.properties not found
2017-04-24 09:54:34,298 DEBUG [main] internal.JaxbCfgProcessor (JaxbCfgProcessor.java:116) - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2017-04-24 09:54:34,734 DEBUG [main] cfg.Configuration (Configuration.java:724) - Building session factory using internal StandardServiceRegistryBuilder
2017-04-24 09:54:34,749 DEBUG [main] spi.ServiceBinding (ServiceBinding.java:68) - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2017-04-24 09:54:34,750 DEBUG [main] cfg.Configuration (Configuration.java:652) - Building session factory using provided StandardServiceRegistry
2017-04-24 09:54:34,793 DEBUG [main] internal.RegionFactoryInitiator (RegionFactoryInitiator.java:75) - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2017-04-24 09:54:34,813 INFO  [main] java.JavaReflectionManager (JavaReflectionManager.java:66) - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2017-04-24 09:54:34,867 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@107bfcb2
2017-04-24 09:54:34,869 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@107bfcb2
2017-04-24 09:54:34,869 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@107bfcb2
2017-04-24 09:54:34,872 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@58b91d57
2017-04-24 09:54:34,876 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@69afa141
2017-04-24 09:54:34,878 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration yes_no -> org.hibernate.type.YesNoType@52d6d273
2017-04-24 09:54:34,882 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@5b275811
2017-04-24 09:54:34,883 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@5b275811
2017-04-24 09:54:34,884 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5b275811
2017-04-24 09:54:34,887 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration character -> org.hibernate.type.CharacterType@559cedee
2017-04-24 09:54:34,888 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration char -> org.hibernate.type.CharacterType@559cedee
2017-04-24 09:54:34,889 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@559cedee
2017-04-24 09:54:34,893 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@37baddde
2017-04-24 09:54:34,895 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@37baddde
2017-04-24 09:54:34,896 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@37baddde
2017-04-24 09:54:34,899 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration integer -> org.hibernate.type.IntegerType@e11ecfa
2017-04-24 09:54:34,900 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration int -> org.hibernate.type.IntegerType@e11ecfa
2017-04-24 09:54:34,901 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@e11ecfa
2017-04-24 09:54:34,905 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@43acd79e
2017-04-24 09:54:34,906 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@43acd79e
2017-04-24 09:54:34,907 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@43acd79e
2017-04-24 09:54:34,911 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@23a918c7
2017-04-24 09:54:34,912 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@23a918c7
2017-04-24 09:54:34,912 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@23a918c7
2017-04-24 09:54:34,916 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@2f4ba1ae
2017-04-24 09:54:34,918 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@2f4ba1ae
2017-04-24 09:54:34,919 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2f4ba1ae
2017-04-24 09:54:34,925 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3ebe4ccc
2017-04-24 09:54:34,927 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3ebe4ccc
2017-04-24 09:54:34,930 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@44af588b
2017-04-24 09:54:34,930 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@44af588b
2017-04-24 09:54:34,935 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration string -> org.hibernate.type.StringType@590adb41
2017-04-24 09:54:34,936 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.String -> org.hibernate.type.StringType@590adb41
2017-04-24 09:54:34,941 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4d3c6593
2017-04-24 09:54:34,947 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6cbe7d4d
2017-04-24 09:54:34,953 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration url -> org.hibernate.type.UrlType@36aa52d2
2017-04-24 09:54:34,957 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@36aa52d2
2017-04-24 09:54:34,964 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Duration -> org.hibernate.type.DurationType@332bcab0
2017-04-24 09:54:34,968 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@332bcab0
2017-04-24 09:54:35,022 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Instant -> org.hibernate.type.InstantType@2b5c4f17
2017-04-24 09:54:35,028 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2b5c4f17
2017-04-24 09:54:35,033 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@41ad373
2017-04-24 09:54:35,034 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@41ad373
2017-04-24 09:54:35,039 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@51c8f62c
2017-04-24 09:54:35,040 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@51c8f62c
2017-04-24 09:54:35,045 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7301eebe
2017-04-24 09:54:35,047 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7301eebe
2017-04-24 09:54:35,060 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@436bd4df
2017-04-24 09:54:35,061 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@436bd4df
2017-04-24 09:54:35,067 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@67f77f6e
2017-04-24 09:54:35,068 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@67f77f6e
2017-04-24 09:54:35,080 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5f96f6a2
2017-04-24 09:54:35,081 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5f96f6a2
2017-04-24 09:54:35,088 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration date -> org.hibernate.type.DateType@71f1cc02
2017-04-24 09:54:35,095 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@71f1cc02
2017-04-24 09:54:35,101 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration time -> org.hibernate.type.TimeType@34332b8d
2017-04-24 09:54:35,106 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@34332b8d
2017-04-24 09:54:35,112 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration timestamp -> org.hibernate.type.TimestampType@7cca01a8
2017-04-24 09:54:35,115 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7cca01a8
2017-04-24 09:54:35,119 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7cca01a8
2017-04-24 09:54:35,125 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7a4d582c
2017-04-24 09:54:35,129 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration calendar -> org.hibernate.type.CalendarType@4d1ff6b1
2017-04-24 09:54:35,130 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4d1ff6b1
2017-04-24 09:54:35,131 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4d1ff6b1
2017-04-24 09:54:35,133 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3003827c
2017-04-24 09:54:35,136 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration locale -> org.hibernate.type.LocaleType@1115433e
2017-04-24 09:54:35,137 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1115433e
2017-04-24 09:54:35,140 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration currency -> org.hibernate.type.CurrencyType@119b0892
2017-04-24 09:54:35,141 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@119b0892
2017-04-24 09:54:35,144 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3bc4ef12
2017-04-24 09:54:35,145 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3bc4ef12
2017-04-24 09:54:35,148 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration class -> org.hibernate.type.ClassType@43bdaa1b
2017-04-24 09:54:35,149 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@43bdaa1b
2017-04-24 09:54:35,152 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3ddeaa5f
2017-04-24 09:54:35,153 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3ddeaa5f
2017-04-24 09:54:35,155 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6949e948
2017-04-24 09:54:35,159 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration binary -> org.hibernate.type.BinaryType@2e3572e8
2017-04-24 09:54:35,160 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte[] -> org.hibernate.type.BinaryType@2e3572e8
2017-04-24 09:54:35,161 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [B -> org.hibernate.type.BinaryType@2e3572e8
2017-04-24 09:54:35,164 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@633fd91
2017-04-24 09:54:35,165 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@633fd91
2017-04-24 09:54:35,166 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@633fd91
2017-04-24 09:54:35,169 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration row_version -> org.hibernate.type.RowVersionType@44d64d4e
2017-04-24 09:54:35,172 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration image -> org.hibernate.type.ImageType@60d6fdd4
2017-04-24 09:54:35,175 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration characters -> org.hibernate.type.CharArrayType@619f2afc
2017-04-24 09:54:35,176 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration char[] -> org.hibernate.type.CharArrayType@619f2afc
2017-04-24 09:54:35,176 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [C -> org.hibernate.type.CharArrayType@619f2afc
2017-04-24 09:54:35,179 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7d32e714
2017-04-24 09:54:35,180 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7d32e714
2017-04-24 09:54:35,181 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7d32e714
2017-04-24 09:54:35,183 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration text -> org.hibernate.type.TextType@2935fd2c
2017-04-24 09:54:35,186 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ntext -> org.hibernate.type.NTextType@62b790a5
2017-04-24 09:54:35,195 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration blob -> org.hibernate.type.BlobType@59c70ceb
2017-04-24 09:54:35,196 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@59c70ceb
2017-04-24 09:54:35,198 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@361abd01
2017-04-24 09:54:35,206 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration clob -> org.hibernate.type.ClobType@41da3aee
2017-04-24 09:54:35,207 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@41da3aee
2017-04-24 09:54:35,214 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration nclob -> org.hibernate.type.NClobType@697173d9
2017-04-24 09:54:35,215 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@697173d9
2017-04-24 09:54:35,217 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1db87583
2017-04-24 09:54:35,219 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@27329d2a
2017-04-24 09:54:35,223 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration serializable -> org.hibernate.type.SerializableType@36baa049
2017-04-24 09:54:35,230 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration object -> org.hibernate.type.ObjectType@57c00115
2017-04-24 09:54:35,231 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@57c00115
2017-04-24 09:54:35,233 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5377414a
2017-04-24 09:54:35,234 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4e83a98
2017-04-24 09:54:35,235 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@17aa8a11
2017-04-24 09:54:35,235 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@71b639d0
2017-04-24 09:54:35,236 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@18a25bbd
2017-04-24 09:54:35,236 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5d5b9ecb
2017-04-24 09:54:35,237 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1ee27d73
2017-04-24 09:54:35,237 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5e5aafc6
2017-04-24 09:54:35,267 WARN  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:70) - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2017-04-24 09:54:35,270 DEBUG [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:154) - No driver class specified
2017-04-24 09:54:35,271 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:126) - HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:1433;database=strutsproject]
2017-04-24 09:54:35,273 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:132) - HHH10001001: Connection properties: {user=root, password=}
2017-04-24 09:54:35,275 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:140) - HHH10001003: Autocommit mode: false
2017-04-24 09:54:35,282 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:384) - Initializing Connection pool with 1 Connections
2017-04-24 09:54:35,283 INFO  [main] internal.PooledConnections (PooledConnections.java:41) - HHH000115: Hibernate connection pool size: 1 (min=1)
2017-04-24 09:55:56,541 DEBUG [main] internal.CoreLogging (CoreLogging.java:28) - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2017-04-24 09:55:56,574 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2017-04-24 09:55:56,581 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2017-04-24 09:55:56,592 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2017-04-24 09:55:56,983 INFO  [main] hibernate.Version (Version.java:45) - HHH000412: Hibernate Core {5.2.9.Final}
2017-04-24 09:55:56,989 INFO  [main] cfg.Environment (Environment.java:213) - HHH000206: hibernate.properties not found
2017-04-24 09:55:57,044 DEBUG [main] internal.JaxbCfgProcessor (JaxbCfgProcessor.java:116) - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2017-04-24 09:55:57,443 DEBUG [main] cfg.Configuration (Configuration.java:724) - Building session factory using internal StandardServiceRegistryBuilder
2017-04-24 09:55:57,457 DEBUG [main] spi.ServiceBinding (ServiceBinding.java:68) - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2017-04-24 09:55:57,458 DEBUG [main] cfg.Configuration (Configuration.java:652) - Building session factory using provided StandardServiceRegistry
2017-04-24 09:55:57,501 DEBUG [main] internal.RegionFactoryInitiator (RegionFactoryInitiator.java:75) - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2017-04-24 09:55:57,520 INFO  [main] java.JavaReflectionManager (JavaReflectionManager.java:66) - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2017-04-24 09:55:57,574 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@107bfcb2
2017-04-24 09:55:57,576 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@107bfcb2
2017-04-24 09:55:57,577 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@107bfcb2
2017-04-24 09:55:57,579 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@58b91d57
2017-04-24 09:55:57,582 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@69afa141
2017-04-24 09:55:57,585 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration yes_no -> org.hibernate.type.YesNoType@52d6d273
2017-04-24 09:55:57,589 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@5b275811
2017-04-24 09:55:57,590 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@5b275811
2017-04-24 09:55:57,591 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5b275811
2017-04-24 09:55:57,594 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration character -> org.hibernate.type.CharacterType@559cedee
2017-04-24 09:55:57,595 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration char -> org.hibernate.type.CharacterType@559cedee
2017-04-24 09:55:57,595 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@559cedee
2017-04-24 09:55:57,600 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@37baddde
2017-04-24 09:55:57,601 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@37baddde
2017-04-24 09:55:57,602 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@37baddde
2017-04-24 09:55:57,605 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration integer -> org.hibernate.type.IntegerType@e11ecfa
2017-04-24 09:55:57,606 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration int -> org.hibernate.type.IntegerType@e11ecfa
2017-04-24 09:55:57,606 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@e11ecfa
2017-04-24 09:55:57,610 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@43acd79e
2017-04-24 09:55:57,611 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@43acd79e
2017-04-24 09:55:57,612 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@43acd79e
2017-04-24 09:55:57,615 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@23a918c7
2017-04-24 09:55:57,616 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@23a918c7
2017-04-24 09:55:57,617 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@23a918c7
2017-04-24 09:55:57,620 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@2f4ba1ae
2017-04-24 09:55:57,621 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@2f4ba1ae
2017-04-24 09:55:57,622 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2f4ba1ae
2017-04-24 09:55:57,626 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3ebe4ccc
2017-04-24 09:55:57,628 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3ebe4ccc
2017-04-24 09:55:57,634 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@44af588b
2017-04-24 09:55:57,635 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@44af588b
2017-04-24 09:55:57,639 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration string -> org.hibernate.type.StringType@590adb41
2017-04-24 09:55:57,640 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.String -> org.hibernate.type.StringType@590adb41
2017-04-24 09:55:57,643 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4d3c6593
2017-04-24 09:55:57,646 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6cbe7d4d
2017-04-24 09:55:57,649 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration url -> org.hibernate.type.UrlType@36aa52d2
2017-04-24 09:55:57,650 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@36aa52d2
2017-04-24 09:55:57,654 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Duration -> org.hibernate.type.DurationType@332bcab0
2017-04-24 09:55:57,655 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@332bcab0
2017-04-24 09:55:57,696 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Instant -> org.hibernate.type.InstantType@2b5c4f17
2017-04-24 09:55:57,697 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2b5c4f17
2017-04-24 09:55:57,701 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@41ad373
2017-04-24 09:55:57,702 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@41ad373
2017-04-24 09:55:57,710 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@51c8f62c
2017-04-24 09:55:57,713 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@51c8f62c
2017-04-24 09:55:57,721 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7301eebe
2017-04-24 09:55:57,724 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7301eebe
2017-04-24 09:55:57,731 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@436bd4df
2017-04-24 09:55:57,733 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@436bd4df
2017-04-24 09:55:57,740 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@67f77f6e
2017-04-24 09:55:57,741 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@67f77f6e
2017-04-24 09:55:57,760 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5f96f6a2
2017-04-24 09:55:57,761 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5f96f6a2
2017-04-24 09:55:57,767 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration date -> org.hibernate.type.DateType@71f1cc02
2017-04-24 09:55:57,769 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@71f1cc02
2017-04-24 09:55:57,774 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration time -> org.hibernate.type.TimeType@34332b8d
2017-04-24 09:55:57,775 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@34332b8d
2017-04-24 09:55:57,779 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration timestamp -> org.hibernate.type.TimestampType@7cca01a8
2017-04-24 09:55:57,780 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7cca01a8
2017-04-24 09:55:57,780 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7cca01a8
2017-04-24 09:55:57,786 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7a4d582c
2017-04-24 09:55:57,794 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration calendar -> org.hibernate.type.CalendarType@4d1ff6b1
2017-04-24 09:55:57,795 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4d1ff6b1
2017-04-24 09:55:57,797 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4d1ff6b1
2017-04-24 09:55:57,803 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3003827c
2017-04-24 09:55:57,807 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration locale -> org.hibernate.type.LocaleType@1115433e
2017-04-24 09:55:57,808 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1115433e
2017-04-24 09:55:57,812 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration currency -> org.hibernate.type.CurrencyType@119b0892
2017-04-24 09:55:57,816 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@119b0892
2017-04-24 09:55:57,819 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3bc4ef12
2017-04-24 09:55:57,820 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3bc4ef12
2017-04-24 09:55:57,824 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration class -> org.hibernate.type.ClassType@43bdaa1b
2017-04-24 09:55:57,825 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@43bdaa1b
2017-04-24 09:55:57,829 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3ddeaa5f
2017-04-24 09:55:57,830 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3ddeaa5f
2017-04-24 09:55:57,832 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6949e948
2017-04-24 09:55:57,836 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration binary -> org.hibernate.type.BinaryType@2e3572e8
2017-04-24 09:55:57,837 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte[] -> org.hibernate.type.BinaryType@2e3572e8
2017-04-24 09:55:57,838 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [B -> org.hibernate.type.BinaryType@2e3572e8
2017-04-24 09:55:57,842 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@633fd91
2017-04-24 09:55:57,843 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@633fd91
2017-04-24 09:55:57,844 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@633fd91
2017-04-24 09:55:57,847 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration row_version -> org.hibernate.type.RowVersionType@44d64d4e
2017-04-24 09:55:57,851 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration image -> org.hibernate.type.ImageType@60d6fdd4
2017-04-24 09:55:57,854 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration characters -> org.hibernate.type.CharArrayType@619f2afc
2017-04-24 09:55:57,855 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration char[] -> org.hibernate.type.CharArrayType@619f2afc
2017-04-24 09:55:57,856 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [C -> org.hibernate.type.CharArrayType@619f2afc
2017-04-24 09:55:57,860 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7d32e714
2017-04-24 09:55:57,860 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7d32e714
2017-04-24 09:55:57,861 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7d32e714
2017-04-24 09:55:57,864 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration text -> org.hibernate.type.TextType@2935fd2c
2017-04-24 09:55:57,867 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ntext -> org.hibernate.type.NTextType@62b790a5
2017-04-24 09:55:57,878 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration blob -> org.hibernate.type.BlobType@59c70ceb
2017-04-24 09:55:57,879 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@59c70ceb
2017-04-24 09:55:57,881 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@361abd01
2017-04-24 09:55:57,891 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration clob -> org.hibernate.type.ClobType@41da3aee
2017-04-24 09:55:57,892 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@41da3aee
2017-04-24 09:55:57,900 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration nclob -> org.hibernate.type.NClobType@697173d9
2017-04-24 09:55:57,901 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@697173d9
2017-04-24 09:55:57,903 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1db87583
2017-04-24 09:55:57,905 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@27329d2a
2017-04-24 09:55:57,909 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration serializable -> org.hibernate.type.SerializableType@36baa049
2017-04-24 09:55:57,917 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration object -> org.hibernate.type.ObjectType@57c00115
2017-04-24 09:55:57,918 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@57c00115
2017-04-24 09:55:57,920 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5377414a
2017-04-24 09:55:57,923 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4e83a98
2017-04-24 09:55:57,924 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@17aa8a11
2017-04-24 09:55:57,925 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@71b639d0
2017-04-24 09:55:57,926 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@18a25bbd
2017-04-24 09:55:57,926 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5d5b9ecb
2017-04-24 09:55:57,927 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1ee27d73
2017-04-24 09:55:57,927 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5e5aafc6
2017-04-24 09:55:57,953 WARN  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:70) - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2017-04-24 09:55:57,956 DEBUG [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:154) - No driver class specified
2017-04-24 09:55:57,957 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:126) - HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306;database=strutsproject]
2017-04-24 09:55:57,958 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:132) - HHH10001001: Connection properties: {user=root, password=}
2017-04-24 09:55:57,960 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:140) - HHH10001003: Autocommit mode: false
2017-04-24 09:55:57,979 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:384) - Initializing Connection pool with 1 Connections
2017-04-24 09:55:57,981 INFO  [main] internal.PooledConnections (PooledConnections.java:41) - HHH000115: Hibernate connection pool size: 1 (min=1)
2017-04-24 09:57:41,295 DEBUG [main] internal.CoreLogging (CoreLogging.java:28) - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2017-04-24 09:57:41,329 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2017-04-24 09:57:41,337 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2017-04-24 09:57:41,348 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2017-04-24 09:57:41,681 INFO  [main] hibernate.Version (Version.java:45) - HHH000412: Hibernate Core {5.2.9.Final}
2017-04-24 09:57:41,690 INFO  [main] cfg.Environment (Environment.java:213) - HHH000206: hibernate.properties not found
2017-04-24 09:57:41,742 DEBUG [main] internal.JaxbCfgProcessor (JaxbCfgProcessor.java:116) - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2017-04-24 09:57:42,183 DEBUG [main] cfg.Configuration (Configuration.java:724) - Building session factory using internal StandardServiceRegistryBuilder
2017-04-24 09:57:42,202 DEBUG [main] spi.ServiceBinding (ServiceBinding.java:68) - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2017-04-24 09:57:42,205 DEBUG [main] cfg.Configuration (Configuration.java:652) - Building session factory using provided StandardServiceRegistry
2017-04-24 09:57:42,256 DEBUG [main] internal.RegionFactoryInitiator (RegionFactoryInitiator.java:75) - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2017-04-24 09:57:42,277 INFO  [main] java.JavaReflectionManager (JavaReflectionManager.java:66) - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2017-04-24 09:57:42,334 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@334ebcaa
2017-04-24 09:57:42,338 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@334ebcaa
2017-04-24 09:57:42,343 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@334ebcaa
2017-04-24 09:57:42,348 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6c1cfa53
2017-04-24 09:57:42,352 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@37d28f02
2017-04-24 09:57:42,357 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration yes_no -> org.hibernate.type.YesNoType@33f2df51
2017-04-24 09:57:42,364 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@61a91c9b
2017-04-24 09:57:42,367 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@61a91c9b
2017-04-24 09:57:42,371 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@61a91c9b
2017-04-24 09:57:42,377 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration character -> org.hibernate.type.CharacterType@462e1e64
2017-04-24 09:57:42,381 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration char -> org.hibernate.type.CharacterType@462e1e64
2017-04-24 09:57:42,384 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@462e1e64
2017-04-24 09:57:42,392 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@22c75c01
2017-04-24 09:57:42,393 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@22c75c01
2017-04-24 09:57:42,394 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@22c75c01
2017-04-24 09:57:42,402 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration integer -> org.hibernate.type.IntegerType@2f0ed952
2017-04-24 09:57:42,408 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration int -> org.hibernate.type.IntegerType@2f0ed952
2017-04-24 09:57:42,411 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2f0ed952
2017-04-24 09:57:42,418 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@4832f03b
2017-04-24 09:57:42,422 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@4832f03b
2017-04-24 09:57:42,425 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4832f03b
2017-04-24 09:57:42,433 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@e11ecfa
2017-04-24 09:57:42,437 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@e11ecfa
2017-04-24 09:57:42,444 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@e11ecfa
2017-04-24 09:57:42,452 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@43acd79e
2017-04-24 09:57:42,455 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@43acd79e
2017-04-24 09:57:42,459 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@43acd79e
2017-04-24 09:57:42,463 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@23a918c7
2017-04-24 09:57:42,464 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@23a918c7
2017-04-24 09:57:42,468 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1f67761b
2017-04-24 09:57:42,469 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1f67761b
2017-04-24 09:57:42,472 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration string -> org.hibernate.type.StringType@77ab22be
2017-04-24 09:57:42,473 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.String -> org.hibernate.type.StringType@77ab22be
2017-04-24 09:57:42,476 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6ca372ef
2017-04-24 09:57:42,479 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@280d4882
2017-04-24 09:57:42,482 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration url -> org.hibernate.type.UrlType@56b859a6
2017-04-24 09:57:42,483 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@56b859a6
2017-04-24 09:57:42,487 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Duration -> org.hibernate.type.DurationType@58015e56
2017-04-24 09:57:42,488 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@58015e56
2017-04-24 09:57:42,563 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Instant -> org.hibernate.type.InstantType@2db4ad1
2017-04-24 09:57:42,570 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2db4ad1
2017-04-24 09:57:42,586 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@6fc1020a
2017-04-24 09:57:42,589 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@6fc1020a
2017-04-24 09:57:42,607 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7dffda8b
2017-04-24 09:57:42,608 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7dffda8b
2017-04-24 09:57:42,617 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@66933239
2017-04-24 09:57:42,621 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@66933239
2017-04-24 09:57:42,625 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4f327096
2017-04-24 09:57:42,626 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4f327096
2017-04-24 09:57:42,630 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@41a374be
2017-04-24 09:57:42,632 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@41a374be
2017-04-24 09:57:42,644 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7be1ce6a
2017-04-24 09:57:42,645 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7be1ce6a
2017-04-24 09:57:42,649 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration date -> org.hibernate.type.DateType@2ddb3ae8
2017-04-24 09:57:42,651 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2ddb3ae8
2017-04-24 09:57:42,656 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration time -> org.hibernate.type.TimeType@6fbc1bb
2017-04-24 09:57:42,657 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6fbc1bb
2017-04-24 09:57:42,661 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration timestamp -> org.hibernate.type.TimestampType@48df4071
2017-04-24 09:57:42,662 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@48df4071
2017-04-24 09:57:42,663 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@48df4071
2017-04-24 09:57:42,669 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@67507df
2017-04-24 09:57:42,676 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration calendar -> org.hibernate.type.CalendarType@33feb805
2017-04-24 09:57:42,677 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@33feb805
2017-04-24 09:57:42,678 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@33feb805
2017-04-24 09:57:42,680 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@34332b8d
2017-04-24 09:57:42,685 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration locale -> org.hibernate.type.LocaleType@7cca01a8
2017-04-24 09:57:42,686 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7cca01a8
2017-04-24 09:57:42,689 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration currency -> org.hibernate.type.CurrencyType@45e9b12d
2017-04-24 09:57:42,690 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@45e9b12d
2017-04-24 09:57:42,694 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@329548d0
2017-04-24 09:57:42,695 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@329548d0
2017-04-24 09:57:42,698 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration class -> org.hibernate.type.ClassType@49d30c6f
2017-04-24 09:57:42,699 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@49d30c6f
2017-04-24 09:57:42,703 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1c7350b0
2017-04-24 09:57:42,704 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1c7350b0
2017-04-24 09:57:42,707 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@50448409
2017-04-24 09:57:42,712 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration binary -> org.hibernate.type.BinaryType@30b975ad
2017-04-24 09:57:42,714 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte[] -> org.hibernate.type.BinaryType@30b975ad
2017-04-24 09:57:42,715 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [B -> org.hibernate.type.BinaryType@30b975ad
2017-04-24 09:57:42,719 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@ea52184
2017-04-24 09:57:42,721 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@ea52184
2017-04-24 09:57:42,722 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@ea52184
2017-04-24 09:57:42,725 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration row_version -> org.hibernate.type.RowVersionType@7f608e21
2017-04-24 09:57:42,728 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration image -> org.hibernate.type.ImageType@66236a0a
2017-04-24 09:57:42,731 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration characters -> org.hibernate.type.CharArrayType@795f8317
2017-04-24 09:57:42,732 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration char[] -> org.hibernate.type.CharArrayType@795f8317
2017-04-24 09:57:42,733 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [C -> org.hibernate.type.CharArrayType@795f8317
2017-04-24 09:57:42,737 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@157ec23b
2017-04-24 09:57:42,738 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@157ec23b
2017-04-24 09:57:42,738 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@157ec23b
2017-04-24 09:57:42,743 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration text -> org.hibernate.type.TextType@47ac613b
2017-04-24 09:57:42,745 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ntext -> org.hibernate.type.NTextType@134ff8f8
2017-04-24 09:57:42,755 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration blob -> org.hibernate.type.BlobType@1f3b992
2017-04-24 09:57:42,756 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1f3b992
2017-04-24 09:57:42,760 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7beae796
2017-04-24 09:57:42,772 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration clob -> org.hibernate.type.ClobType@2eed37f4
2017-04-24 09:57:42,775 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2eed37f4
2017-04-24 09:57:42,788 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration nclob -> org.hibernate.type.NClobType@13dbed9e
2017-04-24 09:57:42,791 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@13dbed9e
2017-04-24 09:57:42,796 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1d50a7ca
2017-04-24 09:57:42,801 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3003e580
2017-04-24 09:57:42,811 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration serializable -> org.hibernate.type.SerializableType@5f174dd2
2017-04-24 09:57:42,826 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration object -> org.hibernate.type.ObjectType@326e0b8e
2017-04-24 09:57:42,827 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@326e0b8e
2017-04-24 09:57:42,829 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@34585ac9
2017-04-24 09:57:42,831 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@76a805b7
2017-04-24 09:57:42,832 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@15f35bc3
2017-04-24 09:57:42,832 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@167381c7
2017-04-24 09:57:42,833 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@608b1fd2
2017-04-24 09:57:42,834 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@56382bc9
2017-04-24 09:57:42,835 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@591a4f8e
2017-04-24 09:57:42,836 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@53ed80d3
2017-04-24 09:57:42,866 WARN  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:70) - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2017-04-24 09:57:42,868 DEBUG [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:154) - No driver class specified
2017-04-24 09:57:42,870 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:126) - HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306;database=strutsproject]
2017-04-24 09:57:42,872 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:132) - HHH10001001: Connection properties: {user=root, password=}
2017-04-24 09:57:42,880 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:140) - HHH10001003: Autocommit mode: false
2017-04-24 09:57:42,890 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:384) - Initializing Connection pool with 1 Connections
2017-04-24 09:57:42,892 INFO  [main] internal.PooledConnections (PooledConnections.java:41) - HHH000115: Hibernate connection pool size: 1 (min=1)
2017-04-24 09:58:46,107 INFO  [qtp2096194236-13] action.Login (Login.java:23) - VALIDATE admin admin
2017-04-24 10:07:22,572 DEBUG [main] internal.CoreLogging (CoreLogging.java:28) - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2017-04-24 10:07:22,605 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2017-04-24 10:07:22,609 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2017-04-24 10:07:22,617 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2017-04-24 10:07:23,081 INFO  [main] hibernate.Version (Version.java:45) - HHH000412: Hibernate Core {5.2.9.Final}
2017-04-24 10:07:23,091 INFO  [main] cfg.Environment (Environment.java:213) - HHH000206: hibernate.properties not found
2017-04-24 10:07:23,139 DEBUG [main] internal.JaxbCfgProcessor (JaxbCfgProcessor.java:116) - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2017-04-24 10:07:23,571 DEBUG [main] cfg.Configuration (Configuration.java:724) - Building session factory using internal StandardServiceRegistryBuilder
2017-04-24 10:07:23,585 DEBUG [main] spi.ServiceBinding (ServiceBinding.java:68) - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2017-04-24 10:07:23,586 DEBUG [main] cfg.Configuration (Configuration.java:652) - Building session factory using provided StandardServiceRegistry
2017-04-24 10:07:23,626 DEBUG [main] internal.RegionFactoryInitiator (RegionFactoryInitiator.java:75) - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2017-04-24 10:07:23,644 INFO  [main] java.JavaReflectionManager (JavaReflectionManager.java:66) - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2017-04-24 10:07:23,695 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@696b4a95
2017-04-24 10:07:23,696 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@696b4a95
2017-04-24 10:07:23,697 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@696b4a95
2017-04-24 10:07:23,699 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6af91cc8
2017-04-24 10:07:23,702 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@107bfcb2
2017-04-24 10:07:23,704 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration yes_no -> org.hibernate.type.YesNoType@f9f3928
2017-04-24 10:07:23,708 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@1806bc4c
2017-04-24 10:07:23,710 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@1806bc4c
2017-04-24 10:07:23,710 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1806bc4c
2017-04-24 10:07:23,714 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration character -> org.hibernate.type.CharacterType@52d6d273
2017-04-24 10:07:23,715 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration char -> org.hibernate.type.CharacterType@52d6d273
2017-04-24 10:07:23,715 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@52d6d273
2017-04-24 10:07:23,719 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@5b275811
2017-04-24 10:07:23,720 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@5b275811
2017-04-24 10:07:23,721 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5b275811
2017-04-24 10:07:23,724 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration integer -> org.hibernate.type.IntegerType@559cedee
2017-04-24 10:07:23,725 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration int -> org.hibernate.type.IntegerType@559cedee
2017-04-24 10:07:23,725 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@559cedee
2017-04-24 10:07:23,729 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@37baddde
2017-04-24 10:07:23,730 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@37baddde
2017-04-24 10:07:23,731 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@37baddde
2017-04-24 10:07:23,734 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@38830ea
2017-04-24 10:07:23,735 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@38830ea
2017-04-24 10:07:23,736 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@38830ea
2017-04-24 10:07:23,739 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@6fbb4061
2017-04-24 10:07:23,740 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@6fbb4061
2017-04-24 10:07:23,741 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6fbb4061
2017-04-24 10:07:23,745 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4b4ee511
2017-04-24 10:07:23,746 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4b4ee511
2017-04-24 10:07:23,748 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3762c4fc
2017-04-24 10:07:23,749 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3762c4fc
2017-04-24 10:07:23,754 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration string -> org.hibernate.type.StringType@141d3d43
2017-04-24 10:07:23,757 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.String -> org.hibernate.type.StringType@141d3d43
2017-04-24 10:07:23,764 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6419a0e1
2017-04-24 10:07:23,770 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@68ed3f30
2017-04-24 10:07:23,777 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration url -> org.hibernate.type.UrlType@575e572f
2017-04-24 10:07:23,780 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@575e572f
2017-04-24 10:07:23,787 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Duration -> org.hibernate.type.DurationType@3456558
2017-04-24 10:07:23,788 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@3456558
2017-04-24 10:07:23,830 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Instant -> org.hibernate.type.InstantType@73ae0257
2017-04-24 10:07:23,834 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@73ae0257
2017-04-24 10:07:23,841 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@42a0501e
2017-04-24 10:07:23,844 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@42a0501e
2017-04-24 10:07:23,852 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@2b5c4f17
2017-04-24 10:07:23,855 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@2b5c4f17
2017-04-24 10:07:23,863 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@177c41d7
2017-04-24 10:07:23,866 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@177c41d7
2017-04-24 10:07:23,873 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@51c8f62c
2017-04-24 10:07:23,877 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@51c8f62c
2017-04-24 10:07:23,884 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@44fff386
2017-04-24 10:07:23,888 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@44fff386
2017-04-24 10:07:23,903 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@68a78f3c
2017-04-24 10:07:23,905 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@68a78f3c
2017-04-24 10:07:23,909 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration date -> org.hibernate.type.DateType@732f6050
2017-04-24 10:07:23,912 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@732f6050
2017-04-24 10:07:23,917 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration time -> org.hibernate.type.TimeType@5f96f6a2
2017-04-24 10:07:23,918 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5f96f6a2
2017-04-24 10:07:23,921 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration timestamp -> org.hibernate.type.TimestampType@341b13a8
2017-04-24 10:07:23,922 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@341b13a8
2017-04-24 10:07:23,923 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@341b13a8
2017-04-24 10:07:23,928 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5f14761c
2017-04-24 10:07:23,932 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration calendar -> org.hibernate.type.CalendarType@724b939e
2017-04-24 10:07:23,933 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@724b939e
2017-04-24 10:07:23,933 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@724b939e
2017-04-24 10:07:23,936 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@52b3bf03
2017-04-24 10:07:23,941 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration locale -> org.hibernate.type.LocaleType@5626d18c
2017-04-24 10:07:23,942 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5626d18c
2017-04-24 10:07:23,944 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration currency -> org.hibernate.type.CurrencyType@45f756e6
2017-04-24 10:07:23,945 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@45f756e6
2017-04-24 10:07:23,948 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@656f62dc
2017-04-24 10:07:23,949 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@656f62dc
2017-04-24 10:07:23,955 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration class -> org.hibernate.type.ClassType@5a8c93
2017-04-24 10:07:23,956 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5a8c93
2017-04-24 10:07:23,959 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5634a861
2017-04-24 10:07:23,961 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5634a861
2017-04-24 10:07:23,963 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@43bdaa1b
2017-04-24 10:07:23,966 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration binary -> org.hibernate.type.BinaryType@7f9fc8bd
2017-04-24 10:07:23,967 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte[] -> org.hibernate.type.BinaryType@7f9fc8bd
2017-04-24 10:07:23,968 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [B -> org.hibernate.type.BinaryType@7f9fc8bd
2017-04-24 10:07:23,971 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1a500561
2017-04-24 10:07:23,973 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1a500561
2017-04-24 10:07:23,975 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1a500561
2017-04-24 10:07:23,978 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration row_version -> org.hibernate.type.RowVersionType@4086d8fb
2017-04-24 10:07:23,980 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration image -> org.hibernate.type.ImageType@7c781c42
2017-04-24 10:07:23,983 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration characters -> org.hibernate.type.CharArrayType@c386958
2017-04-24 10:07:23,984 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration char[] -> org.hibernate.type.CharArrayType@c386958
2017-04-24 10:07:23,985 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [C -> org.hibernate.type.CharArrayType@c386958
2017-04-24 10:07:23,988 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3166f664
2017-04-24 10:07:23,989 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3166f664
2017-04-24 10:07:23,989 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3166f664
2017-04-24 10:07:23,995 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration text -> org.hibernate.type.TextType@44a085e5
2017-04-24 10:07:23,998 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ntext -> org.hibernate.type.NTextType@2152ab30
2017-04-24 10:07:24,007 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration blob -> org.hibernate.type.BlobType@6749fe50
2017-04-24 10:07:24,008 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6749fe50
2017-04-24 10:07:24,012 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@ae73c80
2017-04-24 10:07:24,021 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration clob -> org.hibernate.type.ClobType@5562c2c9
2017-04-24 10:07:24,022 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5562c2c9
2017-04-24 10:07:24,031 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration nclob -> org.hibernate.type.NClobType@51ab1ee3
2017-04-24 10:07:24,032 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@51ab1ee3
2017-04-24 10:07:24,034 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@28757abd
2017-04-24 10:07:24,035 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@138aa3cc
2017-04-24 10:07:24,039 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration serializable -> org.hibernate.type.SerializableType@ceddaf8
2017-04-24 10:07:24,048 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration object -> org.hibernate.type.ObjectType@76a805b7
2017-04-24 10:07:24,049 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@76a805b7
2017-04-24 10:07:24,051 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@608b1fd2
2017-04-24 10:07:24,052 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@56382bc9
2017-04-24 10:07:24,052 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@591a4f8e
2017-04-24 10:07:24,053 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@53ed80d3
2017-04-24 10:07:24,053 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6ba060f3
2017-04-24 10:07:24,054 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7c51782d
2017-04-24 10:07:24,054 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@77bc2e16
2017-04-24 10:07:24,055 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@48e8c32a
2017-04-24 10:07:24,081 WARN  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:70) - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2017-04-24 10:07:24,083 DEBUG [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:154) - No driver class specified
2017-04-24 10:07:24,084 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:126) - HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306/strutsproject]
2017-04-24 10:07:24,086 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:132) - HHH10001001: Connection properties: {user=root, password=}
2017-04-24 10:07:24,088 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:140) - HHH10001003: Autocommit mode: false
2017-04-24 10:07:24,097 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:384) - Initializing Connection pool with 1 Connections
2017-04-24 10:07:24,101 INFO  [main] internal.PooledConnections (PooledConnections.java:41) - HHH000115: Hibernate connection pool size: 1 (min=1)
2017-04-24 10:07:24,867 DEBUG [main] internal.JdbcEnvironmentInitiator (JdbcEnvironmentInitiator.java:72) - Database ->
       name : MySQL
    version : 5.6.30-1
      major : 5
      minor : 6
2017-04-24 10:07:24,870 DEBUG [main] internal.JdbcEnvironmentInitiator (JdbcEnvironmentInitiator.java:83) - Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.9 ( Revision: ${svn.Revision} )
      major : 5
      minor : 1
2017-04-24 10:07:24,875 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:389) - JDBC version : 3.0
2017-04-24 10:07:24,907 INFO  [main] dialect.Dialect (Dialect.java:157) - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2017-04-24 10:07:25,006 DEBUG [main] spi.IdentifierHelperBuilder (IdentifierHelperBuilder.java:117) - JDBC driver metadata reported database stores quoted identifiers in more than one case
2017-04-24 10:07:25,014 DEBUG [main] spi.IdentifierHelperBuilder (IdentifierHelperBuilder.java:191) - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2017-04-24 10:07:25,043 INFO  [main] internal.LobCreatorBuilderImpl (LobCreatorBuilderImpl.java:98) - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2017-04-24 10:07:25,136 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2017-04-24 10:07:25,140 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2017-04-24 10:07:25,145 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2017-04-24 10:07:25,149 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2017-04-24 10:07:25,153 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2017-04-24 10:07:25,158 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2017-04-24 10:07:25,165 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2017-04-24 10:07:25,172 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2017-04-24 10:07:25,177 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2017-04-24 10:07:25,182 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2017-04-24 10:07:25,186 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2017-04-24 10:07:25,193 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2017-04-24 10:07:25,197 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2017-04-24 10:07:25,202 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2017-04-24 10:07:25,704 DEBUG [main] relational.Namespace (Namespace.java:47) - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2017-04-24 10:07:25,768 DEBUG [main] cfg.AnnotationBinder (AnnotationBinder.java:511) - Binding entity from annotated class: com.example.struts2.model.Users
2017-04-24 10:07:25,825 DEBUG [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2017-04-24 10:07:25,844 DEBUG [main] annotations.EntityBinder (EntityBinder.java:419) - Import with entity name users
2017-04-24 10:07:25,865 DEBUG [main] annotations.EntityBinder (EntityBinder.java:695) - Bind entity com.example.struts2.model.Users on table users
2017-04-24 10:07:25,943 DEBUG [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
2017-04-24 10:07:25,964 DEBUG [main] annotations.PropertyBinder (PropertyBinder.java:174) - MetadataSourceProcessor property id with lazy=false
2017-04-24 10:07:25,974 DEBUG [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.example.struts2.model.Users:id]
2017-04-24 10:07:25,981 DEBUG [main] annotations.SimpleValueBinder (SimpleValueBinder.java:411) - building SimpleValue for id
2017-04-24 10:07:25,991 DEBUG [main] annotations.PropertyBinder (PropertyBinder.java:265) - Building property id
2017-04-24 10:07:26,011 DEBUG [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2017-04-24 10:07:26,013 DEBUG [main] annotations.PropertyBinder (PropertyBinder.java:174) - MetadataSourceProcessor property password with lazy=false
2017-04-24 10:07:26,018 DEBUG [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.example.struts2.model.Users:password]
2017-04-24 10:07:26,019 DEBUG [main] annotations.SimpleValueBinder (SimpleValueBinder.java:411) - building SimpleValue for password
2017-04-24 10:07:26,020 DEBUG [main] annotations.PropertyBinder (PropertyBinder.java:265) - Building property password
2017-04-24 10:07:26,028 DEBUG [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=false}
2017-04-24 10:07:26,032 DEBUG [main] annotations.PropertyBinder (PropertyBinder.java:174) - MetadataSourceProcessor property username with lazy=false
2017-04-24 10:07:26,032 DEBUG [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.example.struts2.model.Users:username]
2017-04-24 10:07:26,033 DEBUG [main] annotations.SimpleValueBinder (SimpleValueBinder.java:411) - building SimpleValue for username
2017-04-24 10:07:26,034 DEBUG [main] annotations.PropertyBinder (PropertyBinder.java:265) - Building property username
2017-04-24 10:07:26,039 DEBUG [main] annotations.SimpleValueBinder (SimpleValueBinder.java:456) - Starting fillSimpleValue for id
2017-04-24 10:07:26,040 DEBUG [main] annotations.SimpleValueBinder (SimpleValueBinder.java:456) - Starting fillSimpleValue for password
2017-04-24 10:07:26,041 DEBUG [main] annotations.SimpleValueBinder (SimpleValueBinder.java:456) - Starting fillSimpleValue for username
2017-04-24 10:07:26,044 DEBUG [main] mapping.PrimaryKey (PrimaryKey.java:35) - Forcing column [id] to be non-null as it is part of the primary key for table [users]
2017-04-24 10:07:26,139 DEBUG [main] internal.SessionFactoryImpl (SessionFactoryImpl.java:199) - Building session factory
2017-04-24 10:07:26,142 DEBUG [main] cfg.Settings (Settings.java:69) - SessionFactory name : null
2017-04-24 10:07:26,143 DEBUG [main] cfg.Settings (Settings.java:70) - Automatic flush during beforeCompletion(): enabled
2017-04-24 10:07:26,144 DEBUG [main] cfg.Settings (Settings.java:71) - Automatic session close at end of transaction: disabled
2017-04-24 10:07:26,145 DEBUG [main] cfg.Settings (Settings.java:73) - Statistics: disabled
2017-04-24 10:07:26,148 DEBUG [main] cfg.Settings (Settings.java:75) - Deleted entity synthetic identifier rollback: disabled
2017-04-24 10:07:26,149 DEBUG [main] cfg.Settings (Settings.java:76) - Default entity-mode: pojo
2017-04-24 10:07:26,149 DEBUG [main] cfg.Settings (Settings.java:77) - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2017-04-24 10:07:26,151 DEBUG [main] cfg.Settings (Settings.java:78) - Allow initialization of lazy state outside session : disabled
2017-04-24 10:07:26,152 DEBUG [main] cfg.Settings (Settings.java:80) - Using BatchFetchStyle : LEGACY
2017-04-24 10:07:26,152 DEBUG [main] cfg.Settings (Settings.java:81) - Default batch fetch size: -1
2017-04-24 10:07:26,153 DEBUG [main] cfg.Settings (Settings.java:82) - Maximum outer join fetch depth: 2
2017-04-24 10:07:26,153 DEBUG [main] cfg.Settings (Settings.java:83) - Default null ordering: NONE
2017-04-24 10:07:26,154 DEBUG [main] cfg.Settings (Settings.java:84) - Order SQL updates by primary key: disabled
2017-04-24 10:07:26,154 DEBUG [main] cfg.Settings (Settings.java:85) - Order SQL inserts for batching: disabled
2017-04-24 10:07:26,154 DEBUG [main] cfg.Settings (Settings.java:87) - multi-tenancy strategy : NONE
2017-04-24 10:07:26,156 DEBUG [main] cfg.Settings (Settings.java:89) - JTA Track by Thread: enabled
2017-04-24 10:07:26,157 DEBUG [main] cfg.Settings (Settings.java:91) - Query language substitutions: {}
2017-04-24 10:07:26,157 DEBUG [main] cfg.Settings (Settings.java:92) - JPA query language strict compliance: disabled
2017-04-24 10:07:26,158 DEBUG [main] cfg.Settings (Settings.java:93) - Named query checking : enabled
2017-04-24 10:07:26,158 DEBUG [main] cfg.Settings (Settings.java:95) - Second-level cache: enabled
2017-04-24 10:07:26,158 DEBUG [main] cfg.Settings (Settings.java:96) - Second-level query cache: disabled
2017-04-24 10:07:26,159 DEBUG [main] cfg.Settings (Settings.java:97) - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@22bf9122
2017-04-24 10:07:26,160 DEBUG [main] cfg.Settings (Settings.java:98) - Second-level cache region prefix: null
2017-04-24 10:07:26,160 DEBUG [main] cfg.Settings (Settings.java:99) - Optimize second-level cache for minimal puts: disabled
2017-04-24 10:07:26,160 DEBUG [main] cfg.Settings (Settings.java:100) - Structured second-level cache entries: disabled
2017-04-24 10:07:26,161 DEBUG [main] cfg.Settings (Settings.java:101) - Second-level cache direct-reference entries: disabled
2017-04-24 10:07:26,162 DEBUG [main] cfg.Settings (Settings.java:102) - Automatic eviction of collection cache: disabled
2017-04-24 10:07:26,163 DEBUG [main] cfg.Settings (Settings.java:104) - JDBC batch size: 15
2017-04-24 10:07:26,163 DEBUG [main] cfg.Settings (Settings.java:105) - JDBC batch updates for versioned data: enabled
2017-04-24 10:07:26,164 DEBUG [main] cfg.Settings (Settings.java:106) - Scrollable result sets: enabled
2017-04-24 10:07:26,164 DEBUG [main] cfg.Settings (Settings.java:107) - Wrap result sets: disabled
2017-04-24 10:07:26,165 DEBUG [main] cfg.Settings (Settings.java:108) - JDBC3 getGeneratedKeys(): enabled
2017-04-24 10:07:26,165 DEBUG [main] cfg.Settings (Settings.java:109) - JDBC result set fetch size: null
2017-04-24 10:07:26,168 DEBUG [main] cfg.Settings (Settings.java:110) - Connection release mode: AFTER_TRANSACTION
2017-04-24 10:07:26,171 DEBUG [main] cfg.Settings (Settings.java:111) - Generate SQL with comments: disabled
2017-04-24 10:07:26,330 DEBUG [main] internal.SessionFactoryImpl (SessionFactoryImpl.java:254) - Session factory constructed with filter configurations : {}
2017-04-24 10:07:26,331 DEBUG [main] internal.SessionFactoryImpl (SessionFactoryImpl.java:255) - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, java.vendor.url=http://java.oracle.com/, user.timezone=Asia/Jakarta, os.name=Linux, java.vm.specification.version=1.8, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, maven.home=/usr/share/maven, sun.cpu.endian=little, user.home=/root, user.language=en, java.specification.vendor=Oracle Corporation, java.home=/usr/lib/jvm/java-8-openjdk-amd64/jre, file.separator=/, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, sun.boot.class.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/classes, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_111-8u111-b14-3-b14, user.name=root, path.separator=:, securerandom.source=file:/dev/./urandom, hibernate.connection.username=root, os.version=4.8.0-kali2-amd64, java.endorsed.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/endorsed, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/strutsproject, file.encoding=UTF-8, guice.disable.misplaced.annotation.check=true, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=/tmp, java.version=1.8.0_111, user.dir=/root/Source/java/struts/struts-project, os.arch=amd64, maven.multiModuleProjectDirectory=/root/Source/java/struts/struts-project, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@4d705112, java.library.path=/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.111-b14, classworlds.conf=/usr/share/maven/bin/m2.conf, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.pool_size=1, java.ext.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
2017-04-24 10:07:26,358 DEBUG [main] spi.JaccIntegrator (JaccIntegrator.java:80) - Skipping JACC integration as it was not enabled
2017-04-24 10:07:26,377 DEBUG [main] internal.SessionFactoryImpl (SessionFactoryImpl.java:294) - Instantiated session factory
2017-04-24 10:07:26,486 DEBUG [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [com.example.struts2.model.Users] is safe
2017-04-24 10:07:26,487 DEBUG [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.struts2.model.Users
2017-04-24 10:07:26,522 DEBUG [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [com.example.struts2.model.Users] is safe
2017-04-24 10:07:26,523 DEBUG [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.struts2.model.Users
2017-04-24 10:07:26,671 DEBUG [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3598) - Static SQL for entity: com.example.struts2.model.Users
2017-04-24 10:07:26,672 DEBUG [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3603) -  Version select: select id from users where id =?
2017-04-24 10:07:26,673 DEBUG [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3606) -  Snapshot select: select users_.id, users_.password as password2_0_, users_.username as username3_0_ from users users_ where users_.id=?
2017-04-24 10:07:26,673 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Insert 0: insert into users (password, username, id) values (?, ?, ?)
2017-04-24 10:07:26,674 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Update 0: update users set password=?, username=? where id=?
2017-04-24 10:07:26,674 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Delete 0: delete from users where id=?
2017-04-24 10:07:26,675 DEBUG [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3614) -  Identity insert: insert into users (password, username) values (?, ?)
2017-04-24 10:07:26,724 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a21f43f]
2017-04-24 10:07:26,728 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 10:07:26,729 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 10:07:26,730 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 10:07:26,760 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 10:07:26,772 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 10:07:26,777 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [NONE]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-24 10:07:26,778 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4776e209]
2017-04-24 10:07:26,779 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 10:07:26,780 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 10:07:26,780 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 10:07:26,781 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 10:07:26,782 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 10:07:26,783 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [READ]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-24 10:07:26,784 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f536481]
2017-04-24 10:07:26,785 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 10:07:26,786 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 10:07:26,786 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 10:07:26,788 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 10:07:26,789 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 10:07:26,790 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [UPGRADE]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=? for update
2017-04-24 10:07:26,790 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22a260ff]
2017-04-24 10:07:26,792 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 10:07:26,792 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 10:07:26,793 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 10:07:26,794 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 10:07:26,795 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 10:07:26,796 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [UPGRADE_NOWAIT]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=? for update
2017-04-24 10:07:26,797 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50b734c4]
2017-04-24 10:07:26,798 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 10:07:26,799 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 10:07:26,799 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 10:07:26,800 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 10:07:26,801 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 10:07:26,802 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [UPGRADE_SKIPLOCKED]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=? for update
2017-04-24 10:07:26,803 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16d0e521]
2017-04-24 10:07:26,804 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 10:07:26,804 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 10:07:26,805 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 10:07:26,806 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 10:07:26,807 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 10:07:26,808 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [FORCE]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=? for update
2017-04-24 10:07:26,809 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ab4aa5e]
2017-04-24 10:07:26,809 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 10:07:26,810 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 10:07:26,811 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 10:07:26,812 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 10:07:26,813 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 10:07:26,814 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [PESSIMISTIC_READ]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=? lock in share mode
2017-04-24 10:07:26,814 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a7cb3a4]
2017-04-24 10:07:26,815 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 10:07:26,816 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 10:07:26,816 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 10:07:26,817 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 10:07:26,818 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 10:07:26,819 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [PESSIMISTIC_WRITE]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=? for update
2017-04-24 10:07:26,820 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33e0c716]
2017-04-24 10:07:26,821 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 10:07:26,822 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 10:07:26,823 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 10:07:26,824 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 10:07:26,825 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 10:07:26,826 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [PESSIMISTIC_FORCE_INCREMENT]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=? for update
2017-04-24 10:07:26,826 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6274f21c]
2017-04-24 10:07:26,827 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 10:07:26,828 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 10:07:26,829 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 10:07:26,830 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 10:07:26,831 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 10:07:26,832 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [OPTIMISTIC]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-24 10:07:26,833 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@237add]
2017-04-24 10:07:26,833 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 10:07:26,834 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 10:07:26,835 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 10:07:26,836 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 10:07:26,837 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 10:07:26,838 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [OPTIMISTIC_FORCE_INCREMENT]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-24 10:07:26,876 DEBUG [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_MERGE on entity com.example.struts2.model.Users: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-24 10:07:26,878 DEBUG [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_REFRESH on entity com.example.struts2.model.Users: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-24 10:07:26,936 DEBUG [main] spi.SchemaManagementToolCoordinator (SchemaManagementToolCoordinator.java:56) - No actions specified; doing nothing
2017-04-24 10:07:26,937 DEBUG [main] internal.JtaPlatformInitiator (JtaPlatformInitiator.java:42) - No JtaPlatform was specified, checking resolver
2017-04-24 10:07:26,938 DEBUG [main] internal.JtaPlatformResolverInitiator (JtaPlatformResolverInitiator.java:33) - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2017-04-24 10:07:26,954 DEBUG [main] internal.StandardJtaPlatformResolver (StandardJtaPlatformResolver.java:102) - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2017-04-24 10:07:26,977 DEBUG [main] spi.NamedQueryRepository (NamedQueryRepository.java:151) - Checking 0 named HQL queries
2017-04-24 10:07:26,978 DEBUG [main] spi.NamedQueryRepository (NamedQueryRepository.java:167) - Checking 0 named SQL queries
2017-04-24 10:07:26,991 DEBUG [main] internal.SessionFactoryRegistry (SessionFactoryRegistry.java:52) - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@268c030f
2017-04-24 10:07:27,000 DEBUG [main] internal.SessionFactoryRegistry (SessionFactoryRegistry.java:74) - Registering SessionFactory: 71df76fd-d3a5-47ec-b8f5-c3d3f3178914 (<unnamed>)
2017-04-24 10:07:27,004 DEBUG [main] internal.SessionFactoryRegistry (SessionFactoryRegistry.java:81) - Not binding SessionFactory to JNDI, no JNDI name configured
2017-04-24 10:07:49,580 INFO  [qtp350413251-11] action.Login (Login.java:23) - VALIDATE admin admin
2017-04-24 10:07:49,796 DEBUG [qtp350413251-11] internal.StatisticsInitiator (StatisticsInitiator.java:82) - Statistics initialized [enabled=false]
2017-04-24 10:07:49,830 DEBUG [qtp350413251-11] internal.TransactionImpl (TransactionImpl.java:55) - begin
2017-04-24 10:07:49,906 DEBUG [qtp350413251-11] spi.ActionQueue (ActionQueue.java:276) - Executing identity-insert immediately
2017-04-24 10:07:49,932 DEBUG [qtp350413251-11] spi.SqlStatementLogger (SqlStatementLogger.java:92) - insert into users (password, username) values (?, ?)
2017-04-24 10:07:50,058 DEBUG [qtp350413251-11] id.IdentifierGeneratorHelper (IdentifierGeneratorHelper.java:78) - Natively generated identity: 1
2017-04-24 10:07:50,060 DEBUG [qtp350413251-11] internal.ResourceRegistryStandardImpl (ResourceRegistryStandardImpl.java:104) - HHH000387: ResultSet's statement was not registered
2017-04-24 10:07:50,069 DEBUG [qtp350413251-11] internal.TransactionImpl (TransactionImpl.java:66) - committing
2017-04-24 10:07:50,088 DEBUG [qtp350413251-11] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:132) - Processing flush-time cascades
2017-04-24 10:07:50,090 DEBUG [qtp350413251-11] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:174) - Dirty checking collections
2017-04-24 10:07:50,104 DEBUG [qtp350413251-11] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:106) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2017-04-24 10:07:50,105 DEBUG [qtp350413251-11] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:113) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2017-04-24 10:07:50,110 DEBUG [qtp350413251-11] util.EntityPrinter (EntityPrinter.java:102) - Listing entities:
2017-04-24 10:07:50,113 DEBUG [qtp350413251-11] util.EntityPrinter (EntityPrinter.java:109) - com.example.struts2.model.Users{password=admin, id=1, username=admin}
2017-04-24 10:07:50,159 DEBUG [qtp350413251-11] internal.LogicalConnectionManagedImpl (LogicalConnectionManagedImpl.java:154) - Initiating JDBC connection release from afterTransaction
2017-04-24 10:07:50,161 DEBUG [qtp350413251-11] internal.LogicalConnectionManagedImpl (LogicalConnectionManagedImpl.java:154) - Initiating JDBC connection release from afterTransaction
2017-04-24 10:07:54,864 DEBUG [pool-2-thread-1] internal.PooledConnections (PooledConnections.java:51) - Connection pool now considered primed; min-size will be maintained
2017-04-24 10:11:48,750 DEBUG [Scanner-0] internal.CoreLogging (CoreLogging.java:28) - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2017-04-24 10:11:48,779 DEBUG [Scanner-0] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2017-04-24 10:11:48,789 DEBUG [Scanner-0] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2017-04-24 10:11:48,799 DEBUG [Scanner-0] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2017-04-24 10:11:49,045 INFO  [Scanner-0] hibernate.Version (Version.java:45) - HHH000412: Hibernate Core {5.2.9.Final}
2017-04-24 10:11:49,054 INFO  [Scanner-0] cfg.Environment (Environment.java:213) - HHH000206: hibernate.properties not found
2017-04-24 10:11:49,111 DEBUG [Scanner-0] internal.JaxbCfgProcessor (JaxbCfgProcessor.java:116) - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2017-04-24 10:11:49,297 DEBUG [Scanner-0] cfg.Configuration (Configuration.java:724) - Building session factory using internal StandardServiceRegistryBuilder
2017-04-24 10:11:49,315 DEBUG [Scanner-0] spi.ServiceBinding (ServiceBinding.java:68) - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2017-04-24 10:11:49,316 DEBUG [Scanner-0] cfg.Configuration (Configuration.java:652) - Building session factory using provided StandardServiceRegistry
2017-04-24 10:11:49,355 DEBUG [Scanner-0] internal.RegionFactoryInitiator (RegionFactoryInitiator.java:75) - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2017-04-24 10:11:49,374 INFO  [Scanner-0] java.JavaReflectionManager (JavaReflectionManager.java:66) - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2017-04-24 10:11:49,442 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@4f73b97c
2017-04-24 10:11:49,443 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@4f73b97c
2017-04-24 10:11:49,444 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4f73b97c
2017-04-24 10:11:49,448 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4c71182a
2017-04-24 10:11:49,455 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@1080753c
2017-04-24 10:11:49,457 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration yes_no -> org.hibernate.type.YesNoType@5dd6698b
2017-04-24 10:11:49,462 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@538682e0
2017-04-24 10:11:49,463 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@538682e0
2017-04-24 10:11:49,464 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@538682e0
2017-04-24 10:11:49,467 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration character -> org.hibernate.type.CharacterType@c3a214d
2017-04-24 10:11:49,467 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration char -> org.hibernate.type.CharacterType@c3a214d
2017-04-24 10:11:49,468 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@c3a214d
2017-04-24 10:11:49,471 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@35ea1f8b
2017-04-24 10:11:49,472 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@35ea1f8b
2017-04-24 10:11:49,472 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@35ea1f8b
2017-04-24 10:11:49,475 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration integer -> org.hibernate.type.IntegerType@6a37de4f
2017-04-24 10:11:49,475 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration int -> org.hibernate.type.IntegerType@6a37de4f
2017-04-24 10:11:49,476 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6a37de4f
2017-04-24 10:11:49,479 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@650633d3
2017-04-24 10:11:49,480 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@650633d3
2017-04-24 10:11:49,480 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@650633d3
2017-04-24 10:11:49,483 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@3f32e613
2017-04-24 10:11:49,484 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@3f32e613
2017-04-24 10:11:49,484 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3f32e613
2017-04-24 10:11:49,487 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@5635d6c
2017-04-24 10:11:49,488 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@5635d6c
2017-04-24 10:11:49,488 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5635d6c
2017-04-24 10:11:49,491 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2049460a
2017-04-24 10:11:49,494 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2049460a
2017-04-24 10:11:49,498 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5e39440
2017-04-24 10:11:49,499 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5e39440
2017-04-24 10:11:49,503 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration string -> org.hibernate.type.StringType@4decf5fa
2017-04-24 10:11:49,504 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.String -> org.hibernate.type.StringType@4decf5fa
2017-04-24 10:11:49,506 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2459e698
2017-04-24 10:11:49,508 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@70955048
2017-04-24 10:11:49,511 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration url -> org.hibernate.type.UrlType@442042c4
2017-04-24 10:11:49,512 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@442042c4
2017-04-24 10:11:49,514 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Duration -> org.hibernate.type.DurationType@7ec9dbd5
2017-04-24 10:11:49,515 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7ec9dbd5
2017-04-24 10:11:49,519 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Instant -> org.hibernate.type.InstantType@9bc1232
2017-04-24 10:11:49,520 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@9bc1232
2017-04-24 10:11:49,523 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@507b62f4
2017-04-24 10:11:49,523 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@507b62f4
2017-04-24 10:11:49,527 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@35110e83
2017-04-24 10:11:49,527 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@35110e83
2017-04-24 10:11:49,531 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@36f3e4a9
2017-04-24 10:11:49,532 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@36f3e4a9
2017-04-24 10:11:49,534 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@50d9b3d3
2017-04-24 10:11:49,535 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@50d9b3d3
2017-04-24 10:11:49,538 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@936967c
2017-04-24 10:11:49,539 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@936967c
2017-04-24 10:11:49,543 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@513e02ff
2017-04-24 10:11:49,544 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@513e02ff
2017-04-24 10:11:49,548 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration date -> org.hibernate.type.DateType@30019551
2017-04-24 10:11:49,549 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@30019551
2017-04-24 10:11:49,552 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration time -> org.hibernate.type.TimeType@17c83be6
2017-04-24 10:11:49,553 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@17c83be6
2017-04-24 10:11:49,556 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration timestamp -> org.hibernate.type.TimestampType@56fdce68
2017-04-24 10:11:49,556 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@56fdce68
2017-04-24 10:11:49,557 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@56fdce68
2017-04-24 10:11:49,560 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@33c3be
2017-04-24 10:11:49,563 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration calendar -> org.hibernate.type.CalendarType@2dfeb2ed
2017-04-24 10:11:49,564 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2dfeb2ed
2017-04-24 10:11:49,564 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2dfeb2ed
2017-04-24 10:11:49,566 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@541ee6de
2017-04-24 10:11:49,569 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration locale -> org.hibernate.type.LocaleType@4858078
2017-04-24 10:11:49,571 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4858078
2017-04-24 10:11:49,574 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration currency -> org.hibernate.type.CurrencyType@5609c9c
2017-04-24 10:11:49,575 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5609c9c
2017-04-24 10:11:49,578 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@457ef9b2
2017-04-24 10:11:49,578 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@457ef9b2
2017-04-24 10:11:49,582 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration class -> org.hibernate.type.ClassType@72c9a5ef
2017-04-24 10:11:49,582 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@72c9a5ef
2017-04-24 10:11:49,592 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1c67d47f
2017-04-24 10:11:49,593 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1c67d47f
2017-04-24 10:11:49,595 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@37c129ef
2017-04-24 10:11:49,603 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration binary -> org.hibernate.type.BinaryType@9544c32
2017-04-24 10:11:49,604 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte[] -> org.hibernate.type.BinaryType@9544c32
2017-04-24 10:11:49,605 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [B -> org.hibernate.type.BinaryType@9544c32
2017-04-24 10:11:49,618 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6742def6
2017-04-24 10:11:49,620 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6742def6
2017-04-24 10:11:49,624 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6742def6
2017-04-24 10:11:49,629 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration row_version -> org.hibernate.type.RowVersionType@11103d14
2017-04-24 10:11:49,633 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration image -> org.hibernate.type.ImageType@1edce42e
2017-04-24 10:11:49,637 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration characters -> org.hibernate.type.CharArrayType@37eabbe0
2017-04-24 10:11:49,638 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration char[] -> org.hibernate.type.CharArrayType@37eabbe0
2017-04-24 10:11:49,639 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [C -> org.hibernate.type.CharArrayType@37eabbe0
2017-04-24 10:11:49,645 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5dc1e31a
2017-04-24 10:11:49,645 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5dc1e31a
2017-04-24 10:11:49,646 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5dc1e31a
2017-04-24 10:11:49,649 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration text -> org.hibernate.type.TextType@6b371df9
2017-04-24 10:11:49,652 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ntext -> org.hibernate.type.NTextType@5693c39f
2017-04-24 10:11:49,664 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration blob -> org.hibernate.type.BlobType@c90ec16
2017-04-24 10:11:49,667 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@c90ec16
2017-04-24 10:11:49,669 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@520100c9
2017-04-24 10:11:49,681 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration clob -> org.hibernate.type.ClobType@39791987
2017-04-24 10:11:49,682 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@39791987
2017-04-24 10:11:49,693 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration nclob -> org.hibernate.type.NClobType@26f93551
2017-04-24 10:11:49,698 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@26f93551
2017-04-24 10:11:49,702 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@648ef5b2
2017-04-24 10:11:49,705 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@779799b4
2017-04-24 10:11:49,711 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration serializable -> org.hibernate.type.SerializableType@15b21067
2017-04-24 10:11:49,725 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration object -> org.hibernate.type.ObjectType@5a932ca6
2017-04-24 10:11:49,726 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5a932ca6
2017-04-24 10:11:49,727 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@60ee7532
2017-04-24 10:11:49,728 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@235b9395
2017-04-24 10:11:49,729 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@53331d98
2017-04-24 10:11:49,729 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@21ce04d4
2017-04-24 10:11:49,729 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@329aa23a
2017-04-24 10:11:49,730 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4da258c7
2017-04-24 10:11:49,730 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6364336
2017-04-24 10:11:49,733 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@578f1f80
2017-04-24 10:11:49,760 WARN  [Scanner-0] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:70) - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2017-04-24 10:11:49,764 DEBUG [Scanner-0] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:154) - No driver class specified
2017-04-24 10:11:49,767 INFO  [Scanner-0] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:126) - HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306/strutsproject]
2017-04-24 10:11:49,773 INFO  [Scanner-0] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:132) - HHH10001001: Connection properties: {user=root, password=}
2017-04-24 10:11:49,778 INFO  [Scanner-0] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:140) - HHH10001003: Autocommit mode: false
2017-04-24 10:11:49,796 DEBUG [Scanner-0] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:384) - Initializing Connection pool with 1 Connections
2017-04-24 10:11:49,797 INFO  [Scanner-0] internal.PooledConnections (PooledConnections.java:41) - HHH000115: Hibernate connection pool size: 1 (min=1)
2017-04-24 10:12:27,505 DEBUG [Scanner-0] internal.CoreLogging (CoreLogging.java:28) - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2017-04-24 10:12:27,550 DEBUG [Scanner-0] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2017-04-24 10:12:27,555 DEBUG [Scanner-0] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2017-04-24 10:12:27,563 DEBUG [Scanner-0] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2017-04-24 10:12:27,735 INFO  [Scanner-0] hibernate.Version (Version.java:45) - HHH000412: Hibernate Core {5.2.9.Final}
2017-04-24 10:12:27,747 INFO  [Scanner-0] cfg.Environment (Environment.java:213) - HHH000206: hibernate.properties not found
2017-04-24 10:12:27,785 DEBUG [Scanner-0] internal.JaxbCfgProcessor (JaxbCfgProcessor.java:116) - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2017-04-24 10:12:27,953 DEBUG [Scanner-0] cfg.Configuration (Configuration.java:724) - Building session factory using internal StandardServiceRegistryBuilder
2017-04-24 10:12:27,968 DEBUG [Scanner-0] spi.ServiceBinding (ServiceBinding.java:68) - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2017-04-24 10:12:27,971 DEBUG [Scanner-0] cfg.Configuration (Configuration.java:652) - Building session factory using provided StandardServiceRegistry
2017-04-24 10:12:28,010 DEBUG [Scanner-0] internal.RegionFactoryInitiator (RegionFactoryInitiator.java:75) - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2017-04-24 10:12:28,030 INFO  [Scanner-0] java.JavaReflectionManager (JavaReflectionManager.java:66) - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2017-04-24 10:12:28,078 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@545f3bf5
2017-04-24 10:12:28,079 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@545f3bf5
2017-04-24 10:12:28,079 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@545f3bf5
2017-04-24 10:12:28,081 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@67da36a5
2017-04-24 10:12:28,084 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@26a76a03
2017-04-24 10:12:28,086 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration yes_no -> org.hibernate.type.YesNoType@1c92e681
2017-04-24 10:12:28,089 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@8818092
2017-04-24 10:12:28,090 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@8818092
2017-04-24 10:12:28,091 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@8818092
2017-04-24 10:12:28,093 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration character -> org.hibernate.type.CharacterType@3405fdcc
2017-04-24 10:12:28,094 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration char -> org.hibernate.type.CharacterType@3405fdcc
2017-04-24 10:12:28,094 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3405fdcc
2017-04-24 10:12:28,097 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@237b1acd
2017-04-24 10:12:28,098 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@237b1acd
2017-04-24 10:12:28,099 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@237b1acd
2017-04-24 10:12:28,101 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration integer -> org.hibernate.type.IntegerType@61251028
2017-04-24 10:12:28,102 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration int -> org.hibernate.type.IntegerType@61251028
2017-04-24 10:12:28,102 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@61251028
2017-04-24 10:12:28,106 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@7ae46048
2017-04-24 10:12:28,106 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@7ae46048
2017-04-24 10:12:28,107 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7ae46048
2017-04-24 10:12:28,110 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@5fa1c413
2017-04-24 10:12:28,111 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@5fa1c413
2017-04-24 10:12:28,111 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5fa1c413
2017-04-24 10:12:28,114 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@35f987c3
2017-04-24 10:12:28,115 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@35f987c3
2017-04-24 10:12:28,116 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@35f987c3
2017-04-24 10:12:28,119 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@136787c3
2017-04-24 10:12:28,120 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@136787c3
2017-04-24 10:12:28,122 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4c0d2cad
2017-04-24 10:12:28,123 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4c0d2cad
2017-04-24 10:12:28,125 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration string -> org.hibernate.type.StringType@76560a06
2017-04-24 10:12:28,126 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.String -> org.hibernate.type.StringType@76560a06
2017-04-24 10:12:28,128 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@84aec00
2017-04-24 10:12:28,130 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@18949e2a
2017-04-24 10:12:28,133 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration url -> org.hibernate.type.UrlType@6dd7593b
2017-04-24 10:12:28,134 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@6dd7593b
2017-04-24 10:12:28,137 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Duration -> org.hibernate.type.DurationType@c610e96
2017-04-24 10:12:28,138 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@c610e96
2017-04-24 10:12:28,141 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Instant -> org.hibernate.type.InstantType@3c472c40
2017-04-24 10:12:28,142 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3c472c40
2017-04-24 10:12:28,145 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@25c8e8c4
2017-04-24 10:12:28,146 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@25c8e8c4
2017-04-24 10:12:28,149 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@77e67132
2017-04-24 10:12:28,150 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@77e67132
2017-04-24 10:12:28,153 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1f2641ad
2017-04-24 10:12:28,154 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1f2641ad
2017-04-24 10:12:28,157 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5f4b7c56
2017-04-24 10:12:28,158 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5f4b7c56
2017-04-24 10:12:28,161 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1e068633
2017-04-24 10:12:28,161 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1e068633
2017-04-24 10:12:28,164 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4dcbea9
2017-04-24 10:12:28,165 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4dcbea9
2017-04-24 10:12:28,169 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration date -> org.hibernate.type.DateType@30969ea9
2017-04-24 10:12:28,169 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@30969ea9
2017-04-24 10:12:28,172 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration time -> org.hibernate.type.TimeType@2eb844b6
2017-04-24 10:12:28,173 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2eb844b6
2017-04-24 10:12:28,177 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration timestamp -> org.hibernate.type.TimestampType@3582d49a
2017-04-24 10:12:28,178 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3582d49a
2017-04-24 10:12:28,178 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3582d49a
2017-04-24 10:12:28,182 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2ecad8bf
2017-04-24 10:12:28,185 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration calendar -> org.hibernate.type.CalendarType@5318526
2017-04-24 10:12:28,186 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5318526
2017-04-24 10:12:28,186 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5318526
2017-04-24 10:12:28,189 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@489f7a47
2017-04-24 10:12:28,192 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration locale -> org.hibernate.type.LocaleType@20c4b804
2017-04-24 10:12:28,193 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@20c4b804
2017-04-24 10:12:28,196 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration currency -> org.hibernate.type.CurrencyType@6f2f6cbe
2017-04-24 10:12:28,197 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6f2f6cbe
2017-04-24 10:12:28,200 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@40569dbf
2017-04-24 10:12:28,201 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@40569dbf
2017-04-24 10:12:28,205 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration class -> org.hibernate.type.ClassType@2857d1f
2017-04-24 10:12:28,206 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2857d1f
2017-04-24 10:12:28,210 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@e48d187
2017-04-24 10:12:28,212 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@e48d187
2017-04-24 10:12:28,214 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7033890d
2017-04-24 10:12:28,218 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration binary -> org.hibernate.type.BinaryType@1dbe335c
2017-04-24 10:12:28,218 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte[] -> org.hibernate.type.BinaryType@1dbe335c
2017-04-24 10:12:28,219 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [B -> org.hibernate.type.BinaryType@1dbe335c
2017-04-24 10:12:28,222 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@223a19a
2017-04-24 10:12:28,223 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@223a19a
2017-04-24 10:12:28,223 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@223a19a
2017-04-24 10:12:28,226 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration row_version -> org.hibernate.type.RowVersionType@46e0e2f8
2017-04-24 10:12:28,229 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration image -> org.hibernate.type.ImageType@75cfd587
2017-04-24 10:12:28,233 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration characters -> org.hibernate.type.CharArrayType@136375bb
2017-04-24 10:12:28,234 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration char[] -> org.hibernate.type.CharArrayType@136375bb
2017-04-24 10:12:28,234 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [C -> org.hibernate.type.CharArrayType@136375bb
2017-04-24 10:12:28,237 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@878df87
2017-04-24 10:12:28,238 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@878df87
2017-04-24 10:12:28,238 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@878df87
2017-04-24 10:12:28,240 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration text -> org.hibernate.type.TextType@6a9115cf
2017-04-24 10:12:28,243 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ntext -> org.hibernate.type.NTextType@32064d82
2017-04-24 10:12:28,251 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration blob -> org.hibernate.type.BlobType@20a7bd7
2017-04-24 10:12:28,252 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@20a7bd7
2017-04-24 10:12:28,253 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2315623f
2017-04-24 10:12:28,262 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration clob -> org.hibernate.type.ClobType@42202fc6
2017-04-24 10:12:28,263 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@42202fc6
2017-04-24 10:12:28,270 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration nclob -> org.hibernate.type.NClobType@2a108ef0
2017-04-24 10:12:28,271 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2a108ef0
2017-04-24 10:12:28,272 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@69fa4a9e
2017-04-24 10:12:28,274 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@50781c11
2017-04-24 10:12:28,278 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration serializable -> org.hibernate.type.SerializableType@756fa333
2017-04-24 10:12:28,285 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration object -> org.hibernate.type.ObjectType@37e3f5a
2017-04-24 10:12:28,286 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@37e3f5a
2017-04-24 10:12:28,287 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3382b6a8
2017-04-24 10:12:28,288 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4174db6d
2017-04-24 10:12:28,289 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@33401985
2017-04-24 10:12:28,289 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6458495a
2017-04-24 10:12:28,291 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4249848f
2017-04-24 10:12:28,292 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@25019018
2017-04-24 10:12:28,293 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@163e390c
2017-04-24 10:12:28,295 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@308ab008
2017-04-24 10:12:28,324 WARN  [Scanner-0] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:70) - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2017-04-24 10:12:28,326 DEBUG [Scanner-0] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:154) - No driver class specified
2017-04-24 10:12:28,327 INFO  [Scanner-0] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:126) - HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306/strutsproject]
2017-04-24 10:12:28,341 INFO  [Scanner-0] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:132) - HHH10001001: Connection properties: {user=root, password=}
2017-04-24 10:12:28,343 INFO  [Scanner-0] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:140) - HHH10001003: Autocommit mode: false
2017-04-24 10:12:28,353 DEBUG [Scanner-0] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:384) - Initializing Connection pool with 1 Connections
2017-04-24 10:12:28,356 INFO  [Scanner-0] internal.PooledConnections (PooledConnections.java:41) - HHH000115: Hibernate connection pool size: 1 (min=1)
2017-04-24 10:12:47,114 DEBUG [Scanner-0] internal.CoreLogging (CoreLogging.java:28) - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2017-04-24 10:12:47,142 DEBUG [Scanner-0] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2017-04-24 10:12:47,146 DEBUG [Scanner-0] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2017-04-24 10:12:47,153 DEBUG [Scanner-0] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2017-04-24 10:12:47,336 INFO  [Scanner-0] hibernate.Version (Version.java:45) - HHH000412: Hibernate Core {5.2.9.Final}
2017-04-24 10:12:47,344 INFO  [Scanner-0] cfg.Environment (Environment.java:213) - HHH000206: hibernate.properties not found
2017-04-24 10:12:47,379 DEBUG [Scanner-0] internal.JaxbCfgProcessor (JaxbCfgProcessor.java:116) - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2017-04-24 10:12:47,568 DEBUG [Scanner-0] cfg.Configuration (Configuration.java:724) - Building session factory using internal StandardServiceRegistryBuilder
2017-04-24 10:12:47,583 DEBUG [Scanner-0] spi.ServiceBinding (ServiceBinding.java:68) - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2017-04-24 10:12:47,586 DEBUG [Scanner-0] cfg.Configuration (Configuration.java:652) - Building session factory using provided StandardServiceRegistry
2017-04-24 10:12:47,629 DEBUG [Scanner-0] internal.RegionFactoryInitiator (RegionFactoryInitiator.java:75) - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2017-04-24 10:12:47,654 INFO  [Scanner-0] java.JavaReflectionManager (JavaReflectionManager.java:66) - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2017-04-24 10:12:47,698 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@3dbdd969
2017-04-24 10:12:47,700 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@3dbdd969
2017-04-24 10:12:47,700 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3dbdd969
2017-04-24 10:12:47,702 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@56195bc5
2017-04-24 10:12:47,705 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@35d7df00
2017-04-24 10:12:47,707 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration yes_no -> org.hibernate.type.YesNoType@19a192c2
2017-04-24 10:12:47,712 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@4a5ac2bc
2017-04-24 10:12:47,712 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@4a5ac2bc
2017-04-24 10:12:47,713 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4a5ac2bc
2017-04-24 10:12:47,716 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration character -> org.hibernate.type.CharacterType@37a5d69e
2017-04-24 10:12:47,717 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration char -> org.hibernate.type.CharacterType@37a5d69e
2017-04-24 10:12:47,717 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@37a5d69e
2017-04-24 10:12:47,720 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@55cac2da
2017-04-24 10:12:47,721 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@55cac2da
2017-04-24 10:12:47,722 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@55cac2da
2017-04-24 10:12:47,724 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration integer -> org.hibernate.type.IntegerType@2b0fbfa6
2017-04-24 10:12:47,725 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration int -> org.hibernate.type.IntegerType@2b0fbfa6
2017-04-24 10:12:47,725 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2b0fbfa6
2017-04-24 10:12:47,728 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@1f37e1c4
2017-04-24 10:12:47,729 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@1f37e1c4
2017-04-24 10:12:47,730 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1f37e1c4
2017-04-24 10:12:47,733 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@69307573
2017-04-24 10:12:47,734 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@69307573
2017-04-24 10:12:47,734 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@69307573
2017-04-24 10:12:47,738 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@4a95b1e0
2017-04-24 10:12:47,739 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@4a95b1e0
2017-04-24 10:12:47,739 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4a95b1e0
2017-04-24 10:12:47,743 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@604e1da3
2017-04-24 10:12:47,744 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@604e1da3
2017-04-24 10:12:47,746 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7aaa13a2
2017-04-24 10:12:47,747 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7aaa13a2
2017-04-24 10:12:47,751 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration string -> org.hibernate.type.StringType@2be2d46e
2017-04-24 10:12:47,751 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.String -> org.hibernate.type.StringType@2be2d46e
2017-04-24 10:12:47,753 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@20d9a647
2017-04-24 10:12:47,756 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6c77d192
2017-04-24 10:12:47,758 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration url -> org.hibernate.type.UrlType@2e1bac3
2017-04-24 10:12:47,759 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@2e1bac3
2017-04-24 10:12:47,762 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Duration -> org.hibernate.type.DurationType@adeaab8
2017-04-24 10:12:47,762 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@adeaab8
2017-04-24 10:12:47,766 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Instant -> org.hibernate.type.InstantType@50ba745d
2017-04-24 10:12:47,766 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@50ba745d
2017-04-24 10:12:47,769 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@5bdcb90
2017-04-24 10:12:47,770 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@5bdcb90
2017-04-24 10:12:47,773 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@16ac9533
2017-04-24 10:12:47,774 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@16ac9533
2017-04-24 10:12:47,777 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@4d63bec5
2017-04-24 10:12:47,778 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@4d63bec5
2017-04-24 10:12:47,781 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4f0bd7ab
2017-04-24 10:12:47,782 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4f0bd7ab
2017-04-24 10:12:47,785 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@7a0ef6df
2017-04-24 10:12:47,785 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@7a0ef6df
2017-04-24 10:12:47,789 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@16d20446
2017-04-24 10:12:47,790 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@16d20446
2017-04-24 10:12:47,794 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration date -> org.hibernate.type.DateType@3bf5dd5c
2017-04-24 10:12:47,795 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@3bf5dd5c
2017-04-24 10:12:47,798 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration time -> org.hibernate.type.TimeType@1c914c34
2017-04-24 10:12:47,798 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1c914c34
2017-04-24 10:12:47,801 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration timestamp -> org.hibernate.type.TimestampType@18109ff6
2017-04-24 10:12:47,802 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@18109ff6
2017-04-24 10:12:47,802 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@18109ff6
2017-04-24 10:12:47,806 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2e68d6f6
2017-04-24 10:12:47,809 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration calendar -> org.hibernate.type.CalendarType@77e9d730
2017-04-24 10:12:47,810 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@77e9d730
2017-04-24 10:12:47,810 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@77e9d730
2017-04-24 10:12:47,812 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5e849b36
2017-04-24 10:12:47,815 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration locale -> org.hibernate.type.LocaleType@42dffa10
2017-04-24 10:12:47,816 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@42dffa10
2017-04-24 10:12:47,818 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration currency -> org.hibernate.type.CurrencyType@7d59dc0c
2017-04-24 10:12:47,819 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7d59dc0c
2017-04-24 10:12:47,821 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2f5fbdc3
2017-04-24 10:12:47,822 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2f5fbdc3
2017-04-24 10:12:47,827 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration class -> org.hibernate.type.ClassType@28bfb0cc
2017-04-24 10:12:47,828 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@28bfb0cc
2017-04-24 10:12:47,833 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@221c01ca
2017-04-24 10:12:47,835 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@221c01ca
2017-04-24 10:12:47,836 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7e309818
2017-04-24 10:12:47,840 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration binary -> org.hibernate.type.BinaryType@5f5cfa55
2017-04-24 10:12:47,841 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte[] -> org.hibernate.type.BinaryType@5f5cfa55
2017-04-24 10:12:47,841 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [B -> org.hibernate.type.BinaryType@5f5cfa55
2017-04-24 10:12:47,844 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@77853813
2017-04-24 10:12:47,845 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@77853813
2017-04-24 10:12:47,845 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@77853813
2017-04-24 10:12:47,848 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration row_version -> org.hibernate.type.RowVersionType@1118bded
2017-04-24 10:12:47,850 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration image -> org.hibernate.type.ImageType@6ca78a5e
2017-04-24 10:12:47,853 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration characters -> org.hibernate.type.CharArrayType@3d455fa3
2017-04-24 10:12:47,853 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration char[] -> org.hibernate.type.CharArrayType@3d455fa3
2017-04-24 10:12:47,854 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [C -> org.hibernate.type.CharArrayType@3d455fa3
2017-04-24 10:12:47,856 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@221444b4
2017-04-24 10:12:47,857 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@221444b4
2017-04-24 10:12:47,857 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@221444b4
2017-04-24 10:12:47,859 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration text -> org.hibernate.type.TextType@23586bdd
2017-04-24 10:12:47,861 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ntext -> org.hibernate.type.NTextType@13b09e32
2017-04-24 10:12:47,869 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration blob -> org.hibernate.type.BlobType@6524944f
2017-04-24 10:12:47,870 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6524944f
2017-04-24 10:12:47,871 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1a317a1a
2017-04-24 10:12:47,879 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration clob -> org.hibernate.type.ClobType@6da83407
2017-04-24 10:12:47,880 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6da83407
2017-04-24 10:12:47,886 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration nclob -> org.hibernate.type.NClobType@439d0487
2017-04-24 10:12:47,886 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@439d0487
2017-04-24 10:12:47,888 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7bc9688a
2017-04-24 10:12:47,889 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5b7bc424
2017-04-24 10:12:47,893 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration serializable -> org.hibernate.type.SerializableType@33a4da2f
2017-04-24 10:12:47,899 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration object -> org.hibernate.type.ObjectType@1ecef488
2017-04-24 10:12:47,900 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1ecef488
2017-04-24 10:12:47,902 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@132e3d52
2017-04-24 10:12:47,902 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7aade10b
2017-04-24 10:12:47,903 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5ebce1ba
2017-04-24 10:12:47,903 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@34983fd4
2017-04-24 10:12:47,906 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@563e40b8
2017-04-24 10:12:47,907 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@430e46cd
2017-04-24 10:12:47,907 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7a06ce27
2017-04-24 10:12:47,908 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@f15282c
2017-04-24 10:12:47,937 WARN  [Scanner-0] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:70) - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2017-04-24 10:12:47,939 DEBUG [Scanner-0] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:154) - No driver class specified
2017-04-24 10:12:47,941 INFO  [Scanner-0] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:126) - HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306/strutsproject]
2017-04-24 10:12:47,942 INFO  [Scanner-0] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:132) - HHH10001001: Connection properties: {user=root, password=}
2017-04-24 10:12:47,951 INFO  [Scanner-0] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:140) - HHH10001003: Autocommit mode: false
2017-04-24 10:12:47,958 DEBUG [Scanner-0] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:384) - Initializing Connection pool with 1 Connections
2017-04-24 10:12:47,959 INFO  [Scanner-0] internal.PooledConnections (PooledConnections.java:41) - HHH000115: Hibernate connection pool size: 1 (min=1)
2017-04-24 10:13:26,450 DEBUG [Scanner-0] internal.CoreLogging (CoreLogging.java:28) - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2017-04-24 10:13:26,494 DEBUG [Scanner-0] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2017-04-24 10:13:26,504 DEBUG [Scanner-0] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2017-04-24 10:13:26,517 DEBUG [Scanner-0] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2017-04-24 10:13:26,681 INFO  [Scanner-0] hibernate.Version (Version.java:45) - HHH000412: Hibernate Core {5.2.9.Final}
2017-04-24 10:13:26,686 INFO  [Scanner-0] cfg.Environment (Environment.java:213) - HHH000206: hibernate.properties not found
2017-04-24 10:13:26,724 DEBUG [Scanner-0] internal.JaxbCfgProcessor (JaxbCfgProcessor.java:116) - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2017-04-24 10:13:26,857 DEBUG [Scanner-0] cfg.Configuration (Configuration.java:724) - Building session factory using internal StandardServiceRegistryBuilder
2017-04-24 10:13:26,870 DEBUG [Scanner-0] spi.ServiceBinding (ServiceBinding.java:68) - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2017-04-24 10:13:26,870 DEBUG [Scanner-0] cfg.Configuration (Configuration.java:652) - Building session factory using provided StandardServiceRegistry
2017-04-24 10:13:26,907 DEBUG [Scanner-0] internal.RegionFactoryInitiator (RegionFactoryInitiator.java:75) - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2017-04-24 10:13:26,923 INFO  [Scanner-0] java.JavaReflectionManager (JavaReflectionManager.java:66) - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2017-04-24 10:13:26,968 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@7c7490db
2017-04-24 10:13:26,969 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@7c7490db
2017-04-24 10:13:26,969 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7c7490db
2017-04-24 10:13:26,972 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7cd77955
2017-04-24 10:13:26,974 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@66b616f2
2017-04-24 10:13:26,976 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration yes_no -> org.hibernate.type.YesNoType@71c460ae
2017-04-24 10:13:26,980 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@303fc735
2017-04-24 10:13:26,981 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@303fc735
2017-04-24 10:13:26,981 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@303fc735
2017-04-24 10:13:26,984 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration character -> org.hibernate.type.CharacterType@38690aa
2017-04-24 10:13:26,984 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration char -> org.hibernate.type.CharacterType@38690aa
2017-04-24 10:13:26,985 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@38690aa
2017-04-24 10:13:26,988 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@1babae87
2017-04-24 10:13:26,989 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@1babae87
2017-04-24 10:13:26,989 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1babae87
2017-04-24 10:13:26,992 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration integer -> org.hibernate.type.IntegerType@4543f789
2017-04-24 10:13:26,993 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration int -> org.hibernate.type.IntegerType@4543f789
2017-04-24 10:13:26,993 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4543f789
2017-04-24 10:13:26,997 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@272c68be
2017-04-24 10:13:26,997 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@272c68be
2017-04-24 10:13:26,998 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@272c68be
2017-04-24 10:13:27,001 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@b7e1698
2017-04-24 10:13:27,002 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@b7e1698
2017-04-24 10:13:27,002 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@b7e1698
2017-04-24 10:13:27,005 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@33d84ca6
2017-04-24 10:13:27,006 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@33d84ca6
2017-04-24 10:13:27,006 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@33d84ca6
2017-04-24 10:13:27,010 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5650ed24
2017-04-24 10:13:27,010 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5650ed24
2017-04-24 10:13:27,013 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@15300f66
2017-04-24 10:13:27,014 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@15300f66
2017-04-24 10:13:27,023 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration string -> org.hibernate.type.StringType@3b414439
2017-04-24 10:13:27,024 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.String -> org.hibernate.type.StringType@3b414439
2017-04-24 10:13:27,032 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@11cf56b9
2017-04-24 10:13:27,035 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@36ccfe05
2017-04-24 10:13:27,038 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration url -> org.hibernate.type.UrlType@1e696879
2017-04-24 10:13:27,039 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1e696879
2017-04-24 10:13:27,041 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Duration -> org.hibernate.type.DurationType@7972f9f8
2017-04-24 10:13:27,042 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7972f9f8
2017-04-24 10:13:27,046 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Instant -> org.hibernate.type.InstantType@28c49e7d
2017-04-24 10:13:27,046 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@28c49e7d
2017-04-24 10:13:27,049 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@3afe3e2
2017-04-24 10:13:27,050 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@3afe3e2
2017-04-24 10:13:27,054 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@79d0b432
2017-04-24 10:13:27,054 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@79d0b432
2017-04-24 10:13:27,058 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2b6c17fb
2017-04-24 10:13:27,058 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2b6c17fb
2017-04-24 10:13:27,061 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@65bda1bd
2017-04-24 10:13:27,062 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@65bda1bd
2017-04-24 10:13:27,065 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@15753738
2017-04-24 10:13:27,065 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@15753738
2017-04-24 10:13:27,068 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7cf919fa
2017-04-24 10:13:27,069 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7cf919fa
2017-04-24 10:13:27,073 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration date -> org.hibernate.type.DateType@5e80d98b
2017-04-24 10:13:27,074 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@5e80d98b
2017-04-24 10:13:27,076 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration time -> org.hibernate.type.TimeType@30c052a3
2017-04-24 10:13:27,077 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@30c052a3
2017-04-24 10:13:27,081 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration timestamp -> org.hibernate.type.TimestampType@1cf3d9e3
2017-04-24 10:13:27,081 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1cf3d9e3
2017-04-24 10:13:27,082 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1cf3d9e3
2017-04-24 10:13:27,085 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@65e23aa1
2017-04-24 10:13:27,088 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration calendar -> org.hibernate.type.CalendarType@28567a05
2017-04-24 10:13:27,089 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@28567a05
2017-04-24 10:13:27,089 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@28567a05
2017-04-24 10:13:27,091 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@343ec1c2
2017-04-24 10:13:27,094 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration locale -> org.hibernate.type.LocaleType@5e893452
2017-04-24 10:13:27,095 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5e893452
2017-04-24 10:13:27,097 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration currency -> org.hibernate.type.CurrencyType@5442cfcd
2017-04-24 10:13:27,098 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5442cfcd
2017-04-24 10:13:27,100 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@340d68de
2017-04-24 10:13:27,101 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@340d68de
2017-04-24 10:13:27,104 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration class -> org.hibernate.type.ClassType@47ef2691
2017-04-24 10:13:27,105 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@47ef2691
2017-04-24 10:13:27,108 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@15009655
2017-04-24 10:13:27,109 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@15009655
2017-04-24 10:13:27,110 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@566c7217
2017-04-24 10:13:27,113 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration binary -> org.hibernate.type.BinaryType@341bb47c
2017-04-24 10:13:27,114 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte[] -> org.hibernate.type.BinaryType@341bb47c
2017-04-24 10:13:27,114 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [B -> org.hibernate.type.BinaryType@341bb47c
2017-04-24 10:13:27,117 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7a67cf26
2017-04-24 10:13:27,118 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7a67cf26
2017-04-24 10:13:27,119 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7a67cf26
2017-04-24 10:13:27,122 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration row_version -> org.hibernate.type.RowVersionType@12a342ee
2017-04-24 10:13:27,124 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration image -> org.hibernate.type.ImageType@5d2ee8ba
2017-04-24 10:13:27,127 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration characters -> org.hibernate.type.CharArrayType@1f177596
2017-04-24 10:13:27,128 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration char[] -> org.hibernate.type.CharArrayType@1f177596
2017-04-24 10:13:27,128 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [C -> org.hibernate.type.CharArrayType@1f177596
2017-04-24 10:13:27,130 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@266b393e
2017-04-24 10:13:27,131 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@266b393e
2017-04-24 10:13:27,132 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@266b393e
2017-04-24 10:13:27,133 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration text -> org.hibernate.type.TextType@20369a69
2017-04-24 10:13:27,136 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ntext -> org.hibernate.type.NTextType@3e81202e
2017-04-24 10:13:27,145 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration blob -> org.hibernate.type.BlobType@25f89e
2017-04-24 10:13:27,145 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@25f89e
2017-04-24 10:13:27,147 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@22dfcd9c
2017-04-24 10:13:27,156 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration clob -> org.hibernate.type.ClobType@4b6a5c1d
2017-04-24 10:13:27,157 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4b6a5c1d
2017-04-24 10:13:27,163 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration nclob -> org.hibernate.type.NClobType@14aadb23
2017-04-24 10:13:27,164 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@14aadb23
2017-04-24 10:13:27,165 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4d4dfdf
2017-04-24 10:13:27,167 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@c7d2782
2017-04-24 10:13:27,171 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration serializable -> org.hibernate.type.SerializableType@ee72da4
2017-04-24 10:13:27,178 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration object -> org.hibernate.type.ObjectType@2b167088
2017-04-24 10:13:27,178 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2b167088
2017-04-24 10:13:27,180 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@509f04ee
2017-04-24 10:13:27,181 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4895ac45
2017-04-24 10:13:27,181 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@472c5e9a
2017-04-24 10:13:27,181 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@dc4cbad
2017-04-24 10:13:27,182 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@25d4168f
2017-04-24 10:13:27,182 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@404661f4
2017-04-24 10:13:27,182 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@65bb3fe8
2017-04-24 10:13:27,183 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4e890951
2017-04-24 10:13:27,231 WARN  [Scanner-0] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:70) - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2017-04-24 10:13:27,234 DEBUG [Scanner-0] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:154) - No driver class specified
2017-04-24 10:13:27,240 INFO  [Scanner-0] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:126) - HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306/strutsproject]
2017-04-24 10:13:27,244 INFO  [Scanner-0] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:132) - HHH10001001: Connection properties: {user=root, password=}
2017-04-24 10:13:27,258 INFO  [Scanner-0] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:140) - HHH10001003: Autocommit mode: false
2017-04-24 10:13:27,275 DEBUG [Scanner-0] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:384) - Initializing Connection pool with 1 Connections
2017-04-24 10:13:27,276 INFO  [Scanner-0] internal.PooledConnections (PooledConnections.java:41) - HHH000115: Hibernate connection pool size: 1 (min=1)
2017-04-24 10:13:46,622 DEBUG [Scanner-0] internal.CoreLogging (CoreLogging.java:28) - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2017-04-24 10:13:46,652 DEBUG [Scanner-0] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2017-04-24 10:13:46,666 DEBUG [Scanner-0] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2017-04-24 10:13:46,676 DEBUG [Scanner-0] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2017-04-24 10:13:46,862 INFO  [Scanner-0] hibernate.Version (Version.java:45) - HHH000412: Hibernate Core {5.2.9.Final}
2017-04-24 10:13:46,867 INFO  [Scanner-0] cfg.Environment (Environment.java:213) - HHH000206: hibernate.properties not found
2017-04-24 10:13:46,898 DEBUG [Scanner-0] internal.JaxbCfgProcessor (JaxbCfgProcessor.java:116) - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2017-04-24 10:13:47,054 DEBUG [Scanner-0] cfg.Configuration (Configuration.java:724) - Building session factory using internal StandardServiceRegistryBuilder
2017-04-24 10:13:47,067 DEBUG [Scanner-0] spi.ServiceBinding (ServiceBinding.java:68) - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2017-04-24 10:13:47,068 DEBUG [Scanner-0] cfg.Configuration (Configuration.java:652) - Building session factory using provided StandardServiceRegistry
2017-04-24 10:13:47,126 DEBUG [Scanner-0] internal.RegionFactoryInitiator (RegionFactoryInitiator.java:75) - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2017-04-24 10:13:47,155 INFO  [Scanner-0] java.JavaReflectionManager (JavaReflectionManager.java:66) - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2017-04-24 10:13:47,216 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@44ffb66f
2017-04-24 10:13:47,217 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@44ffb66f
2017-04-24 10:13:47,217 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@44ffb66f
2017-04-24 10:13:47,219 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@75a22c99
2017-04-24 10:13:47,222 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2859f22a
2017-04-24 10:13:47,223 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration yes_no -> org.hibernate.type.YesNoType@67613204
2017-04-24 10:13:47,227 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@7d0ec247
2017-04-24 10:13:47,227 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@7d0ec247
2017-04-24 10:13:47,228 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7d0ec247
2017-04-24 10:13:47,230 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration character -> org.hibernate.type.CharacterType@50943b93
2017-04-24 10:13:47,231 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration char -> org.hibernate.type.CharacterType@50943b93
2017-04-24 10:13:47,231 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@50943b93
2017-04-24 10:13:47,234 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@71330bc
2017-04-24 10:13:47,239 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@71330bc
2017-04-24 10:13:47,240 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@71330bc
2017-04-24 10:13:47,245 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration integer -> org.hibernate.type.IntegerType@203ce244
2017-04-24 10:13:47,246 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration int -> org.hibernate.type.IntegerType@203ce244
2017-04-24 10:13:47,246 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@203ce244
2017-04-24 10:13:47,250 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@20876514
2017-04-24 10:13:47,250 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@20876514
2017-04-24 10:13:47,251 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@20876514
2017-04-24 10:13:47,254 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@27b32681
2017-04-24 10:13:47,255 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@27b32681
2017-04-24 10:13:47,256 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@27b32681
2017-04-24 10:13:47,259 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@2f4d09a3
2017-04-24 10:13:47,260 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@2f4d09a3
2017-04-24 10:13:47,260 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2f4d09a3
2017-04-24 10:13:47,263 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4734f699
2017-04-24 10:13:47,264 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4734f699
2017-04-24 10:13:47,267 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3d37aaf4
2017-04-24 10:13:47,267 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3d37aaf4
2017-04-24 10:13:47,270 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration string -> org.hibernate.type.StringType@1578c7e8
2017-04-24 10:13:47,271 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.String -> org.hibernate.type.StringType@1578c7e8
2017-04-24 10:13:47,273 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@55a88d80
2017-04-24 10:13:47,276 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@22553e8f
2017-04-24 10:13:47,279 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration url -> org.hibernate.type.UrlType@507b0da3
2017-04-24 10:13:47,280 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@507b0da3
2017-04-24 10:13:47,282 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Duration -> org.hibernate.type.DurationType@656ead6c
2017-04-24 10:13:47,283 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@656ead6c
2017-04-24 10:13:47,287 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Instant -> org.hibernate.type.InstantType@6a26388c
2017-04-24 10:13:47,288 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6a26388c
2017-04-24 10:13:47,291 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@66a89044
2017-04-24 10:13:47,292 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@66a89044
2017-04-24 10:13:47,295 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@400f9949
2017-04-24 10:13:47,296 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@400f9949
2017-04-24 10:13:47,300 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@41f695e2
2017-04-24 10:13:47,300 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@41f695e2
2017-04-24 10:13:47,303 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@22078d35
2017-04-24 10:13:47,304 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@22078d35
2017-04-24 10:13:47,307 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@106168e0
2017-04-24 10:13:47,308 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@106168e0
2017-04-24 10:13:47,312 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@70e6ff1a
2017-04-24 10:13:47,312 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@70e6ff1a
2017-04-24 10:13:47,316 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration date -> org.hibernate.type.DateType@53e6061d
2017-04-24 10:13:47,317 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@53e6061d
2017-04-24 10:13:47,320 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration time -> org.hibernate.type.TimeType@30859926
2017-04-24 10:13:47,321 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@30859926
2017-04-24 10:13:47,324 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration timestamp -> org.hibernate.type.TimestampType@5efd234
2017-04-24 10:13:47,325 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5efd234
2017-04-24 10:13:47,326 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5efd234
2017-04-24 10:13:47,329 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@736b1abe
2017-04-24 10:13:47,333 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration calendar -> org.hibernate.type.CalendarType@1d73c650
2017-04-24 10:13:47,334 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1d73c650
2017-04-24 10:13:47,335 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1d73c650
2017-04-24 10:13:47,337 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6deb91b
2017-04-24 10:13:47,340 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration locale -> org.hibernate.type.LocaleType@5ed28703
2017-04-24 10:13:47,341 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5ed28703
2017-04-24 10:13:47,343 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration currency -> org.hibernate.type.CurrencyType@168cb3c
2017-04-24 10:13:47,344 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@168cb3c
2017-04-24 10:13:47,347 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@73988863
2017-04-24 10:13:47,348 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@73988863
2017-04-24 10:13:47,351 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration class -> org.hibernate.type.ClassType@75fb60bd
2017-04-24 10:13:47,352 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@75fb60bd
2017-04-24 10:13:47,355 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@20d5b385
2017-04-24 10:13:47,356 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@20d5b385
2017-04-24 10:13:47,357 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@367385c7
2017-04-24 10:13:47,360 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration binary -> org.hibernate.type.BinaryType@47dcfd1c
2017-04-24 10:13:47,361 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte[] -> org.hibernate.type.BinaryType@47dcfd1c
2017-04-24 10:13:47,361 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [B -> org.hibernate.type.BinaryType@47dcfd1c
2017-04-24 10:13:47,364 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1d8c66ca
2017-04-24 10:13:47,365 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1d8c66ca
2017-04-24 10:13:47,365 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1d8c66ca
2017-04-24 10:13:47,368 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration row_version -> org.hibernate.type.RowVersionType@5f8b5536
2017-04-24 10:13:47,370 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration image -> org.hibernate.type.ImageType@153426c3
2017-04-24 10:13:47,372 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration characters -> org.hibernate.type.CharArrayType@382b2494
2017-04-24 10:13:47,373 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration char[] -> org.hibernate.type.CharArrayType@382b2494
2017-04-24 10:13:47,375 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [C -> org.hibernate.type.CharArrayType@382b2494
2017-04-24 10:13:47,380 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@58843c85
2017-04-24 10:13:47,381 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@58843c85
2017-04-24 10:13:47,381 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@58843c85
2017-04-24 10:13:47,383 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration text -> org.hibernate.type.TextType@8131caf
2017-04-24 10:13:47,385 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ntext -> org.hibernate.type.NTextType@2f370449
2017-04-24 10:13:47,394 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration blob -> org.hibernate.type.BlobType@4977d4f6
2017-04-24 10:13:47,394 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4977d4f6
2017-04-24 10:13:47,396 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7987b4ed
2017-04-24 10:13:47,409 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration clob -> org.hibernate.type.ClobType@dcafc24
2017-04-24 10:13:47,410 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@dcafc24
2017-04-24 10:13:47,416 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration nclob -> org.hibernate.type.NClobType@5c6d9795
2017-04-24 10:13:47,417 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5c6d9795
2017-04-24 10:13:47,418 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6e58dcc0
2017-04-24 10:13:47,420 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@77299848
2017-04-24 10:13:47,429 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration serializable -> org.hibernate.type.SerializableType@7b8bd042
2017-04-24 10:13:47,442 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration object -> org.hibernate.type.ObjectType@1f06c1f4
2017-04-24 10:13:47,446 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1f06c1f4
2017-04-24 10:13:47,451 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3ba418a7
2017-04-24 10:13:47,454 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@12847746
2017-04-24 10:13:47,457 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6c25c92c
2017-04-24 10:13:47,466 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2176e3a0
2017-04-24 10:13:47,468 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3a0ca609
2017-04-24 10:13:47,471 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@b03d849
2017-04-24 10:13:47,471 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@49ad1cac
2017-04-24 10:13:47,472 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5f508dda
2017-04-24 10:13:47,498 WARN  [Scanner-0] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:70) - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2017-04-24 10:13:47,500 DEBUG [Scanner-0] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:154) - No driver class specified
2017-04-24 10:13:47,501 INFO  [Scanner-0] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:126) - HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306/strutsproject]
2017-04-24 10:13:47,502 INFO  [Scanner-0] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:132) - HHH10001001: Connection properties: {user=root, password=}
2017-04-24 10:13:47,503 INFO  [Scanner-0] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:140) - HHH10001003: Autocommit mode: false
2017-04-24 10:13:47,511 DEBUG [Scanner-0] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:384) - Initializing Connection pool with 1 Connections
2017-04-24 10:13:47,512 INFO  [Scanner-0] internal.PooledConnections (PooledConnections.java:41) - HHH000115: Hibernate connection pool size: 1 (min=1)
2017-04-24 10:17:21,855 DEBUG [main] internal.CoreLogging (CoreLogging.java:28) - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2017-04-24 10:17:21,892 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2017-04-24 10:17:21,903 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2017-04-24 10:17:21,918 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2017-04-24 10:17:22,311 INFO  [main] hibernate.Version (Version.java:45) - HHH000412: Hibernate Core {5.2.9.Final}
2017-04-24 10:17:22,318 INFO  [main] cfg.Environment (Environment.java:213) - HHH000206: hibernate.properties not found
2017-04-24 10:17:22,364 DEBUG [main] internal.JaxbCfgProcessor (JaxbCfgProcessor.java:116) - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2017-04-24 10:17:22,787 DEBUG [main] cfg.Configuration (Configuration.java:724) - Building session factory using internal StandardServiceRegistryBuilder
2017-04-24 10:17:22,804 DEBUG [main] spi.ServiceBinding (ServiceBinding.java:68) - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2017-04-24 10:17:22,808 DEBUG [main] cfg.Configuration (Configuration.java:652) - Building session factory using provided StandardServiceRegistry
2017-04-24 10:17:22,857 DEBUG [main] internal.RegionFactoryInitiator (RegionFactoryInitiator.java:75) - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2017-04-24 10:17:22,879 INFO  [main] java.JavaReflectionManager (JavaReflectionManager.java:66) - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2017-04-24 10:17:22,935 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@334ebcaa
2017-04-24 10:17:22,939 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@334ebcaa
2017-04-24 10:17:22,942 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@334ebcaa
2017-04-24 10:17:22,948 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6c1cfa53
2017-04-24 10:17:22,953 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@37d28f02
2017-04-24 10:17:22,958 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration yes_no -> org.hibernate.type.YesNoType@33f2df51
2017-04-24 10:17:22,965 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@61a91c9b
2017-04-24 10:17:22,968 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@61a91c9b
2017-04-24 10:17:22,969 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@61a91c9b
2017-04-24 10:17:22,972 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration character -> org.hibernate.type.CharacterType@462e1e64
2017-04-24 10:17:22,974 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration char -> org.hibernate.type.CharacterType@462e1e64
2017-04-24 10:17:22,975 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@462e1e64
2017-04-24 10:17:22,983 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@22c75c01
2017-04-24 10:17:22,985 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@22c75c01
2017-04-24 10:17:22,986 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@22c75c01
2017-04-24 10:17:22,989 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration integer -> org.hibernate.type.IntegerType@2f0ed952
2017-04-24 10:17:22,990 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration int -> org.hibernate.type.IntegerType@2f0ed952
2017-04-24 10:17:22,990 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2f0ed952
2017-04-24 10:17:22,994 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@4832f03b
2017-04-24 10:17:22,995 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@4832f03b
2017-04-24 10:17:23,003 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4832f03b
2017-04-24 10:17:23,013 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@e11ecfa
2017-04-24 10:17:23,014 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@e11ecfa
2017-04-24 10:17:23,015 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@e11ecfa
2017-04-24 10:17:23,018 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@43acd79e
2017-04-24 10:17:23,019 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@43acd79e
2017-04-24 10:17:23,020 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@43acd79e
2017-04-24 10:17:23,025 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@23a918c7
2017-04-24 10:17:23,026 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@23a918c7
2017-04-24 10:17:23,028 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1f67761b
2017-04-24 10:17:23,029 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1f67761b
2017-04-24 10:17:23,034 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration string -> org.hibernate.type.StringType@77ab22be
2017-04-24 10:17:23,035 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.String -> org.hibernate.type.StringType@77ab22be
2017-04-24 10:17:23,039 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6ca372ef
2017-04-24 10:17:23,041 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@280d4882
2017-04-24 10:17:23,044 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration url -> org.hibernate.type.UrlType@56b859a6
2017-04-24 10:17:23,046 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@56b859a6
2017-04-24 10:17:23,050 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Duration -> org.hibernate.type.DurationType@58015e56
2017-04-24 10:17:23,051 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@58015e56
2017-04-24 10:17:23,109 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Instant -> org.hibernate.type.InstantType@2db4ad1
2017-04-24 10:17:23,114 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2db4ad1
2017-04-24 10:17:23,123 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@6fc1020a
2017-04-24 10:17:23,127 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@6fc1020a
2017-04-24 10:17:23,135 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7dffda8b
2017-04-24 10:17:23,138 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7dffda8b
2017-04-24 10:17:23,145 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@66933239
2017-04-24 10:17:23,146 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@66933239
2017-04-24 10:17:23,150 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4f327096
2017-04-24 10:17:23,151 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4f327096
2017-04-24 10:17:23,155 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@41a374be
2017-04-24 10:17:23,156 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@41a374be
2017-04-24 10:17:23,176 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7be1ce6a
2017-04-24 10:17:23,179 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7be1ce6a
2017-04-24 10:17:23,186 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration date -> org.hibernate.type.DateType@2ddb3ae8
2017-04-24 10:17:23,190 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2ddb3ae8
2017-04-24 10:17:23,196 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration time -> org.hibernate.type.TimeType@6fbc1bb
2017-04-24 10:17:23,198 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6fbc1bb
2017-04-24 10:17:23,208 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration timestamp -> org.hibernate.type.TimestampType@48df4071
2017-04-24 10:17:23,211 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@48df4071
2017-04-24 10:17:23,212 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@48df4071
2017-04-24 10:17:23,221 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@67507df
2017-04-24 10:17:23,226 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration calendar -> org.hibernate.type.CalendarType@33feb805
2017-04-24 10:17:23,228 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@33feb805
2017-04-24 10:17:23,228 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@33feb805
2017-04-24 10:17:23,231 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@34332b8d
2017-04-24 10:17:23,235 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration locale -> org.hibernate.type.LocaleType@7cca01a8
2017-04-24 10:17:23,236 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7cca01a8
2017-04-24 10:17:23,239 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration currency -> org.hibernate.type.CurrencyType@45e9b12d
2017-04-24 10:17:23,240 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@45e9b12d
2017-04-24 10:17:23,246 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@329548d0
2017-04-24 10:17:23,247 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@329548d0
2017-04-24 10:17:23,255 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration class -> org.hibernate.type.ClassType@49d30c6f
2017-04-24 10:17:23,256 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@49d30c6f
2017-04-24 10:17:23,260 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1c7350b0
2017-04-24 10:17:23,262 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1c7350b0
2017-04-24 10:17:23,264 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@50448409
2017-04-24 10:17:23,267 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration binary -> org.hibernate.type.BinaryType@30b975ad
2017-04-24 10:17:23,268 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte[] -> org.hibernate.type.BinaryType@30b975ad
2017-04-24 10:17:23,269 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [B -> org.hibernate.type.BinaryType@30b975ad
2017-04-24 10:17:23,272 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@ea52184
2017-04-24 10:17:23,274 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@ea52184
2017-04-24 10:17:23,275 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@ea52184
2017-04-24 10:17:23,278 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration row_version -> org.hibernate.type.RowVersionType@7f608e21
2017-04-24 10:17:23,280 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration image -> org.hibernate.type.ImageType@66236a0a
2017-04-24 10:17:23,283 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration characters -> org.hibernate.type.CharArrayType@795f8317
2017-04-24 10:17:23,284 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration char[] -> org.hibernate.type.CharArrayType@795f8317
2017-04-24 10:17:23,285 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [C -> org.hibernate.type.CharArrayType@795f8317
2017-04-24 10:17:23,288 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@157ec23b
2017-04-24 10:17:23,289 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@157ec23b
2017-04-24 10:17:23,289 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@157ec23b
2017-04-24 10:17:23,294 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration text -> org.hibernate.type.TextType@47ac613b
2017-04-24 10:17:23,296 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ntext -> org.hibernate.type.NTextType@134ff8f8
2017-04-24 10:17:23,305 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration blob -> org.hibernate.type.BlobType@1f3b992
2017-04-24 10:17:23,306 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1f3b992
2017-04-24 10:17:23,310 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7beae796
2017-04-24 10:17:23,319 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration clob -> org.hibernate.type.ClobType@2eed37f4
2017-04-24 10:17:23,320 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2eed37f4
2017-04-24 10:17:23,327 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration nclob -> org.hibernate.type.NClobType@13dbed9e
2017-04-24 10:17:23,328 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@13dbed9e
2017-04-24 10:17:23,330 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1d50a7ca
2017-04-24 10:17:23,332 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3003e580
2017-04-24 10:17:23,335 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration serializable -> org.hibernate.type.SerializableType@5f174dd2
2017-04-24 10:17:23,342 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration object -> org.hibernate.type.ObjectType@326e0b8e
2017-04-24 10:17:23,343 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@326e0b8e
2017-04-24 10:17:23,345 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@34585ac9
2017-04-24 10:17:23,345 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@76a805b7
2017-04-24 10:17:23,346 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@15f35bc3
2017-04-24 10:17:23,349 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@167381c7
2017-04-24 10:17:23,350 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@608b1fd2
2017-04-24 10:17:23,351 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@56382bc9
2017-04-24 10:17:23,351 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@591a4f8e
2017-04-24 10:17:23,352 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@53ed80d3
2017-04-24 10:17:23,379 WARN  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:70) - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2017-04-24 10:17:23,381 DEBUG [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:154) - No driver class specified
2017-04-24 10:17:23,383 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:126) - HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306/strutsproject]
2017-04-24 10:17:23,384 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:132) - HHH10001001: Connection properties: {user=root, password=}
2017-04-24 10:17:23,392 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:140) - HHH10001003: Autocommit mode: false
2017-04-24 10:17:23,402 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:384) - Initializing Connection pool with 1 Connections
2017-04-24 10:17:23,406 INFO  [main] internal.PooledConnections (PooledConnections.java:41) - HHH000115: Hibernate connection pool size: 1 (min=1)
2017-04-24 10:17:23,934 DEBUG [main] internal.JdbcEnvironmentInitiator (JdbcEnvironmentInitiator.java:72) - Database ->
       name : MySQL
    version : 5.6.30-1
      major : 5
      minor : 6
2017-04-24 10:17:23,935 DEBUG [main] internal.JdbcEnvironmentInitiator (JdbcEnvironmentInitiator.java:83) - Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.9 ( Revision: ${svn.Revision} )
      major : 5
      minor : 1
2017-04-24 10:17:23,938 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:389) - JDBC version : 3.0
2017-04-24 10:17:23,967 INFO  [main] dialect.Dialect (Dialect.java:157) - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2017-04-24 10:17:24,061 DEBUG [main] spi.IdentifierHelperBuilder (IdentifierHelperBuilder.java:117) - JDBC driver metadata reported database stores quoted identifiers in more than one case
2017-04-24 10:17:24,075 DEBUG [main] spi.IdentifierHelperBuilder (IdentifierHelperBuilder.java:191) - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2017-04-24 10:17:24,097 INFO  [main] internal.LobCreatorBuilderImpl (LobCreatorBuilderImpl.java:98) - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2017-04-24 10:17:24,192 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2017-04-24 10:17:24,194 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2017-04-24 10:17:24,204 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2017-04-24 10:17:24,208 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2017-04-24 10:17:24,213 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2017-04-24 10:17:24,220 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2017-04-24 10:17:24,226 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2017-04-24 10:17:24,691 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2017-04-24 10:17:24,694 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2017-04-24 10:17:24,718 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2017-04-24 10:17:24,720 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2017-04-24 10:17:24,722 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2017-04-24 10:17:24,722 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2017-04-24 10:17:24,745 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2017-04-24 10:17:24,821 DEBUG [main] relational.Namespace (Namespace.java:47) - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2017-04-24 10:17:24,900 DEBUG [main] cfg.AnnotationBinder (AnnotationBinder.java:511) - Binding entity from annotated class: com.example.struts2.model.Users
2017-04-24 10:17:24,967 DEBUG [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2017-04-24 10:17:24,983 DEBUG [main] annotations.EntityBinder (EntityBinder.java:419) - Import with entity name users
2017-04-24 10:17:25,000 DEBUG [main] annotations.EntityBinder (EntityBinder.java:695) - Bind entity com.example.struts2.model.Users on table users
2017-04-24 10:17:25,098 DEBUG [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
2017-04-24 10:17:25,109 DEBUG [main] annotations.PropertyBinder (PropertyBinder.java:174) - MetadataSourceProcessor property id with lazy=false
2017-04-24 10:17:25,115 DEBUG [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.example.struts2.model.Users:id]
2017-04-24 10:17:25,120 DEBUG [main] annotations.SimpleValueBinder (SimpleValueBinder.java:411) - building SimpleValue for id
2017-04-24 10:17:25,128 DEBUG [main] annotations.PropertyBinder (PropertyBinder.java:265) - Building property id
2017-04-24 10:17:25,137 DEBUG [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2017-04-24 10:17:25,138 DEBUG [main] annotations.PropertyBinder (PropertyBinder.java:174) - MetadataSourceProcessor property password with lazy=false
2017-04-24 10:17:25,139 DEBUG [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.example.struts2.model.Users:password]
2017-04-24 10:17:25,139 DEBUG [main] annotations.SimpleValueBinder (SimpleValueBinder.java:411) - building SimpleValue for password
2017-04-24 10:17:25,140 DEBUG [main] annotations.PropertyBinder (PropertyBinder.java:265) - Building property password
2017-04-24 10:17:25,142 DEBUG [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=false}
2017-04-24 10:17:25,143 DEBUG [main] annotations.PropertyBinder (PropertyBinder.java:174) - MetadataSourceProcessor property username with lazy=false
2017-04-24 10:17:25,144 DEBUG [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.example.struts2.model.Users:username]
2017-04-24 10:17:25,144 DEBUG [main] annotations.SimpleValueBinder (SimpleValueBinder.java:411) - building SimpleValue for username
2017-04-24 10:17:25,145 DEBUG [main] annotations.PropertyBinder (PropertyBinder.java:265) - Building property username
2017-04-24 10:17:25,149 DEBUG [main] annotations.SimpleValueBinder (SimpleValueBinder.java:456) - Starting fillSimpleValue for id
2017-04-24 10:17:25,150 DEBUG [main] annotations.SimpleValueBinder (SimpleValueBinder.java:456) - Starting fillSimpleValue for password
2017-04-24 10:17:25,151 DEBUG [main] annotations.SimpleValueBinder (SimpleValueBinder.java:456) - Starting fillSimpleValue for username
2017-04-24 10:17:25,155 DEBUG [main] mapping.PrimaryKey (PrimaryKey.java:35) - Forcing column [id] to be non-null as it is part of the primary key for table [users]
2017-04-24 10:17:25,240 DEBUG [main] internal.SessionFactoryImpl (SessionFactoryImpl.java:199) - Building session factory
2017-04-24 10:17:25,243 DEBUG [main] cfg.Settings (Settings.java:69) - SessionFactory name : null
2017-04-24 10:17:25,244 DEBUG [main] cfg.Settings (Settings.java:70) - Automatic flush during beforeCompletion(): enabled
2017-04-24 10:17:25,245 DEBUG [main] cfg.Settings (Settings.java:71) - Automatic session close at end of transaction: disabled
2017-04-24 10:17:25,246 DEBUG [main] cfg.Settings (Settings.java:73) - Statistics: disabled
2017-04-24 10:17:25,246 DEBUG [main] cfg.Settings (Settings.java:75) - Deleted entity synthetic identifier rollback: disabled
2017-04-24 10:17:25,247 DEBUG [main] cfg.Settings (Settings.java:76) - Default entity-mode: pojo
2017-04-24 10:17:25,247 DEBUG [main] cfg.Settings (Settings.java:77) - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2017-04-24 10:17:25,248 DEBUG [main] cfg.Settings (Settings.java:78) - Allow initialization of lazy state outside session : disabled
2017-04-24 10:17:25,249 DEBUG [main] cfg.Settings (Settings.java:80) - Using BatchFetchStyle : LEGACY
2017-04-24 10:17:25,249 DEBUG [main] cfg.Settings (Settings.java:81) - Default batch fetch size: -1
2017-04-24 10:17:25,250 DEBUG [main] cfg.Settings (Settings.java:82) - Maximum outer join fetch depth: 2
2017-04-24 10:17:25,250 DEBUG [main] cfg.Settings (Settings.java:83) - Default null ordering: NONE
2017-04-24 10:17:25,251 DEBUG [main] cfg.Settings (Settings.java:84) - Order SQL updates by primary key: disabled
2017-04-24 10:17:25,251 DEBUG [main] cfg.Settings (Settings.java:85) - Order SQL inserts for batching: disabled
2017-04-24 10:17:25,252 DEBUG [main] cfg.Settings (Settings.java:87) - multi-tenancy strategy : NONE
2017-04-24 10:17:25,252 DEBUG [main] cfg.Settings (Settings.java:89) - JTA Track by Thread: enabled
2017-04-24 10:17:25,253 DEBUG [main] cfg.Settings (Settings.java:91) - Query language substitutions: {}
2017-04-24 10:17:25,253 DEBUG [main] cfg.Settings (Settings.java:92) - JPA query language strict compliance: disabled
2017-04-24 10:17:25,254 DEBUG [main] cfg.Settings (Settings.java:93) - Named query checking : enabled
2017-04-24 10:17:25,254 DEBUG [main] cfg.Settings (Settings.java:95) - Second-level cache: enabled
2017-04-24 10:17:25,255 DEBUG [main] cfg.Settings (Settings.java:96) - Second-level query cache: disabled
2017-04-24 10:17:25,255 DEBUG [main] cfg.Settings (Settings.java:97) - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@65ef48f2
2017-04-24 10:17:25,256 DEBUG [main] cfg.Settings (Settings.java:98) - Second-level cache region prefix: null
2017-04-24 10:17:25,256 DEBUG [main] cfg.Settings (Settings.java:99) - Optimize second-level cache for minimal puts: disabled
2017-04-24 10:17:25,257 DEBUG [main] cfg.Settings (Settings.java:100) - Structured second-level cache entries: disabled
2017-04-24 10:17:25,257 DEBUG [main] cfg.Settings (Settings.java:101) - Second-level cache direct-reference entries: disabled
2017-04-24 10:17:25,258 DEBUG [main] cfg.Settings (Settings.java:102) - Automatic eviction of collection cache: disabled
2017-04-24 10:17:25,258 DEBUG [main] cfg.Settings (Settings.java:104) - JDBC batch size: 15
2017-04-24 10:17:25,259 DEBUG [main] cfg.Settings (Settings.java:105) - JDBC batch updates for versioned data: enabled
2017-04-24 10:17:25,259 DEBUG [main] cfg.Settings (Settings.java:106) - Scrollable result sets: enabled
2017-04-24 10:17:25,260 DEBUG [main] cfg.Settings (Settings.java:107) - Wrap result sets: disabled
2017-04-24 10:17:25,260 DEBUG [main] cfg.Settings (Settings.java:108) - JDBC3 getGeneratedKeys(): enabled
2017-04-24 10:17:25,261 DEBUG [main] cfg.Settings (Settings.java:109) - JDBC result set fetch size: null
2017-04-24 10:17:25,261 DEBUG [main] cfg.Settings (Settings.java:110) - Connection release mode: AFTER_TRANSACTION
2017-04-24 10:17:25,262 DEBUG [main] cfg.Settings (Settings.java:111) - Generate SQL with comments: disabled
2017-04-24 10:17:25,425 DEBUG [main] internal.SessionFactoryImpl (SessionFactoryImpl.java:254) - Session factory constructed with filter configurations : {}
2017-04-24 10:17:25,426 DEBUG [main] internal.SessionFactoryImpl (SessionFactoryImpl.java:255) - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, java.vendor.url=http://java.oracle.com/, user.timezone=Asia/Jakarta, os.name=Linux, java.vm.specification.version=1.8, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, maven.home=/usr/share/maven, sun.cpu.endian=little, user.home=/root, user.language=en, java.specification.vendor=Oracle Corporation, java.home=/usr/lib/jvm/java-8-openjdk-amd64/jre, file.separator=/, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, sun.boot.class.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/classes, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_111-8u111-b14-3-b14, user.name=root, path.separator=:, securerandom.source=file:/dev/./urandom, hibernate.connection.username=root, os.version=4.8.0-kali2-amd64, java.endorsed.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/endorsed, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/strutsproject, file.encoding=UTF-8, guice.disable.misplaced.annotation.check=true, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=/tmp, java.version=1.8.0_111, user.dir=/root/Source/java/struts/struts-project, os.arch=amd64, maven.multiModuleProjectDirectory=/root/Source/java/struts/struts-project, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@47b33e07, java.library.path=/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.111-b14, classworlds.conf=/usr/share/maven/bin/m2.conf, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.pool_size=1, java.ext.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
2017-04-24 10:17:25,452 DEBUG [main] spi.JaccIntegrator (JaccIntegrator.java:80) - Skipping JACC integration as it was not enabled
2017-04-24 10:17:25,471 DEBUG [main] internal.SessionFactoryImpl (SessionFactoryImpl.java:294) - Instantiated session factory
2017-04-24 10:17:25,612 DEBUG [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [com.example.struts2.model.Users] is safe
2017-04-24 10:17:25,614 DEBUG [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.struts2.model.Users
2017-04-24 10:17:25,672 DEBUG [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [com.example.struts2.model.Users] is safe
2017-04-24 10:17:25,673 DEBUG [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.struts2.model.Users
2017-04-24 10:17:25,847 DEBUG [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3598) - Static SQL for entity: com.example.struts2.model.Users
2017-04-24 10:17:25,850 DEBUG [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3603) -  Version select: select id from users where id =?
2017-04-24 10:17:25,853 DEBUG [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3606) -  Snapshot select: select users_.id, users_.password as password2_0_, users_.username as username3_0_ from users users_ where users_.id=?
2017-04-24 10:17:25,856 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Insert 0: insert into users (password, username, id) values (?, ?, ?)
2017-04-24 10:17:25,859 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Update 0: update users set password=?, username=? where id=?
2017-04-24 10:17:25,860 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Delete 0: delete from users where id=?
2017-04-24 10:17:25,861 DEBUG [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3614) -  Identity insert: insert into users (password, username) values (?, ?)
2017-04-24 10:17:25,969 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c5df615]
2017-04-24 10:17:25,992 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 10:17:25,994 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 10:17:25,995 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 10:17:26,051 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 10:17:26,068 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 10:17:26,085 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [NONE]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-24 10:17:26,086 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18d47df0]
2017-04-24 10:17:26,089 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 10:17:26,095 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 10:17:26,097 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 10:17:26,099 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 10:17:26,100 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 10:17:26,101 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [READ]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-24 10:17:26,103 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@697a0948]
2017-04-24 10:17:26,104 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 10:17:26,105 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 10:17:26,109 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 10:17:26,110 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 10:17:26,112 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 10:17:26,114 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [UPGRADE]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=? for update
2017-04-24 10:17:26,114 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4776e209]
2017-04-24 10:17:26,115 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 10:17:26,116 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 10:17:26,117 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 10:17:26,117 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 10:17:26,120 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 10:17:26,122 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [UPGRADE_NOWAIT]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=? for update
2017-04-24 10:17:26,128 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f536481]
2017-04-24 10:17:26,129 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 10:17:26,130 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 10:17:26,134 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 10:17:26,138 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 10:17:26,143 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 10:17:26,146 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [UPGRADE_SKIPLOCKED]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=? for update
2017-04-24 10:17:26,150 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22a260ff]
2017-04-24 10:17:26,153 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 10:17:26,156 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 10:17:26,157 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 10:17:26,158 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 10:17:26,159 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 10:17:26,160 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [FORCE]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=? for update
2017-04-24 10:17:26,160 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50b734c4]
2017-04-24 10:17:26,161 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 10:17:26,162 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 10:17:26,163 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 10:17:26,164 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 10:17:26,165 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 10:17:26,166 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [PESSIMISTIC_READ]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=? lock in share mode
2017-04-24 10:17:26,167 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16d0e521]
2017-04-24 10:17:26,168 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 10:17:26,169 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 10:17:26,170 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 10:17:26,170 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 10:17:26,172 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 10:17:26,173 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [PESSIMISTIC_WRITE]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=? for update
2017-04-24 10:17:26,173 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ab4aa5e]
2017-04-24 10:17:26,174 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 10:17:26,175 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 10:17:26,176 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 10:17:26,176 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 10:17:26,178 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 10:17:26,178 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [PESSIMISTIC_FORCE_INCREMENT]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=? for update
2017-04-24 10:17:26,179 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a7cb3a4]
2017-04-24 10:17:26,180 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 10:17:26,181 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 10:17:26,181 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 10:17:26,182 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 10:17:26,183 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 10:17:26,184 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [OPTIMISTIC]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-24 10:17:26,185 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33e0c716]
2017-04-24 10:17:26,186 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 10:17:26,187 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 10:17:26,187 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 10:17:26,188 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 10:17:26,189 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 10:17:26,193 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [OPTIMISTIC_FORCE_INCREMENT]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-24 10:17:26,233 DEBUG [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_MERGE on entity com.example.struts2.model.Users: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-24 10:17:26,235 DEBUG [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_REFRESH on entity com.example.struts2.model.Users: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-24 10:17:26,294 DEBUG [main] spi.SchemaManagementToolCoordinator (SchemaManagementToolCoordinator.java:56) - No actions specified; doing nothing
2017-04-24 10:17:26,295 DEBUG [main] internal.JtaPlatformInitiator (JtaPlatformInitiator.java:42) - No JtaPlatform was specified, checking resolver
2017-04-24 10:17:26,297 DEBUG [main] internal.JtaPlatformResolverInitiator (JtaPlatformResolverInitiator.java:33) - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2017-04-24 10:17:26,314 DEBUG [main] internal.StandardJtaPlatformResolver (StandardJtaPlatformResolver.java:102) - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2017-04-24 10:17:26,321 DEBUG [main] spi.NamedQueryRepository (NamedQueryRepository.java:151) - Checking 0 named HQL queries
2017-04-24 10:17:26,323 DEBUG [main] spi.NamedQueryRepository (NamedQueryRepository.java:167) - Checking 0 named SQL queries
2017-04-24 10:17:26,350 DEBUG [main] internal.SessionFactoryRegistry (SessionFactoryRegistry.java:52) - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@a90e2c1
2017-04-24 10:17:26,361 DEBUG [main] internal.SessionFactoryRegistry (SessionFactoryRegistry.java:74) - Registering SessionFactory: 5e950f83-85f2-49f3-a52e-8e764e2692cb (<unnamed>)
2017-04-24 10:17:26,361 DEBUG [main] internal.SessionFactoryRegistry (SessionFactoryRegistry.java:81) - Not binding SessionFactory to JNDI, no JNDI name configured
2017-04-24 10:17:53,932 DEBUG [pool-2-thread-1] internal.PooledConnections (PooledConnections.java:51) - Connection pool now considered primed; min-size will be maintained
2017-04-24 10:26:34,344 INFO  [qtp2096194236-11] action.Login (Login.java:23) - VALIDATE admin admin
2017-04-24 10:26:34,577 DEBUG [qtp2096194236-11] internal.StatisticsInitiator (StatisticsInitiator.java:82) - Statistics initialized [enabled=false]
2017-04-24 10:26:34,601 DEBUG [qtp2096194236-11] internal.TransactionImpl (TransactionImpl.java:55) - begin
2017-04-24 10:26:34,654 DEBUG [qtp2096194236-11] spi.ActionQueue (ActionQueue.java:276) - Executing identity-insert immediately
2017-04-24 10:26:34,670 DEBUG [qtp2096194236-11] spi.SqlStatementLogger (SqlStatementLogger.java:92) - insert into users (password, username) values (?, ?)
2017-04-24 10:26:34,738 DEBUG [qtp2096194236-11] id.IdentifierGeneratorHelper (IdentifierGeneratorHelper.java:78) - Natively generated identity: 1
2017-04-24 10:26:34,739 DEBUG [qtp2096194236-11] internal.ResourceRegistryStandardImpl (ResourceRegistryStandardImpl.java:104) - HHH000387: ResultSet's statement was not registered
2017-04-24 10:26:34,749 DEBUG [qtp2096194236-11] internal.TransactionImpl (TransactionImpl.java:66) - committing
2017-04-24 10:26:34,753 DEBUG [qtp2096194236-11] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:132) - Processing flush-time cascades
2017-04-24 10:26:34,756 DEBUG [qtp2096194236-11] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:174) - Dirty checking collections
2017-04-24 10:26:34,765 DEBUG [qtp2096194236-11] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:106) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2017-04-24 10:26:34,766 DEBUG [qtp2096194236-11] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:113) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2017-04-24 10:26:34,771 DEBUG [qtp2096194236-11] util.EntityPrinter (EntityPrinter.java:102) - Listing entities:
2017-04-24 10:26:34,774 DEBUG [qtp2096194236-11] util.EntityPrinter (EntityPrinter.java:109) - com.example.struts2.model.Users{password=admin, id=1, username=admin}
2017-04-24 10:26:34,808 DEBUG [qtp2096194236-11] internal.LogicalConnectionManagedImpl (LogicalConnectionManagedImpl.java:154) - Initiating JDBC connection release from afterTransaction
2017-04-24 10:26:34,810 DEBUG [qtp2096194236-11] internal.LogicalConnectionManagedImpl (LogicalConnectionManagedImpl.java:154) - Initiating JDBC connection release from afterTransaction
2017-04-24 11:40:01,224 DEBUG [main] internal.CoreLogging (CoreLogging.java:28) - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2017-04-24 11:40:01,264 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2017-04-24 11:40:01,269 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2017-04-24 11:40:01,279 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2017-04-24 11:40:01,754 INFO  [main] hibernate.Version (Version.java:45) - HHH000412: Hibernate Core {5.2.9.Final}
2017-04-24 11:40:01,761 INFO  [main] cfg.Environment (Environment.java:213) - HHH000206: hibernate.properties not found
2017-04-24 11:40:01,813 DEBUG [main] internal.JaxbCfgProcessor (JaxbCfgProcessor.java:116) - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2017-04-24 11:40:02,264 DEBUG [main] cfg.Configuration (Configuration.java:724) - Building session factory using internal StandardServiceRegistryBuilder
2017-04-24 11:40:02,282 DEBUG [main] spi.ServiceBinding (ServiceBinding.java:68) - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2017-04-24 11:40:02,286 DEBUG [main] cfg.Configuration (Configuration.java:652) - Building session factory using provided StandardServiceRegistry
2017-04-24 11:40:02,341 DEBUG [main] internal.RegionFactoryInitiator (RegionFactoryInitiator.java:75) - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2017-04-24 11:40:02,366 INFO  [main] java.JavaReflectionManager (JavaReflectionManager.java:66) - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2017-04-24 11:40:02,426 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@6468a7b6
2017-04-24 11:40:02,430 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@6468a7b6
2017-04-24 11:40:02,434 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6468a7b6
2017-04-24 11:40:02,439 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@52b06bef
2017-04-24 11:40:02,447 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6056232d
2017-04-24 11:40:02,452 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration yes_no -> org.hibernate.type.YesNoType@7bac686b
2017-04-24 11:40:02,462 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@2121d1f9
2017-04-24 11:40:02,465 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@2121d1f9
2017-04-24 11:40:02,473 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2121d1f9
2017-04-24 11:40:02,482 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration character -> org.hibernate.type.CharacterType@49f40c00
2017-04-24 11:40:02,485 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration char -> org.hibernate.type.CharacterType@49f40c00
2017-04-24 11:40:02,490 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@49f40c00
2017-04-24 11:40:02,498 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@3e5fd2b1
2017-04-24 11:40:02,501 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@3e5fd2b1
2017-04-24 11:40:02,504 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3e5fd2b1
2017-04-24 11:40:02,510 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration integer -> org.hibernate.type.IntegerType@6d074b14
2017-04-24 11:40:02,513 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration int -> org.hibernate.type.IntegerType@6d074b14
2017-04-24 11:40:02,517 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6d074b14
2017-04-24 11:40:02,524 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@5a8816cc
2017-04-24 11:40:02,526 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@5a8816cc
2017-04-24 11:40:02,529 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5a8816cc
2017-04-24 11:40:02,538 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@43984213
2017-04-24 11:40:02,541 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@43984213
2017-04-24 11:40:02,545 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@43984213
2017-04-24 11:40:02,554 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@38f77cd9
2017-04-24 11:40:02,557 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@38f77cd9
2017-04-24 11:40:02,560 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@38f77cd9
2017-04-24 11:40:02,567 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4483d35
2017-04-24 11:40:02,571 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4483d35
2017-04-24 11:40:02,577 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2f4ba1ae
2017-04-24 11:40:02,581 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2f4ba1ae
2017-04-24 11:40:02,588 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration string -> org.hibernate.type.StringType@1b6924cb
2017-04-24 11:40:02,597 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.String -> org.hibernate.type.StringType@1b6924cb
2017-04-24 11:40:02,603 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6ed043d3
2017-04-24 11:40:02,608 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3d19d85
2017-04-24 11:40:02,614 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration url -> org.hibernate.type.UrlType@42aae04d
2017-04-24 11:40:02,617 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@42aae04d
2017-04-24 11:40:02,624 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Duration -> org.hibernate.type.DurationType@7426a448
2017-04-24 11:40:02,628 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7426a448
2017-04-24 11:40:02,698 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Instant -> org.hibernate.type.InstantType@2513a118
2017-04-24 11:40:02,701 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2513a118
2017-04-24 11:40:02,714 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@2629d5dc
2017-04-24 11:40:02,717 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@2629d5dc
2017-04-24 11:40:02,734 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6abdec0e
2017-04-24 11:40:02,738 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6abdec0e
2017-04-24 11:40:02,755 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@41ad373
2017-04-24 11:40:02,759 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@41ad373
2017-04-24 11:40:02,765 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@78a515e4
2017-04-24 11:40:02,769 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@78a515e4
2017-04-24 11:40:02,775 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@8cc8cdb
2017-04-24 11:40:02,778 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@8cc8cdb
2017-04-24 11:40:02,800 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6dc9da2d
2017-04-24 11:40:02,801 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6dc9da2d
2017-04-24 11:40:02,806 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration date -> org.hibernate.type.DateType@3c91530d
2017-04-24 11:40:02,808 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@3c91530d
2017-04-24 11:40:02,813 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration time -> org.hibernate.type.TimeType@f1dd5b4
2017-04-24 11:40:02,814 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@f1dd5b4
2017-04-24 11:40:02,818 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration timestamp -> org.hibernate.type.TimestampType@6e3ecf5c
2017-04-24 11:40:02,819 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6e3ecf5c
2017-04-24 11:40:02,820 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6e3ecf5c
2017-04-24 11:40:02,827 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@692dba54
2017-04-24 11:40:02,831 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration calendar -> org.hibernate.type.CalendarType@48eb001a
2017-04-24 11:40:02,832 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@48eb001a
2017-04-24 11:40:02,833 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@48eb001a
2017-04-24 11:40:02,835 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6f8aba08
2017-04-24 11:40:02,838 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration locale -> org.hibernate.type.LocaleType@35c9a231
2017-04-24 11:40:02,839 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@35c9a231
2017-04-24 11:40:02,842 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration currency -> org.hibernate.type.CurrencyType@2d55e826
2017-04-24 11:40:02,844 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2d55e826
2017-04-24 11:40:02,847 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@29b40b3
2017-04-24 11:40:02,848 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@29b40b3
2017-04-24 11:40:02,852 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration class -> org.hibernate.type.ClassType@4fdca00a
2017-04-24 11:40:02,854 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4fdca00a
2017-04-24 11:40:02,857 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3bc4ef12
2017-04-24 11:40:02,859 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3bc4ef12
2017-04-24 11:40:02,861 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2b0dc227
2017-04-24 11:40:02,865 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration binary -> org.hibernate.type.BinaryType@2a334bac
2017-04-24 11:40:02,865 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte[] -> org.hibernate.type.BinaryType@2a334bac
2017-04-24 11:40:02,866 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [B -> org.hibernate.type.BinaryType@2a334bac
2017-04-24 11:40:02,870 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3c854752
2017-04-24 11:40:02,872 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3c854752
2017-04-24 11:40:02,873 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3c854752
2017-04-24 11:40:02,876 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration row_version -> org.hibernate.type.RowVersionType@210d2a6c
2017-04-24 11:40:02,878 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration image -> org.hibernate.type.ImageType@77c10a5f
2017-04-24 11:40:02,881 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration characters -> org.hibernate.type.CharArrayType@355c94be
2017-04-24 11:40:02,882 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration char[] -> org.hibernate.type.CharArrayType@355c94be
2017-04-24 11:40:02,883 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [C -> org.hibernate.type.CharArrayType@355c94be
2017-04-24 11:40:02,885 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1dd74143
2017-04-24 11:40:02,886 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1dd74143
2017-04-24 11:40:02,887 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1dd74143
2017-04-24 11:40:02,891 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration text -> org.hibernate.type.TextType@66f28a1f
2017-04-24 11:40:02,894 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ntext -> org.hibernate.type.NTextType@df921b1
2017-04-24 11:40:02,904 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration blob -> org.hibernate.type.BlobType@6b63e6ad
2017-04-24 11:40:02,905 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6b63e6ad
2017-04-24 11:40:02,908 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@52bf7bf6
2017-04-24 11:40:02,917 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration clob -> org.hibernate.type.ClobType@3fb9a67f
2017-04-24 11:40:02,918 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3fb9a67f
2017-04-24 11:40:02,926 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration nclob -> org.hibernate.type.NClobType@2b38b1f
2017-04-24 11:40:02,927 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2b38b1f
2017-04-24 11:40:02,928 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2e766822
2017-04-24 11:40:02,930 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@21a02556
2017-04-24 11:40:02,934 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration serializable -> org.hibernate.type.SerializableType@45aca496
2017-04-24 11:40:02,940 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration object -> org.hibernate.type.ObjectType@41184371
2017-04-24 11:40:02,941 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@41184371
2017-04-24 11:40:02,943 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@15f35bc3
2017-04-24 11:40:02,944 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@167381c7
2017-04-24 11:40:02,944 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@608b1fd2
2017-04-24 11:40:02,945 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@56382bc9
2017-04-24 11:40:02,947 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@591a4f8e
2017-04-24 11:40:02,948 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@53ed80d3
2017-04-24 11:40:02,949 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6ba060f3
2017-04-24 11:40:02,949 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7c51782d
2017-04-24 11:40:02,977 WARN  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:70) - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2017-04-24 11:40:02,979 DEBUG [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:154) - No driver class specified
2017-04-24 11:40:02,985 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:126) - HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306/strutsproject]
2017-04-24 11:40:02,988 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:132) - HHH10001001: Connection properties: {user=root, password=}
2017-04-24 11:40:03,002 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:140) - HHH10001003: Autocommit mode: false
2017-04-24 11:40:03,011 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:384) - Initializing Connection pool with 1 Connections
2017-04-24 11:40:03,016 INFO  [main] internal.PooledConnections (PooledConnections.java:41) - HHH000115: Hibernate connection pool size: 1 (min=1)
2017-04-24 11:40:03,637 DEBUG [main] internal.JdbcEnvironmentInitiator (JdbcEnvironmentInitiator.java:72) - Database ->
       name : MySQL
    version : 5.6.30-1
      major : 5
      minor : 6
2017-04-24 11:40:03,638 DEBUG [main] internal.JdbcEnvironmentInitiator (JdbcEnvironmentInitiator.java:83) - Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.9 ( Revision: ${svn.Revision} )
      major : 5
      minor : 1
2017-04-24 11:40:03,641 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:389) - JDBC version : 3.0
2017-04-24 11:40:03,670 INFO  [main] dialect.Dialect (Dialect.java:157) - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2017-04-24 11:40:03,737 DEBUG [main] spi.IdentifierHelperBuilder (IdentifierHelperBuilder.java:117) - JDBC driver metadata reported database stores quoted identifiers in more than one case
2017-04-24 11:40:03,743 DEBUG [main] spi.IdentifierHelperBuilder (IdentifierHelperBuilder.java:191) - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2017-04-24 11:40:03,770 INFO  [main] internal.LobCreatorBuilderImpl (LobCreatorBuilderImpl.java:98) - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2017-04-24 11:40:03,874 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2017-04-24 11:40:03,881 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2017-04-24 11:40:03,885 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2017-04-24 11:40:03,888 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2017-04-24 11:40:03,897 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2017-04-24 11:40:03,902 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2017-04-24 11:40:03,907 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2017-04-24 11:40:03,916 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2017-04-24 11:40:03,921 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2017-04-24 11:40:03,925 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2017-04-24 11:40:03,935 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2017-04-24 11:40:03,939 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2017-04-24 11:40:03,945 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2017-04-24 11:40:03,950 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2017-04-24 11:40:04,469 DEBUG [main] relational.Namespace (Namespace.java:47) - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2017-04-24 11:40:04,570 DEBUG [main] cfg.AnnotationBinder (AnnotationBinder.java:511) - Binding entity from annotated class: com.example.struts2.model.Users
2017-04-24 11:40:04,645 DEBUG [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2017-04-24 11:40:04,663 DEBUG [main] annotations.EntityBinder (EntityBinder.java:419) - Import with entity name users
2017-04-24 11:40:04,681 DEBUG [main] annotations.EntityBinder (EntityBinder.java:695) - Bind entity com.example.struts2.model.Users on table users
2017-04-24 11:40:04,766 DEBUG [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
2017-04-24 11:40:04,777 DEBUG [main] annotations.PropertyBinder (PropertyBinder.java:174) - MetadataSourceProcessor property id with lazy=false
2017-04-24 11:40:04,783 DEBUG [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.example.struts2.model.Users:id]
2017-04-24 11:40:04,789 DEBUG [main] annotations.SimpleValueBinder (SimpleValueBinder.java:411) - building SimpleValue for id
2017-04-24 11:40:04,799 DEBUG [main] annotations.PropertyBinder (PropertyBinder.java:265) - Building property id
2017-04-24 11:40:04,812 DEBUG [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2017-04-24 11:40:04,813 DEBUG [main] annotations.PropertyBinder (PropertyBinder.java:174) - MetadataSourceProcessor property password with lazy=false
2017-04-24 11:40:04,814 DEBUG [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.example.struts2.model.Users:password]
2017-04-24 11:40:04,814 DEBUG [main] annotations.SimpleValueBinder (SimpleValueBinder.java:411) - building SimpleValue for password
2017-04-24 11:40:04,815 DEBUG [main] annotations.PropertyBinder (PropertyBinder.java:265) - Building property password
2017-04-24 11:40:04,819 DEBUG [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=false}
2017-04-24 11:40:04,822 DEBUG [main] annotations.PropertyBinder (PropertyBinder.java:174) - MetadataSourceProcessor property username with lazy=false
2017-04-24 11:40:04,823 DEBUG [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.example.struts2.model.Users:username]
2017-04-24 11:40:04,824 DEBUG [main] annotations.SimpleValueBinder (SimpleValueBinder.java:411) - building SimpleValue for username
2017-04-24 11:40:04,825 DEBUG [main] annotations.PropertyBinder (PropertyBinder.java:265) - Building property username
2017-04-24 11:40:04,831 DEBUG [main] annotations.SimpleValueBinder (SimpleValueBinder.java:456) - Starting fillSimpleValue for id
2017-04-24 11:40:04,832 DEBUG [main] annotations.SimpleValueBinder (SimpleValueBinder.java:456) - Starting fillSimpleValue for password
2017-04-24 11:40:04,833 DEBUG [main] annotations.SimpleValueBinder (SimpleValueBinder.java:456) - Starting fillSimpleValue for username
2017-04-24 11:40:04,837 DEBUG [main] mapping.PrimaryKey (PrimaryKey.java:35) - Forcing column [id] to be non-null as it is part of the primary key for table [users]
2017-04-24 11:40:04,938 DEBUG [main] internal.SessionFactoryImpl (SessionFactoryImpl.java:199) - Building session factory
2017-04-24 11:40:04,941 DEBUG [main] cfg.Settings (Settings.java:69) - SessionFactory name : null
2017-04-24 11:40:04,942 DEBUG [main] cfg.Settings (Settings.java:70) - Automatic flush during beforeCompletion(): enabled
2017-04-24 11:40:04,945 DEBUG [main] cfg.Settings (Settings.java:71) - Automatic session close at end of transaction: disabled
2017-04-24 11:40:04,946 DEBUG [main] cfg.Settings (Settings.java:73) - Statistics: disabled
2017-04-24 11:40:04,947 DEBUG [main] cfg.Settings (Settings.java:75) - Deleted entity synthetic identifier rollback: disabled
2017-04-24 11:40:04,947 DEBUG [main] cfg.Settings (Settings.java:76) - Default entity-mode: pojo
2017-04-24 11:40:04,950 DEBUG [main] cfg.Settings (Settings.java:77) - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2017-04-24 11:40:04,952 DEBUG [main] cfg.Settings (Settings.java:78) - Allow initialization of lazy state outside session : disabled
2017-04-24 11:40:04,953 DEBUG [main] cfg.Settings (Settings.java:80) - Using BatchFetchStyle : LEGACY
2017-04-24 11:40:04,954 DEBUG [main] cfg.Settings (Settings.java:81) - Default batch fetch size: -1
2017-04-24 11:40:04,955 DEBUG [main] cfg.Settings (Settings.java:82) - Maximum outer join fetch depth: 2
2017-04-24 11:40:04,955 DEBUG [main] cfg.Settings (Settings.java:83) - Default null ordering: NONE
2017-04-24 11:40:04,956 DEBUG [main] cfg.Settings (Settings.java:84) - Order SQL updates by primary key: disabled
2017-04-24 11:40:04,957 DEBUG [main] cfg.Settings (Settings.java:85) - Order SQL inserts for batching: disabled
2017-04-24 11:40:04,957 DEBUG [main] cfg.Settings (Settings.java:87) - multi-tenancy strategy : NONE
2017-04-24 11:40:04,958 DEBUG [main] cfg.Settings (Settings.java:89) - JTA Track by Thread: enabled
2017-04-24 11:40:04,960 DEBUG [main] cfg.Settings (Settings.java:91) - Query language substitutions: {}
2017-04-24 11:40:04,963 DEBUG [main] cfg.Settings (Settings.java:92) - JPA query language strict compliance: disabled
2017-04-24 11:40:04,964 DEBUG [main] cfg.Settings (Settings.java:93) - Named query checking : enabled
2017-04-24 11:40:04,964 DEBUG [main] cfg.Settings (Settings.java:95) - Second-level cache: enabled
2017-04-24 11:40:04,965 DEBUG [main] cfg.Settings (Settings.java:96) - Second-level query cache: disabled
2017-04-24 11:40:04,965 DEBUG [main] cfg.Settings (Settings.java:97) - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@72543547
2017-04-24 11:40:04,966 DEBUG [main] cfg.Settings (Settings.java:98) - Second-level cache region prefix: null
2017-04-24 11:40:04,969 DEBUG [main] cfg.Settings (Settings.java:99) - Optimize second-level cache for minimal puts: disabled
2017-04-24 11:40:04,969 DEBUG [main] cfg.Settings (Settings.java:100) - Structured second-level cache entries: disabled
2017-04-24 11:40:04,970 DEBUG [main] cfg.Settings (Settings.java:101) - Second-level cache direct-reference entries: disabled
2017-04-24 11:40:04,970 DEBUG [main] cfg.Settings (Settings.java:102) - Automatic eviction of collection cache: disabled
2017-04-24 11:40:04,972 DEBUG [main] cfg.Settings (Settings.java:104) - JDBC batch size: 15
2017-04-24 11:40:04,973 DEBUG [main] cfg.Settings (Settings.java:105) - JDBC batch updates for versioned data: enabled
2017-04-24 11:40:04,973 DEBUG [main] cfg.Settings (Settings.java:106) - Scrollable result sets: enabled
2017-04-24 11:40:04,974 DEBUG [main] cfg.Settings (Settings.java:107) - Wrap result sets: disabled
2017-04-24 11:40:04,974 DEBUG [main] cfg.Settings (Settings.java:108) - JDBC3 getGeneratedKeys(): enabled
2017-04-24 11:40:04,980 DEBUG [main] cfg.Settings (Settings.java:109) - JDBC result set fetch size: null
2017-04-24 11:40:04,981 DEBUG [main] cfg.Settings (Settings.java:110) - Connection release mode: AFTER_TRANSACTION
2017-04-24 11:40:04,981 DEBUG [main] cfg.Settings (Settings.java:111) - Generate SQL with comments: disabled
2017-04-24 11:40:05,204 DEBUG [main] internal.SessionFactoryImpl (SessionFactoryImpl.java:254) - Session factory constructed with filter configurations : {}
2017-04-24 11:40:05,205 DEBUG [main] internal.SessionFactoryImpl (SessionFactoryImpl.java:255) - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, java.vendor.url=http://java.oracle.com/, user.timezone=Asia/Jakarta, os.name=Linux, java.vm.specification.version=1.8, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, maven.home=/usr/share/maven, sun.cpu.endian=little, user.home=/root, user.language=en, java.specification.vendor=Oracle Corporation, java.home=/usr/lib/jvm/java-8-openjdk-amd64/jre, file.separator=/, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, sun.boot.class.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/classes, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_111-8u111-b14-3-b14, user.name=root, path.separator=:, securerandom.source=file:/dev/./urandom, hibernate.connection.username=root, os.version=4.8.0-kali2-amd64, java.endorsed.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/endorsed, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/strutsproject, file.encoding=UTF-8, guice.disable.misplaced.annotation.check=true, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=/tmp, java.version=1.8.0_111, user.dir=/root/Source/java/struts/struts-project, os.arch=amd64, maven.multiModuleProjectDirectory=/root/Source/java/struts/struts-project, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@151ab2b9, java.library.path=/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.111-b14, classworlds.conf=/usr/share/maven/bin/m2.conf, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.pool_size=1, java.ext.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
2017-04-24 11:40:05,247 DEBUG [main] spi.JaccIntegrator (JaccIntegrator.java:80) - Skipping JACC integration as it was not enabled
2017-04-24 11:40:05,297 DEBUG [main] internal.SessionFactoryImpl (SessionFactoryImpl.java:294) - Instantiated session factory
2017-04-24 11:40:05,443 DEBUG [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [com.example.struts2.model.Users] is safe
2017-04-24 11:40:05,447 DEBUG [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.struts2.model.Users
2017-04-24 11:40:05,485 DEBUG [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [com.example.struts2.model.Users] is safe
2017-04-24 11:40:05,488 DEBUG [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.struts2.model.Users
2017-04-24 11:40:05,713 DEBUG [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3598) - Static SQL for entity: com.example.struts2.model.Users
2017-04-24 11:40:05,714 DEBUG [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3603) -  Version select: select id from users where id =?
2017-04-24 11:40:05,715 DEBUG [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3606) -  Snapshot select: select users_.id, users_.password as password2_0_, users_.username as username3_0_ from users users_ where users_.id=?
2017-04-24 11:40:05,715 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Insert 0: insert into users (password, username, id) values (?, ?, ?)
2017-04-24 11:40:05,716 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Update 0: update users set password=?, username=? where id=?
2017-04-24 11:40:05,717 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Delete 0: delete from users where id=?
2017-04-24 11:40:05,717 DEBUG [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3614) -  Identity insert: insert into users (password, username) values (?, ?)
2017-04-24 11:40:05,780 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@377949f1]
2017-04-24 11:40:05,789 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 11:40:05,791 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 11:40:05,795 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 11:40:05,836 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 11:40:05,851 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 11:40:05,862 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [NONE]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-24 11:40:05,864 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@697a0948]
2017-04-24 11:40:05,865 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 11:40:05,866 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 11:40:05,866 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 11:40:05,867 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 11:40:05,868 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 11:40:05,869 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [READ]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-24 11:40:05,870 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4776e209]
2017-04-24 11:40:05,871 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 11:40:05,872 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 11:40:05,872 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 11:40:05,873 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 11:40:05,874 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 11:40:05,876 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [UPGRADE]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=? for update
2017-04-24 11:40:05,877 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f536481]
2017-04-24 11:40:05,878 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 11:40:05,878 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 11:40:05,879 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 11:40:05,880 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 11:40:05,883 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 11:40:05,886 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [UPGRADE_NOWAIT]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=? for update
2017-04-24 11:40:05,888 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22a260ff]
2017-04-24 11:40:05,889 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 11:40:05,895 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 11:40:05,896 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 11:40:05,897 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 11:40:05,899 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 11:40:05,900 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [UPGRADE_SKIPLOCKED]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=? for update
2017-04-24 11:40:05,901 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50b734c4]
2017-04-24 11:40:05,901 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 11:40:05,903 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 11:40:05,904 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 11:40:05,906 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 11:40:05,907 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 11:40:05,908 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [FORCE]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=? for update
2017-04-24 11:40:05,909 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16d0e521]
2017-04-24 11:40:05,912 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 11:40:05,912 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 11:40:05,913 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 11:40:05,914 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 11:40:05,916 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 11:40:05,917 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [PESSIMISTIC_READ]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=? lock in share mode
2017-04-24 11:40:05,917 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ab4aa5e]
2017-04-24 11:40:05,918 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 11:40:05,919 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 11:40:05,920 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 11:40:05,921 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 11:40:05,923 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 11:40:05,924 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [PESSIMISTIC_WRITE]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=? for update
2017-04-24 11:40:05,925 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a7cb3a4]
2017-04-24 11:40:05,928 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 11:40:05,928 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 11:40:05,929 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 11:40:05,930 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 11:40:05,931 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 11:40:05,932 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [PESSIMISTIC_FORCE_INCREMENT]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=? for update
2017-04-24 11:40:05,933 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33e0c716]
2017-04-24 11:40:05,934 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 11:40:05,935 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 11:40:05,935 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 11:40:05,936 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 11:40:05,938 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 11:40:05,939 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [OPTIMISTIC]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-24 11:40:05,940 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6274f21c]
2017-04-24 11:40:05,942 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 11:40:05,943 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 11:40:05,944 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 11:40:05,945 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 11:40:05,946 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 11:40:05,947 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [OPTIMISTIC_FORCE_INCREMENT]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-24 11:40:05,985 DEBUG [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_MERGE on entity com.example.struts2.model.Users: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-24 11:40:05,986 DEBUG [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_REFRESH on entity com.example.struts2.model.Users: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-24 11:40:06,054 DEBUG [main] spi.SchemaManagementToolCoordinator (SchemaManagementToolCoordinator.java:56) - No actions specified; doing nothing
2017-04-24 11:40:06,056 DEBUG [main] internal.JtaPlatformInitiator (JtaPlatformInitiator.java:42) - No JtaPlatform was specified, checking resolver
2017-04-24 11:40:06,058 DEBUG [main] internal.JtaPlatformResolverInitiator (JtaPlatformResolverInitiator.java:33) - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2017-04-24 11:40:06,073 DEBUG [main] internal.StandardJtaPlatformResolver (StandardJtaPlatformResolver.java:102) - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2017-04-24 11:40:06,078 DEBUG [main] spi.NamedQueryRepository (NamedQueryRepository.java:151) - Checking 0 named HQL queries
2017-04-24 11:40:06,079 DEBUG [main] spi.NamedQueryRepository (NamedQueryRepository.java:167) - Checking 0 named SQL queries
2017-04-24 11:40:06,084 DEBUG [main] internal.SessionFactoryRegistry (SessionFactoryRegistry.java:52) - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@370ef50b
2017-04-24 11:40:06,090 DEBUG [main] internal.SessionFactoryRegistry (SessionFactoryRegistry.java:74) - Registering SessionFactory: eb5ac94a-4cbe-4f03-8d54-b3e2248e39d0 (<unnamed>)
2017-04-24 11:40:06,092 DEBUG [main] internal.SessionFactoryRegistry (SessionFactoryRegistry.java:81) - Not binding SessionFactory to JNDI, no JNDI name configured
2017-04-24 11:40:33,635 DEBUG [pool-2-thread-1] internal.PooledConnections (PooledConnections.java:51) - Connection pool now considered primed; min-size will be maintained
2017-04-24 11:40:50,726 INFO  [qtp1986676021-18] action.Login (Login.java:21) - VALIDATE admin admin
2017-04-24 11:40:51,049 DEBUG [qtp1986676021-18] internal.StatisticsInitiator (StatisticsInitiator.java:82) - Statistics initialized [enabled=false]
2017-04-24 11:40:51,086 DEBUG [qtp1986676021-18] internal.TransactionImpl (TransactionImpl.java:55) - begin
2017-04-24 11:40:51,144 DEBUG [qtp1986676021-18] spi.ActionQueue (ActionQueue.java:276) - Executing identity-insert immediately
2017-04-24 11:40:51,160 DEBUG [qtp1986676021-18] spi.SqlStatementLogger (SqlStatementLogger.java:92) - insert into users (password, username) values (?, ?)
2017-04-24 11:40:51,222 DEBUG [qtp1986676021-18] id.IdentifierGeneratorHelper (IdentifierGeneratorHelper.java:78) - Natively generated identity: 2
2017-04-24 11:40:51,223 DEBUG [qtp1986676021-18] internal.ResourceRegistryStandardImpl (ResourceRegistryStandardImpl.java:104) - HHH000387: ResultSet's statement was not registered
2017-04-24 11:40:51,232 DEBUG [qtp1986676021-18] internal.TransactionImpl (TransactionImpl.java:66) - committing
2017-04-24 11:40:51,234 DEBUG [qtp1986676021-18] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:132) - Processing flush-time cascades
2017-04-24 11:40:51,237 DEBUG [qtp1986676021-18] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:174) - Dirty checking collections
2017-04-24 11:40:51,242 DEBUG [qtp1986676021-18] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:106) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2017-04-24 11:40:51,244 DEBUG [qtp1986676021-18] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:113) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2017-04-24 11:40:51,248 DEBUG [qtp1986676021-18] util.EntityPrinter (EntityPrinter.java:102) - Listing entities:
2017-04-24 11:40:51,250 DEBUG [qtp1986676021-18] util.EntityPrinter (EntityPrinter.java:109) - com.example.struts2.model.Users{password=admin, id=2, username=admin}
2017-04-24 11:40:51,315 DEBUG [qtp1986676021-18] internal.LogicalConnectionManagedImpl (LogicalConnectionManagedImpl.java:154) - Initiating JDBC connection release from afterTransaction
2017-04-24 11:40:51,320 DEBUG [qtp1986676021-18] internal.LogicalConnectionManagedImpl (LogicalConnectionManagedImpl.java:154) - Initiating JDBC connection release from afterTransaction
2017-04-24 11:41:28,797 INFO  [qtp1986676021-17] action.Login (Login.java:21) - VALIDATE admin admin
2017-04-24 11:41:28,801 DEBUG [qtp1986676021-17] internal.TransactionImpl (TransactionImpl.java:55) - begin
2017-04-24 11:41:28,810 DEBUG [qtp1986676021-17] spi.ActionQueue (ActionQueue.java:276) - Executing identity-insert immediately
2017-04-24 11:41:28,813 DEBUG [qtp1986676021-17] spi.SqlStatementLogger (SqlStatementLogger.java:92) - insert into users (password, username) values (?, ?)
2017-04-24 11:41:28,818 DEBUG [qtp1986676021-17] id.IdentifierGeneratorHelper (IdentifierGeneratorHelper.java:78) - Natively generated identity: 1
2017-04-24 11:41:28,819 DEBUG [qtp1986676021-17] internal.ResourceRegistryStandardImpl (ResourceRegistryStandardImpl.java:104) - HHH000387: ResultSet's statement was not registered
2017-04-24 11:41:28,820 DEBUG [qtp1986676021-17] internal.TransactionImpl (TransactionImpl.java:66) - committing
2017-04-24 11:41:28,821 DEBUG [qtp1986676021-17] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:132) - Processing flush-time cascades
2017-04-24 11:41:28,822 DEBUG [qtp1986676021-17] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:174) - Dirty checking collections
2017-04-24 11:41:28,825 DEBUG [qtp1986676021-17] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:106) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2017-04-24 11:41:28,826 DEBUG [qtp1986676021-17] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:113) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2017-04-24 11:41:28,827 DEBUG [qtp1986676021-17] util.EntityPrinter (EntityPrinter.java:102) - Listing entities:
2017-04-24 11:41:28,828 DEBUG [qtp1986676021-17] util.EntityPrinter (EntityPrinter.java:109) - com.example.struts2.model.Users{password=admin, id=1, username=admin}
2017-04-24 11:41:28,862 DEBUG [qtp1986676021-17] internal.LogicalConnectionManagedImpl (LogicalConnectionManagedImpl.java:154) - Initiating JDBC connection release from afterTransaction
2017-04-24 11:41:28,873 DEBUG [qtp1986676021-17] internal.LogicalConnectionManagedImpl (LogicalConnectionManagedImpl.java:154) - Initiating JDBC connection release from afterTransaction
2017-04-24 12:04:00,816 DEBUG [main] internal.CoreLogging (CoreLogging.java:28) - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2017-04-24 12:04:00,849 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2017-04-24 12:04:00,866 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2017-04-24 12:04:00,880 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2017-04-24 12:04:01,362 INFO  [main] hibernate.Version (Version.java:45) - HHH000412: Hibernate Core {5.2.9.Final}
2017-04-24 12:04:01,368 INFO  [main] cfg.Environment (Environment.java:213) - HHH000206: hibernate.properties not found
2017-04-24 12:04:01,412 DEBUG [main] internal.JaxbCfgProcessor (JaxbCfgProcessor.java:116) - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2017-04-24 12:04:01,884 DEBUG [main] cfg.Configuration (Configuration.java:724) - Building session factory using internal StandardServiceRegistryBuilder
2017-04-24 12:04:01,899 DEBUG [main] spi.ServiceBinding (ServiceBinding.java:68) - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2017-04-24 12:04:01,900 DEBUG [main] cfg.Configuration (Configuration.java:652) - Building session factory using provided StandardServiceRegistry
2017-04-24 12:04:01,956 DEBUG [main] internal.RegionFactoryInitiator (RegionFactoryInitiator.java:75) - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2017-04-24 12:04:01,975 INFO  [main] java.JavaReflectionManager (JavaReflectionManager.java:66) - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2017-04-24 12:04:02,031 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@696b4a95
2017-04-24 12:04:02,032 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@696b4a95
2017-04-24 12:04:02,032 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@696b4a95
2017-04-24 12:04:02,034 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6af91cc8
2017-04-24 12:04:02,038 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@107bfcb2
2017-04-24 12:04:02,040 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration yes_no -> org.hibernate.type.YesNoType@f9f3928
2017-04-24 12:04:02,046 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@1806bc4c
2017-04-24 12:04:02,047 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@1806bc4c
2017-04-24 12:04:02,053 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1806bc4c
2017-04-24 12:04:02,056 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration character -> org.hibernate.type.CharacterType@52d6d273
2017-04-24 12:04:02,058 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration char -> org.hibernate.type.CharacterType@52d6d273
2017-04-24 12:04:02,060 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@52d6d273
2017-04-24 12:04:02,064 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@5b275811
2017-04-24 12:04:02,065 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@5b275811
2017-04-24 12:04:02,066 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5b275811
2017-04-24 12:04:02,069 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration integer -> org.hibernate.type.IntegerType@559cedee
2017-04-24 12:04:02,070 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration int -> org.hibernate.type.IntegerType@559cedee
2017-04-24 12:04:02,071 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@559cedee
2017-04-24 12:04:02,075 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@37baddde
2017-04-24 12:04:02,076 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@37baddde
2017-04-24 12:04:02,077 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@37baddde
2017-04-24 12:04:02,081 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@38830ea
2017-04-24 12:04:02,082 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@38830ea
2017-04-24 12:04:02,082 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@38830ea
2017-04-24 12:04:02,086 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@6fbb4061
2017-04-24 12:04:02,087 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@6fbb4061
2017-04-24 12:04:02,087 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6fbb4061
2017-04-24 12:04:02,091 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4b4ee511
2017-04-24 12:04:02,099 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4b4ee511
2017-04-24 12:04:02,103 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3762c4fc
2017-04-24 12:04:02,104 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3762c4fc
2017-04-24 12:04:02,108 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration string -> org.hibernate.type.StringType@141d3d43
2017-04-24 12:04:02,109 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.String -> org.hibernate.type.StringType@141d3d43
2017-04-24 12:04:02,113 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6419a0e1
2017-04-24 12:04:02,117 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@68ed3f30
2017-04-24 12:04:02,120 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration url -> org.hibernate.type.UrlType@575e572f
2017-04-24 12:04:02,121 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@575e572f
2017-04-24 12:04:02,125 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Duration -> org.hibernate.type.DurationType@3456558
2017-04-24 12:04:02,126 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@3456558
2017-04-24 12:04:02,182 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Instant -> org.hibernate.type.InstantType@73ae0257
2017-04-24 12:04:02,190 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@73ae0257
2017-04-24 12:04:02,201 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@42a0501e
2017-04-24 12:04:02,202 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@42a0501e
2017-04-24 12:04:02,209 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@2b5c4f17
2017-04-24 12:04:02,210 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@2b5c4f17
2017-04-24 12:04:02,218 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@177c41d7
2017-04-24 12:04:02,219 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@177c41d7
2017-04-24 12:04:02,223 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@51c8f62c
2017-04-24 12:04:02,224 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@51c8f62c
2017-04-24 12:04:02,228 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@44fff386
2017-04-24 12:04:02,229 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@44fff386
2017-04-24 12:04:02,251 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@68a78f3c
2017-04-24 12:04:02,253 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@68a78f3c
2017-04-24 12:04:02,258 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration date -> org.hibernate.type.DateType@732f6050
2017-04-24 12:04:02,260 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@732f6050
2017-04-24 12:04:02,264 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration time -> org.hibernate.type.TimeType@5f96f6a2
2017-04-24 12:04:02,265 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5f96f6a2
2017-04-24 12:04:02,268 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration timestamp -> org.hibernate.type.TimestampType@341b13a8
2017-04-24 12:04:02,269 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@341b13a8
2017-04-24 12:04:02,270 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@341b13a8
2017-04-24 12:04:02,275 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5f14761c
2017-04-24 12:04:02,281 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration calendar -> org.hibernate.type.CalendarType@724b939e
2017-04-24 12:04:02,282 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@724b939e
2017-04-24 12:04:02,282 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@724b939e
2017-04-24 12:04:02,285 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@52b3bf03
2017-04-24 12:04:02,288 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration locale -> org.hibernate.type.LocaleType@5626d18c
2017-04-24 12:04:02,291 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5626d18c
2017-04-24 12:04:02,295 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration currency -> org.hibernate.type.CurrencyType@45f756e6
2017-04-24 12:04:02,296 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@45f756e6
2017-04-24 12:04:02,299 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@656f62dc
2017-04-24 12:04:02,300 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@656f62dc
2017-04-24 12:04:02,305 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration class -> org.hibernate.type.ClassType@5a8c93
2017-04-24 12:04:02,306 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5a8c93
2017-04-24 12:04:02,310 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5634a861
2017-04-24 12:04:02,312 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5634a861
2017-04-24 12:04:02,314 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@43bdaa1b
2017-04-24 12:04:02,318 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration binary -> org.hibernate.type.BinaryType@7f9fc8bd
2017-04-24 12:04:02,319 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte[] -> org.hibernate.type.BinaryType@7f9fc8bd
2017-04-24 12:04:02,319 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [B -> org.hibernate.type.BinaryType@7f9fc8bd
2017-04-24 12:04:02,322 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1a500561
2017-04-24 12:04:02,325 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1a500561
2017-04-24 12:04:02,326 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1a500561
2017-04-24 12:04:02,329 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration row_version -> org.hibernate.type.RowVersionType@4086d8fb
2017-04-24 12:04:02,331 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration image -> org.hibernate.type.ImageType@7c781c42
2017-04-24 12:04:02,334 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration characters -> org.hibernate.type.CharArrayType@c386958
2017-04-24 12:04:02,335 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration char[] -> org.hibernate.type.CharArrayType@c386958
2017-04-24 12:04:02,338 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [C -> org.hibernate.type.CharArrayType@c386958
2017-04-24 12:04:02,341 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3166f664
2017-04-24 12:04:02,342 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3166f664
2017-04-24 12:04:02,343 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3166f664
2017-04-24 12:04:02,347 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration text -> org.hibernate.type.TextType@44a085e5
2017-04-24 12:04:02,349 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ntext -> org.hibernate.type.NTextType@2152ab30
2017-04-24 12:04:02,359 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration blob -> org.hibernate.type.BlobType@6749fe50
2017-04-24 12:04:02,361 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6749fe50
2017-04-24 12:04:02,363 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@ae73c80
2017-04-24 12:04:02,372 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration clob -> org.hibernate.type.ClobType@5562c2c9
2017-04-24 12:04:02,373 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5562c2c9
2017-04-24 12:04:02,379 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration nclob -> org.hibernate.type.NClobType@51ab1ee3
2017-04-24 12:04:02,380 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@51ab1ee3
2017-04-24 12:04:02,381 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@28757abd
2017-04-24 12:04:02,383 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@138aa3cc
2017-04-24 12:04:02,387 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration serializable -> org.hibernate.type.SerializableType@ceddaf8
2017-04-24 12:04:02,393 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration object -> org.hibernate.type.ObjectType@76a805b7
2017-04-24 12:04:02,394 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@76a805b7
2017-04-24 12:04:02,396 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@608b1fd2
2017-04-24 12:04:02,397 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@56382bc9
2017-04-24 12:04:02,397 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@591a4f8e
2017-04-24 12:04:02,398 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@53ed80d3
2017-04-24 12:04:02,398 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6ba060f3
2017-04-24 12:04:02,401 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7c51782d
2017-04-24 12:04:02,401 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@77bc2e16
2017-04-24 12:04:02,402 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@48e8c32a
2017-04-24 12:04:02,430 WARN  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:70) - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2017-04-24 12:04:02,433 DEBUG [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:154) - No driver class specified
2017-04-24 12:04:02,434 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:126) - HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306/strutsproject]
2017-04-24 12:04:02,436 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:132) - HHH10001001: Connection properties: {user=root, password=}
2017-04-24 12:04:02,442 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:140) - HHH10001003: Autocommit mode: false
2017-04-24 12:04:02,458 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:384) - Initializing Connection pool with 1 Connections
2017-04-24 12:04:02,468 INFO  [main] internal.PooledConnections (PooledConnections.java:41) - HHH000115: Hibernate connection pool size: 1 (min=1)
2017-04-24 12:04:03,121 DEBUG [main] internal.JdbcEnvironmentInitiator (JdbcEnvironmentInitiator.java:72) - Database ->
       name : MySQL
    version : 5.6.30-1
      major : 5
      minor : 6
2017-04-24 12:04:03,127 DEBUG [main] internal.JdbcEnvironmentInitiator (JdbcEnvironmentInitiator.java:83) - Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.9 ( Revision: ${svn.Revision} )
      major : 5
      minor : 1
2017-04-24 12:04:03,130 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:389) - JDBC version : 3.0
2017-04-24 12:04:03,192 INFO  [main] dialect.Dialect (Dialect.java:157) - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2017-04-24 12:04:03,309 DEBUG [main] spi.IdentifierHelperBuilder (IdentifierHelperBuilder.java:117) - JDBC driver metadata reported database stores quoted identifiers in more than one case
2017-04-24 12:04:03,321 DEBUG [main] spi.IdentifierHelperBuilder (IdentifierHelperBuilder.java:191) - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2017-04-24 12:04:03,357 INFO  [main] internal.LobCreatorBuilderImpl (LobCreatorBuilderImpl.java:98) - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2017-04-24 12:04:03,514 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2017-04-24 12:04:03,518 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2017-04-24 12:04:03,522 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2017-04-24 12:04:03,525 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2017-04-24 12:04:03,535 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2017-04-24 12:04:03,545 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2017-04-24 12:04:03,601 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2017-04-24 12:04:03,614 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2017-04-24 12:04:03,622 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2017-04-24 12:04:03,634 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2017-04-24 12:04:03,647 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2017-04-24 12:04:03,648 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2017-04-24 12:04:03,649 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2017-04-24 12:04:03,655 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2017-04-24 12:04:04,154 DEBUG [main] relational.Namespace (Namespace.java:47) - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2017-04-24 12:04:04,242 DEBUG [main] cfg.AnnotationBinder (AnnotationBinder.java:511) - Binding entity from annotated class: com.example.struts2.model.Users
2017-04-24 12:04:04,350 DEBUG [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2017-04-24 12:04:04,368 DEBUG [main] annotations.EntityBinder (EntityBinder.java:419) - Import with entity name users
2017-04-24 12:04:04,406 DEBUG [main] annotations.EntityBinder (EntityBinder.java:695) - Bind entity com.example.struts2.model.Users on table users
2017-04-24 12:04:04,585 DEBUG [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
2017-04-24 12:04:04,598 DEBUG [main] annotations.PropertyBinder (PropertyBinder.java:174) - MetadataSourceProcessor property id with lazy=false
2017-04-24 12:04:04,606 DEBUG [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.example.struts2.model.Users:id]
2017-04-24 12:04:04,612 DEBUG [main] annotations.SimpleValueBinder (SimpleValueBinder.java:411) - building SimpleValue for id
2017-04-24 12:04:04,620 DEBUG [main] annotations.PropertyBinder (PropertyBinder.java:265) - Building property id
2017-04-24 12:04:04,629 DEBUG [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2017-04-24 12:04:04,630 DEBUG [main] annotations.PropertyBinder (PropertyBinder.java:174) - MetadataSourceProcessor property password with lazy=false
2017-04-24 12:04:04,632 DEBUG [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.example.struts2.model.Users:password]
2017-04-24 12:04:04,633 DEBUG [main] annotations.SimpleValueBinder (SimpleValueBinder.java:411) - building SimpleValue for password
2017-04-24 12:04:04,634 DEBUG [main] annotations.PropertyBinder (PropertyBinder.java:265) - Building property password
2017-04-24 12:04:04,636 DEBUG [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=false}
2017-04-24 12:04:04,637 DEBUG [main] annotations.PropertyBinder (PropertyBinder.java:174) - MetadataSourceProcessor property username with lazy=false
2017-04-24 12:04:04,638 DEBUG [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.example.struts2.model.Users:username]
2017-04-24 12:04:04,639 DEBUG [main] annotations.SimpleValueBinder (SimpleValueBinder.java:411) - building SimpleValue for username
2017-04-24 12:04:04,640 DEBUG [main] annotations.PropertyBinder (PropertyBinder.java:265) - Building property username
2017-04-24 12:04:04,644 DEBUG [main] annotations.SimpleValueBinder (SimpleValueBinder.java:456) - Starting fillSimpleValue for id
2017-04-24 12:04:04,645 DEBUG [main] annotations.SimpleValueBinder (SimpleValueBinder.java:456) - Starting fillSimpleValue for password
2017-04-24 12:04:04,648 DEBUG [main] annotations.SimpleValueBinder (SimpleValueBinder.java:456) - Starting fillSimpleValue for username
2017-04-24 12:04:04,657 DEBUG [main] mapping.PrimaryKey (PrimaryKey.java:35) - Forcing column [id] to be non-null as it is part of the primary key for table [users]
2017-04-24 12:04:04,827 DEBUG [main] internal.SessionFactoryImpl (SessionFactoryImpl.java:199) - Building session factory
2017-04-24 12:04:04,831 DEBUG [main] cfg.Settings (Settings.java:69) - SessionFactory name : null
2017-04-24 12:04:04,832 DEBUG [main] cfg.Settings (Settings.java:70) - Automatic flush during beforeCompletion(): enabled
2017-04-24 12:04:04,833 DEBUG [main] cfg.Settings (Settings.java:71) - Automatic session close at end of transaction: disabled
2017-04-24 12:04:04,834 DEBUG [main] cfg.Settings (Settings.java:73) - Statistics: disabled
2017-04-24 12:04:04,835 DEBUG [main] cfg.Settings (Settings.java:75) - Deleted entity synthetic identifier rollback: disabled
2017-04-24 12:04:04,836 DEBUG [main] cfg.Settings (Settings.java:76) - Default entity-mode: pojo
2017-04-24 12:04:04,836 DEBUG [main] cfg.Settings (Settings.java:77) - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2017-04-24 12:04:04,837 DEBUG [main] cfg.Settings (Settings.java:78) - Allow initialization of lazy state outside session : disabled
2017-04-24 12:04:04,838 DEBUG [main] cfg.Settings (Settings.java:80) - Using BatchFetchStyle : LEGACY
2017-04-24 12:04:04,838 DEBUG [main] cfg.Settings (Settings.java:81) - Default batch fetch size: -1
2017-04-24 12:04:04,840 DEBUG [main] cfg.Settings (Settings.java:82) - Maximum outer join fetch depth: 2
2017-04-24 12:04:04,841 DEBUG [main] cfg.Settings (Settings.java:83) - Default null ordering: NONE
2017-04-24 12:04:04,841 DEBUG [main] cfg.Settings (Settings.java:84) - Order SQL updates by primary key: disabled
2017-04-24 12:04:04,842 DEBUG [main] cfg.Settings (Settings.java:85) - Order SQL inserts for batching: disabled
2017-04-24 12:04:04,842 DEBUG [main] cfg.Settings (Settings.java:87) - multi-tenancy strategy : NONE
2017-04-24 12:04:04,843 DEBUG [main] cfg.Settings (Settings.java:89) - JTA Track by Thread: enabled
2017-04-24 12:04:04,843 DEBUG [main] cfg.Settings (Settings.java:91) - Query language substitutions: {}
2017-04-24 12:04:04,844 DEBUG [main] cfg.Settings (Settings.java:92) - JPA query language strict compliance: disabled
2017-04-24 12:04:04,844 DEBUG [main] cfg.Settings (Settings.java:93) - Named query checking : enabled
2017-04-24 12:04:04,845 DEBUG [main] cfg.Settings (Settings.java:95) - Second-level cache: enabled
2017-04-24 12:04:04,846 DEBUG [main] cfg.Settings (Settings.java:96) - Second-level query cache: disabled
2017-04-24 12:04:04,846 DEBUG [main] cfg.Settings (Settings.java:97) - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@22bf9122
2017-04-24 12:04:04,847 DEBUG [main] cfg.Settings (Settings.java:98) - Second-level cache region prefix: null
2017-04-24 12:04:04,848 DEBUG [main] cfg.Settings (Settings.java:99) - Optimize second-level cache for minimal puts: disabled
2017-04-24 12:04:04,848 DEBUG [main] cfg.Settings (Settings.java:100) - Structured second-level cache entries: disabled
2017-04-24 12:04:04,849 DEBUG [main] cfg.Settings (Settings.java:101) - Second-level cache direct-reference entries: disabled
2017-04-24 12:04:04,849 DEBUG [main] cfg.Settings (Settings.java:102) - Automatic eviction of collection cache: disabled
2017-04-24 12:04:04,850 DEBUG [main] cfg.Settings (Settings.java:104) - JDBC batch size: 15
2017-04-24 12:04:04,850 DEBUG [main] cfg.Settings (Settings.java:105) - JDBC batch updates for versioned data: enabled
2017-04-24 12:04:04,851 DEBUG [main] cfg.Settings (Settings.java:106) - Scrollable result sets: enabled
2017-04-24 12:04:04,851 DEBUG [main] cfg.Settings (Settings.java:107) - Wrap result sets: disabled
2017-04-24 12:04:04,852 DEBUG [main] cfg.Settings (Settings.java:108) - JDBC3 getGeneratedKeys(): enabled
2017-04-24 12:04:04,853 DEBUG [main] cfg.Settings (Settings.java:109) - JDBC result set fetch size: null
2017-04-24 12:04:04,853 DEBUG [main] cfg.Settings (Settings.java:110) - Connection release mode: AFTER_TRANSACTION
2017-04-24 12:04:04,854 DEBUG [main] cfg.Settings (Settings.java:111) - Generate SQL with comments: disabled
2017-04-24 12:04:05,031 DEBUG [main] internal.SessionFactoryImpl (SessionFactoryImpl.java:254) - Session factory constructed with filter configurations : {}
2017-04-24 12:04:05,032 DEBUG [main] internal.SessionFactoryImpl (SessionFactoryImpl.java:255) - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, java.vendor.url=http://java.oracle.com/, user.timezone=Asia/Jakarta, os.name=Linux, java.vm.specification.version=1.8, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, maven.home=/usr/share/maven, sun.cpu.endian=little, user.home=/root, user.language=en, java.specification.vendor=Oracle Corporation, java.home=/usr/lib/jvm/java-8-openjdk-amd64/jre, file.separator=/, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, sun.boot.class.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/classes, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_111-8u111-b14-3-b14, user.name=root, path.separator=:, securerandom.source=file:/dev/./urandom, hibernate.connection.username=root, os.version=4.8.0-kali2-amd64, java.endorsed.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/endorsed, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/strutsproject, file.encoding=UTF-8, guice.disable.misplaced.annotation.check=true, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=/tmp, java.version=1.8.0_111, user.dir=/root/Source/java/struts/struts-project, os.arch=amd64, maven.multiModuleProjectDirectory=/root/Source/java/struts/struts-project, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@4d705112, java.library.path=/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.111-b14, classworlds.conf=/usr/share/maven/bin/m2.conf, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.pool_size=1, java.ext.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
2017-04-24 12:04:05,062 DEBUG [main] spi.JaccIntegrator (JaccIntegrator.java:80) - Skipping JACC integration as it was not enabled
2017-04-24 12:04:05,091 DEBUG [main] internal.SessionFactoryImpl (SessionFactoryImpl.java:294) - Instantiated session factory
2017-04-24 12:04:05,232 DEBUG [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [com.example.struts2.model.Users] is safe
2017-04-24 12:04:05,233 DEBUG [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.struts2.model.Users
2017-04-24 12:04:05,269 DEBUG [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [com.example.struts2.model.Users] is safe
2017-04-24 12:04:05,270 DEBUG [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.struts2.model.Users
2017-04-24 12:04:05,465 DEBUG [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3598) - Static SQL for entity: com.example.struts2.model.Users
2017-04-24 12:04:05,467 DEBUG [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3603) -  Version select: select id from users where id =?
2017-04-24 12:04:05,467 DEBUG [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3606) -  Snapshot select: select users_.id, users_.password as password2_0_, users_.username as username3_0_ from users users_ where users_.id=?
2017-04-24 12:04:05,468 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Insert 0: insert into users (password, username, id) values (?, ?, ?)
2017-04-24 12:04:05,469 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Update 0: update users set password=?, username=? where id=?
2017-04-24 12:04:05,470 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Delete 0: delete from users where id=?
2017-04-24 12:04:05,471 DEBUG [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3614) -  Identity insert: insert into users (password, username) values (?, ?)
2017-04-24 12:04:05,526 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a21f43f]
2017-04-24 12:04:05,530 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:04:05,532 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:04:05,533 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:04:05,564 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:04:05,577 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:04:05,587 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [NONE]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-24 12:04:05,589 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4776e209]
2017-04-24 12:04:05,590 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:04:05,591 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:04:05,592 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:04:05,592 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:04:05,594 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:04:05,595 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [READ]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-24 12:04:05,596 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f536481]
2017-04-24 12:04:05,597 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:04:05,597 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:04:05,598 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:04:05,599 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:04:05,601 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:04:05,602 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [UPGRADE]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=? for update
2017-04-24 12:04:05,602 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22a260ff]
2017-04-24 12:04:05,604 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:04:05,605 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:04:05,605 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:04:05,606 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:04:05,609 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:04:05,611 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [UPGRADE_NOWAIT]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=? for update
2017-04-24 12:04:05,616 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50b734c4]
2017-04-24 12:04:05,619 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:04:05,622 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:04:05,625 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:04:05,626 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:04:05,629 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:04:05,631 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [UPGRADE_SKIPLOCKED]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=? for update
2017-04-24 12:04:05,632 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16d0e521]
2017-04-24 12:04:05,633 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:04:05,634 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:04:05,634 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:04:05,636 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:04:05,637 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:04:05,638 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [FORCE]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=? for update
2017-04-24 12:04:05,640 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ab4aa5e]
2017-04-24 12:04:05,641 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:04:05,642 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:04:05,642 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:04:05,646 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:04:05,648 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:04:05,648 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [PESSIMISTIC_READ]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=? lock in share mode
2017-04-24 12:04:05,649 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a7cb3a4]
2017-04-24 12:04:05,650 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:04:05,651 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:04:05,651 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:04:05,652 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:04:05,655 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:04:05,656 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [PESSIMISTIC_WRITE]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=? for update
2017-04-24 12:04:05,659 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33e0c716]
2017-04-24 12:04:05,660 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:04:05,661 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:04:05,662 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:04:05,663 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:04:05,667 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:04:05,671 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [PESSIMISTIC_FORCE_INCREMENT]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=? for update
2017-04-24 12:04:05,672 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6274f21c]
2017-04-24 12:04:05,675 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:04:05,676 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:04:05,677 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:04:05,678 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:04:05,681 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:04:05,682 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [OPTIMISTIC]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-24 12:04:05,683 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@237add]
2017-04-24 12:04:05,684 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:04:05,685 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:04:05,685 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:04:05,686 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:04:05,689 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:04:05,690 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [OPTIMISTIC_FORCE_INCREMENT]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-24 12:04:05,728 DEBUG [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_MERGE on entity com.example.struts2.model.Users: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-24 12:04:05,730 DEBUG [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_REFRESH on entity com.example.struts2.model.Users: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-24 12:04:05,790 DEBUG [main] spi.SchemaManagementToolCoordinator (SchemaManagementToolCoordinator.java:56) - No actions specified; doing nothing
2017-04-24 12:04:05,791 DEBUG [main] internal.JtaPlatformInitiator (JtaPlatformInitiator.java:42) - No JtaPlatform was specified, checking resolver
2017-04-24 12:04:05,793 DEBUG [main] internal.JtaPlatformResolverInitiator (JtaPlatformResolverInitiator.java:33) - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2017-04-24 12:04:05,809 DEBUG [main] internal.StandardJtaPlatformResolver (StandardJtaPlatformResolver.java:102) - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2017-04-24 12:04:05,813 DEBUG [main] spi.NamedQueryRepository (NamedQueryRepository.java:151) - Checking 0 named HQL queries
2017-04-24 12:04:05,815 DEBUG [main] spi.NamedQueryRepository (NamedQueryRepository.java:167) - Checking 0 named SQL queries
2017-04-24 12:04:05,821 DEBUG [main] internal.SessionFactoryRegistry (SessionFactoryRegistry.java:52) - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@268c030f
2017-04-24 12:04:05,827 DEBUG [main] internal.SessionFactoryRegistry (SessionFactoryRegistry.java:74) - Registering SessionFactory: 069eacb3-b6f3-4076-9afc-941780383e9b (<unnamed>)
2017-04-24 12:04:05,828 DEBUG [main] internal.SessionFactoryRegistry (SessionFactoryRegistry.java:81) - Not binding SessionFactory to JNDI, no JNDI name configured
2017-04-24 12:04:33,127 DEBUG [pool-2-thread-1] internal.PooledConnections (PooledConnections.java:51) - Connection pool now considered primed; min-size will be maintained
2017-04-24 12:04:36,595 DEBUG [qtp350413251-18] internal.StatisticsInitiator (StatisticsInitiator.java:82) - Statistics initialized [enabled=false]
2017-04-24 12:04:36,697 INFO  [qtp350413251-18] action.Login (Login.java:25) - VALIDATE ad 
2017-04-24 12:05:35,723 DEBUG [main] internal.CoreLogging (CoreLogging.java:28) - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2017-04-24 12:05:35,754 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2017-04-24 12:05:35,758 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2017-04-24 12:05:35,766 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2017-04-24 12:05:36,153 INFO  [main] hibernate.Version (Version.java:45) - HHH000412: Hibernate Core {5.2.9.Final}
2017-04-24 12:05:36,159 INFO  [main] cfg.Environment (Environment.java:213) - HHH000206: hibernate.properties not found
2017-04-24 12:05:36,208 DEBUG [main] internal.JaxbCfgProcessor (JaxbCfgProcessor.java:116) - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2017-04-24 12:05:36,630 DEBUG [main] cfg.Configuration (Configuration.java:724) - Building session factory using internal StandardServiceRegistryBuilder
2017-04-24 12:05:36,647 DEBUG [main] spi.ServiceBinding (ServiceBinding.java:68) - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2017-04-24 12:05:36,651 DEBUG [main] cfg.Configuration (Configuration.java:652) - Building session factory using provided StandardServiceRegistry
2017-04-24 12:05:36,701 DEBUG [main] internal.RegionFactoryInitiator (RegionFactoryInitiator.java:75) - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2017-04-24 12:05:36,727 INFO  [main] java.JavaReflectionManager (JavaReflectionManager.java:66) - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2017-04-24 12:05:36,785 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@61bcbcce
2017-04-24 12:05:36,789 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@61bcbcce
2017-04-24 12:05:36,793 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@61bcbcce
2017-04-24 12:05:36,799 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@15efda6c
2017-04-24 12:05:36,805 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@404eca05
2017-04-24 12:05:36,809 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration yes_no -> org.hibernate.type.YesNoType@17092fff
2017-04-24 12:05:36,819 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@643d2dae
2017-04-24 12:05:36,822 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@643d2dae
2017-04-24 12:05:36,830 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@643d2dae
2017-04-24 12:05:36,836 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration character -> org.hibernate.type.CharacterType@46e64760
2017-04-24 12:05:36,842 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration char -> org.hibernate.type.CharacterType@46e64760
2017-04-24 12:05:36,846 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@46e64760
2017-04-24 12:05:36,853 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@c017175
2017-04-24 12:05:36,857 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@c017175
2017-04-24 12:05:36,860 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@c017175
2017-04-24 12:05:36,873 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration integer -> org.hibernate.type.IntegerType@7af3874e
2017-04-24 12:05:36,881 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration int -> org.hibernate.type.IntegerType@7af3874e
2017-04-24 12:05:36,885 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7af3874e
2017-04-24 12:05:36,893 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@70d63e05
2017-04-24 12:05:36,894 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@70d63e05
2017-04-24 12:05:36,894 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@70d63e05
2017-04-24 12:05:36,908 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@1e1b061
2017-04-24 12:05:36,909 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@1e1b061
2017-04-24 12:05:36,909 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1e1b061
2017-04-24 12:05:36,915 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@6c0905f6
2017-04-24 12:05:36,919 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@6c0905f6
2017-04-24 12:05:36,922 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6c0905f6
2017-04-24 12:05:36,929 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1391af3b
2017-04-24 12:05:36,932 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1391af3b
2017-04-24 12:05:36,938 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3a8d467e
2017-04-24 12:05:36,942 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3a8d467e
2017-04-24 12:05:36,949 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration string -> org.hibernate.type.StringType@135a8c6f
2017-04-24 12:05:36,952 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.String -> org.hibernate.type.StringType@135a8c6f
2017-04-24 12:05:36,961 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2ae62bb6
2017-04-24 12:05:36,966 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@43bf5397
2017-04-24 12:05:36,972 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration url -> org.hibernate.type.UrlType@516462cc
2017-04-24 12:05:36,975 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@516462cc
2017-04-24 12:05:36,982 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Duration -> org.hibernate.type.DurationType@3679d92e
2017-04-24 12:05:36,985 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@3679d92e
2017-04-24 12:05:37,061 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Instant -> org.hibernate.type.InstantType@2596d7f4
2017-04-24 12:05:37,065 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2596d7f4
2017-04-24 12:05:37,078 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@3d1f558a
2017-04-24 12:05:37,083 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@3d1f558a
2017-04-24 12:05:37,098 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@2f7efd0b
2017-04-24 12:05:37,102 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@2f7efd0b
2017-04-24 12:05:37,112 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@d2291de
2017-04-24 12:05:37,118 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@d2291de
2017-04-24 12:05:37,125 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1e236278
2017-04-24 12:05:37,129 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1e236278
2017-04-24 12:05:37,136 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4d6ccc97
2017-04-24 12:05:37,139 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4d6ccc97
2017-04-24 12:05:37,164 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@79518e00
2017-04-24 12:05:37,171 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@79518e00
2017-04-24 12:05:37,178 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration date -> org.hibernate.type.DateType@73809e7
2017-04-24 12:05:37,183 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@73809e7
2017-04-24 12:05:37,189 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration time -> org.hibernate.type.TimeType@67507df
2017-04-24 12:05:37,193 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@67507df
2017-04-24 12:05:37,199 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration timestamp -> org.hibernate.type.TimestampType@33feb805
2017-04-24 12:05:37,203 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@33feb805
2017-04-24 12:05:37,207 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@33feb805
2017-04-24 12:05:37,215 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@34332b8d
2017-04-24 12:05:37,224 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration calendar -> org.hibernate.type.CalendarType@7cca01a8
2017-04-24 12:05:37,230 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7cca01a8
2017-04-24 12:05:37,233 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7cca01a8
2017-04-24 12:05:37,238 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7a4d582c
2017-04-24 12:05:37,244 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration locale -> org.hibernate.type.LocaleType@4d1ff6b1
2017-04-24 12:05:37,248 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4d1ff6b1
2017-04-24 12:05:37,253 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration currency -> org.hibernate.type.CurrencyType@7d247660
2017-04-24 12:05:37,259 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7d247660
2017-04-24 12:05:37,264 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@513b52af
2017-04-24 12:05:37,268 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@513b52af
2017-04-24 12:05:37,275 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration class -> org.hibernate.type.ClassType@4ed4a7e4
2017-04-24 12:05:37,282 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4ed4a7e4
2017-04-24 12:05:37,288 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@30b975ad
2017-04-24 12:05:37,293 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@30b975ad
2017-04-24 12:05:37,298 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@470d183
2017-04-24 12:05:37,304 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration binary -> org.hibernate.type.BinaryType@3ddeaa5f
2017-04-24 12:05:37,308 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte[] -> org.hibernate.type.BinaryType@3ddeaa5f
2017-04-24 12:05:37,311 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [B -> org.hibernate.type.BinaryType@3ddeaa5f
2017-04-24 12:05:37,317 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3bec5821
2017-04-24 12:05:37,322 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3bec5821
2017-04-24 12:05:37,326 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3bec5821
2017-04-24 12:05:37,336 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration row_version -> org.hibernate.type.RowVersionType@176555c
2017-04-24 12:05:37,342 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration image -> org.hibernate.type.ImageType@97a145b
2017-04-24 12:05:37,345 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration characters -> org.hibernate.type.CharArrayType@526a9908
2017-04-24 12:05:37,346 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration char[] -> org.hibernate.type.CharArrayType@526a9908
2017-04-24 12:05:37,353 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [C -> org.hibernate.type.CharArrayType@526a9908
2017-04-24 12:05:37,358 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@60a19573
2017-04-24 12:05:37,362 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@60a19573
2017-04-24 12:05:37,365 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@60a19573
2017-04-24 12:05:37,372 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration text -> org.hibernate.type.TextType@4db60246
2017-04-24 12:05:37,377 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ntext -> org.hibernate.type.NTextType@34d45ec0
2017-04-24 12:05:37,394 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration blob -> org.hibernate.type.BlobType@22f4f8f2
2017-04-24 12:05:37,398 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@22f4f8f2
2017-04-24 12:05:37,402 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@73971965
2017-04-24 12:05:37,414 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration clob -> org.hibernate.type.ClobType@7c011174
2017-04-24 12:05:37,418 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7c011174
2017-04-24 12:05:37,428 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration nclob -> org.hibernate.type.NClobType@21a02556
2017-04-24 12:05:37,431 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@21a02556
2017-04-24 12:05:37,436 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@10a98392
2017-04-24 12:05:37,441 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1945113f
2017-04-24 12:05:37,450 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration serializable -> org.hibernate.type.SerializableType@1d6d1d42
2017-04-24 12:05:37,460 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration object -> org.hibernate.type.ObjectType@56382bc9
2017-04-24 12:05:37,464 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@56382bc9
2017-04-24 12:05:37,475 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6ba060f3
2017-04-24 12:05:37,478 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7c51782d
2017-04-24 12:05:37,482 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@77bc2e16
2017-04-24 12:05:37,483 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@48e8c32a
2017-04-24 12:05:37,490 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@20a7953c
2017-04-24 12:05:37,492 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@57c00115
2017-04-24 12:05:37,493 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@411a5965
2017-04-24 12:05:37,493 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4fe533ff
2017-04-24 12:05:37,529 WARN  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:70) - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2017-04-24 12:05:37,534 DEBUG [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:154) - No driver class specified
2017-04-24 12:05:37,538 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:126) - HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306/strutsproject]
2017-04-24 12:05:37,542 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:132) - HHH10001001: Connection properties: {user=root, password=}
2017-04-24 12:05:37,554 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:140) - HHH10001003: Autocommit mode: false
2017-04-24 12:05:37,564 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:384) - Initializing Connection pool with 1 Connections
2017-04-24 12:05:37,568 INFO  [main] internal.PooledConnections (PooledConnections.java:41) - HHH000115: Hibernate connection pool size: 1 (min=1)
2017-04-24 12:05:38,130 DEBUG [main] internal.JdbcEnvironmentInitiator (JdbcEnvironmentInitiator.java:72) - Database ->
       name : MySQL
    version : 5.6.30-1
      major : 5
      minor : 6
2017-04-24 12:05:38,134 DEBUG [main] internal.JdbcEnvironmentInitiator (JdbcEnvironmentInitiator.java:83) - Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.9 ( Revision: ${svn.Revision} )
      major : 5
      minor : 1
2017-04-24 12:05:38,140 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:389) - JDBC version : 3.0
2017-04-24 12:05:38,172 INFO  [main] dialect.Dialect (Dialect.java:157) - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2017-04-24 12:05:38,279 DEBUG [main] spi.IdentifierHelperBuilder (IdentifierHelperBuilder.java:117) - JDBC driver metadata reported database stores quoted identifiers in more than one case
2017-04-24 12:05:38,291 DEBUG [main] spi.IdentifierHelperBuilder (IdentifierHelperBuilder.java:191) - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2017-04-24 12:05:38,320 INFO  [main] internal.LobCreatorBuilderImpl (LobCreatorBuilderImpl.java:98) - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2017-04-24 12:05:38,409 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2017-04-24 12:05:38,414 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2017-04-24 12:05:38,421 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2017-04-24 12:05:38,424 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2017-04-24 12:05:38,428 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2017-04-24 12:05:38,434 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2017-04-24 12:05:38,440 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2017-04-24 12:05:38,445 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2017-04-24 12:05:38,451 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2017-04-24 12:05:38,455 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2017-04-24 12:05:38,460 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2017-04-24 12:05:38,466 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2017-04-24 12:05:38,470 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2017-04-24 12:05:38,475 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2017-04-24 12:05:38,986 DEBUG [main] relational.Namespace (Namespace.java:47) - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2017-04-24 12:05:39,065 DEBUG [main] cfg.AnnotationBinder (AnnotationBinder.java:511) - Binding entity from annotated class: com.example.struts2.model.Users
2017-04-24 12:05:39,121 DEBUG [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2017-04-24 12:05:39,136 DEBUG [main] annotations.EntityBinder (EntityBinder.java:419) - Import with entity name users
2017-04-24 12:05:39,153 DEBUG [main] annotations.EntityBinder (EntityBinder.java:695) - Bind entity com.example.struts2.model.Users on table users
2017-04-24 12:05:39,239 DEBUG [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
2017-04-24 12:05:39,254 DEBUG [main] annotations.PropertyBinder (PropertyBinder.java:174) - MetadataSourceProcessor property id with lazy=false
2017-04-24 12:05:39,263 DEBUG [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.example.struts2.model.Users:id]
2017-04-24 12:05:39,271 DEBUG [main] annotations.SimpleValueBinder (SimpleValueBinder.java:411) - building SimpleValue for id
2017-04-24 12:05:39,282 DEBUG [main] annotations.PropertyBinder (PropertyBinder.java:265) - Building property id
2017-04-24 12:05:39,298 DEBUG [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2017-04-24 12:05:39,302 DEBUG [main] annotations.PropertyBinder (PropertyBinder.java:174) - MetadataSourceProcessor property password with lazy=false
2017-04-24 12:05:39,305 DEBUG [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.example.struts2.model.Users:password]
2017-04-24 12:05:39,308 DEBUG [main] annotations.SimpleValueBinder (SimpleValueBinder.java:411) - building SimpleValue for password
2017-04-24 12:05:39,312 DEBUG [main] annotations.PropertyBinder (PropertyBinder.java:265) - Building property password
2017-04-24 12:05:39,320 DEBUG [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=false}
2017-04-24 12:05:39,329 DEBUG [main] annotations.PropertyBinder (PropertyBinder.java:174) - MetadataSourceProcessor property username with lazy=false
2017-04-24 12:05:39,330 DEBUG [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.example.struts2.model.Users:username]
2017-04-24 12:05:39,337 DEBUG [main] annotations.SimpleValueBinder (SimpleValueBinder.java:411) - building SimpleValue for username
2017-04-24 12:05:39,338 DEBUG [main] annotations.PropertyBinder (PropertyBinder.java:265) - Building property username
2017-04-24 12:05:39,346 DEBUG [main] annotations.SimpleValueBinder (SimpleValueBinder.java:456) - Starting fillSimpleValue for id
2017-04-24 12:05:39,350 DEBUG [main] annotations.SimpleValueBinder (SimpleValueBinder.java:456) - Starting fillSimpleValue for password
2017-04-24 12:05:39,355 DEBUG [main] annotations.SimpleValueBinder (SimpleValueBinder.java:456) - Starting fillSimpleValue for username
2017-04-24 12:05:39,359 DEBUG [main] mapping.PrimaryKey (PrimaryKey.java:35) - Forcing column [id] to be non-null as it is part of the primary key for table [users]
2017-04-24 12:05:39,465 DEBUG [main] internal.SessionFactoryImpl (SessionFactoryImpl.java:199) - Building session factory
2017-04-24 12:05:39,472 DEBUG [main] cfg.Settings (Settings.java:69) - SessionFactory name : null
2017-04-24 12:05:39,474 DEBUG [main] cfg.Settings (Settings.java:70) - Automatic flush during beforeCompletion(): enabled
2017-04-24 12:05:39,476 DEBUG [main] cfg.Settings (Settings.java:71) - Automatic session close at end of transaction: disabled
2017-04-24 12:05:39,477 DEBUG [main] cfg.Settings (Settings.java:73) - Statistics: disabled
2017-04-24 12:05:39,478 DEBUG [main] cfg.Settings (Settings.java:75) - Deleted entity synthetic identifier rollback: disabled
2017-04-24 12:05:39,479 DEBUG [main] cfg.Settings (Settings.java:76) - Default entity-mode: pojo
2017-04-24 12:05:39,480 DEBUG [main] cfg.Settings (Settings.java:77) - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2017-04-24 12:05:39,481 DEBUG [main] cfg.Settings (Settings.java:78) - Allow initialization of lazy state outside session : disabled
2017-04-24 12:05:39,482 DEBUG [main] cfg.Settings (Settings.java:80) - Using BatchFetchStyle : LEGACY
2017-04-24 12:05:39,483 DEBUG [main] cfg.Settings (Settings.java:81) - Default batch fetch size: -1
2017-04-24 12:05:39,484 DEBUG [main] cfg.Settings (Settings.java:82) - Maximum outer join fetch depth: 2
2017-04-24 12:05:39,484 DEBUG [main] cfg.Settings (Settings.java:83) - Default null ordering: NONE
2017-04-24 12:05:39,485 DEBUG [main] cfg.Settings (Settings.java:84) - Order SQL updates by primary key: disabled
2017-04-24 12:05:39,486 DEBUG [main] cfg.Settings (Settings.java:85) - Order SQL inserts for batching: disabled
2017-04-24 12:05:39,487 DEBUG [main] cfg.Settings (Settings.java:87) - multi-tenancy strategy : NONE
2017-04-24 12:05:39,488 DEBUG [main] cfg.Settings (Settings.java:89) - JTA Track by Thread: enabled
2017-04-24 12:05:39,488 DEBUG [main] cfg.Settings (Settings.java:91) - Query language substitutions: {}
2017-04-24 12:05:39,489 DEBUG [main] cfg.Settings (Settings.java:92) - JPA query language strict compliance: disabled
2017-04-24 12:05:39,490 DEBUG [main] cfg.Settings (Settings.java:93) - Named query checking : enabled
2017-04-24 12:05:39,490 DEBUG [main] cfg.Settings (Settings.java:95) - Second-level cache: enabled
2017-04-24 12:05:39,491 DEBUG [main] cfg.Settings (Settings.java:96) - Second-level query cache: disabled
2017-04-24 12:05:39,492 DEBUG [main] cfg.Settings (Settings.java:97) - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@5700c9db
2017-04-24 12:05:39,492 DEBUG [main] cfg.Settings (Settings.java:98) - Second-level cache region prefix: null
2017-04-24 12:05:39,493 DEBUG [main] cfg.Settings (Settings.java:99) - Optimize second-level cache for minimal puts: disabled
2017-04-24 12:05:39,493 DEBUG [main] cfg.Settings (Settings.java:100) - Structured second-level cache entries: disabled
2017-04-24 12:05:39,494 DEBUG [main] cfg.Settings (Settings.java:101) - Second-level cache direct-reference entries: disabled
2017-04-24 12:05:39,494 DEBUG [main] cfg.Settings (Settings.java:102) - Automatic eviction of collection cache: disabled
2017-04-24 12:05:39,495 DEBUG [main] cfg.Settings (Settings.java:104) - JDBC batch size: 15
2017-04-24 12:05:39,496 DEBUG [main] cfg.Settings (Settings.java:105) - JDBC batch updates for versioned data: enabled
2017-04-24 12:05:39,497 DEBUG [main] cfg.Settings (Settings.java:106) - Scrollable result sets: enabled
2017-04-24 12:05:39,497 DEBUG [main] cfg.Settings (Settings.java:107) - Wrap result sets: disabled
2017-04-24 12:05:39,498 DEBUG [main] cfg.Settings (Settings.java:108) - JDBC3 getGeneratedKeys(): enabled
2017-04-24 12:05:39,498 DEBUG [main] cfg.Settings (Settings.java:109) - JDBC result set fetch size: null
2017-04-24 12:05:39,499 DEBUG [main] cfg.Settings (Settings.java:110) - Connection release mode: AFTER_TRANSACTION
2017-04-24 12:05:39,502 DEBUG [main] cfg.Settings (Settings.java:111) - Generate SQL with comments: disabled
2017-04-24 12:05:39,686 DEBUG [main] internal.SessionFactoryImpl (SessionFactoryImpl.java:254) - Session factory constructed with filter configurations : {}
2017-04-24 12:05:39,689 DEBUG [main] internal.SessionFactoryImpl (SessionFactoryImpl.java:255) - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, java.vendor.url=http://java.oracle.com/, user.timezone=Asia/Jakarta, os.name=Linux, java.vm.specification.version=1.8, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, maven.home=/usr/share/maven, sun.cpu.endian=little, user.home=/root, user.language=en, java.specification.vendor=Oracle Corporation, java.home=/usr/lib/jvm/java-8-openjdk-amd64/jre, file.separator=/, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, sun.boot.class.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/classes, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_111-8u111-b14-3-b14, user.name=root, path.separator=:, securerandom.source=file:/dev/./urandom, hibernate.connection.username=root, os.version=4.8.0-kali2-amd64, java.endorsed.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/endorsed, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/strutsproject, file.encoding=UTF-8, guice.disable.misplaced.annotation.check=true, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=/tmp, java.version=1.8.0_111, user.dir=/root/Source/java/struts/struts-project, os.arch=amd64, maven.multiModuleProjectDirectory=/root/Source/java/struts/struts-project, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2d5a1588, java.library.path=/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.111-b14, classworlds.conf=/usr/share/maven/bin/m2.conf, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.pool_size=1, java.ext.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
2017-04-24 12:05:39,719 DEBUG [main] spi.JaccIntegrator (JaccIntegrator.java:80) - Skipping JACC integration as it was not enabled
2017-04-24 12:05:39,745 DEBUG [main] internal.SessionFactoryImpl (SessionFactoryImpl.java:294) - Instantiated session factory
2017-04-24 12:05:39,870 DEBUG [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [com.example.struts2.model.Users] is safe
2017-04-24 12:05:39,871 DEBUG [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.struts2.model.Users
2017-04-24 12:05:39,906 DEBUG [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [com.example.struts2.model.Users] is safe
2017-04-24 12:05:39,907 DEBUG [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.struts2.model.Users
2017-04-24 12:05:40,060 DEBUG [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3598) - Static SQL for entity: com.example.struts2.model.Users
2017-04-24 12:05:40,061 DEBUG [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3603) -  Version select: select id from users where id =?
2017-04-24 12:05:40,061 DEBUG [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3606) -  Snapshot select: select users_.id, users_.password as password2_0_, users_.username as username3_0_ from users users_ where users_.id=?
2017-04-24 12:05:40,062 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Insert 0: insert into users (password, username, id) values (?, ?, ?)
2017-04-24 12:05:40,063 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Update 0: update users set password=?, username=? where id=?
2017-04-24 12:05:40,063 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Delete 0: delete from users where id=?
2017-04-24 12:05:40,064 DEBUG [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3614) -  Identity insert: insert into users (password, username) values (?, ?)
2017-04-24 12:05:40,113 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@644a3add]
2017-04-24 12:05:40,117 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:05:40,118 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:05:40,119 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:05:40,148 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:05:40,161 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:05:40,168 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [NONE]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-24 12:05:40,169 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22a260ff]
2017-04-24 12:05:40,173 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:05:40,174 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:05:40,175 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:05:40,176 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:05:40,177 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:05:40,178 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [READ]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-24 12:05:40,179 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50b734c4]
2017-04-24 12:05:40,180 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:05:40,181 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:05:40,181 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:05:40,182 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:05:40,183 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:05:40,184 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [UPGRADE]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=? for update
2017-04-24 12:05:40,185 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16d0e521]
2017-04-24 12:05:40,186 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:05:40,187 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:05:40,187 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:05:40,188 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:05:40,189 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:05:40,190 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [UPGRADE_NOWAIT]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=? for update
2017-04-24 12:05:40,191 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ab4aa5e]
2017-04-24 12:05:40,192 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:05:40,193 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:05:40,195 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:05:40,196 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:05:40,198 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:05:40,200 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [UPGRADE_SKIPLOCKED]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=? for update
2017-04-24 12:05:40,201 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a7cb3a4]
2017-04-24 12:05:40,201 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:05:40,202 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:05:40,203 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:05:40,204 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:05:40,205 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:05:40,206 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [FORCE]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=? for update
2017-04-24 12:05:40,206 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33e0c716]
2017-04-24 12:05:40,209 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:05:40,210 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:05:40,210 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:05:40,211 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:05:40,213 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:05:40,213 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [PESSIMISTIC_READ]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=? lock in share mode
2017-04-24 12:05:40,214 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6274f21c]
2017-04-24 12:05:40,215 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:05:40,216 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:05:40,216 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:05:40,217 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:05:40,219 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:05:40,219 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [PESSIMISTIC_WRITE]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=? for update
2017-04-24 12:05:40,220 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@237add]
2017-04-24 12:05:40,221 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:05:40,222 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:05:40,222 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:05:40,223 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:05:40,224 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:05:40,226 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [PESSIMISTIC_FORCE_INCREMENT]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=? for update
2017-04-24 12:05:40,227 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@cbd40c1]
2017-04-24 12:05:40,228 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:05:40,228 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:05:40,229 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:05:40,230 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:05:40,231 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:05:40,232 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [OPTIMISTIC]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-24 12:05:40,233 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54c60202]
2017-04-24 12:05:40,234 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:05:40,234 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:05:40,235 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:05:40,236 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:05:40,237 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:05:40,238 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [OPTIMISTIC_FORCE_INCREMENT]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-24 12:05:40,276 DEBUG [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_MERGE on entity com.example.struts2.model.Users: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-24 12:05:40,278 DEBUG [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_REFRESH on entity com.example.struts2.model.Users: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-24 12:05:40,335 DEBUG [main] spi.SchemaManagementToolCoordinator (SchemaManagementToolCoordinator.java:56) - No actions specified; doing nothing
2017-04-24 12:05:40,336 DEBUG [main] internal.JtaPlatformInitiator (JtaPlatformInitiator.java:42) - No JtaPlatform was specified, checking resolver
2017-04-24 12:05:40,338 DEBUG [main] internal.JtaPlatformResolverInitiator (JtaPlatformResolverInitiator.java:33) - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2017-04-24 12:05:40,353 DEBUG [main] internal.StandardJtaPlatformResolver (StandardJtaPlatformResolver.java:102) - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2017-04-24 12:05:40,357 DEBUG [main] spi.NamedQueryRepository (NamedQueryRepository.java:151) - Checking 0 named HQL queries
2017-04-24 12:05:40,358 DEBUG [main] spi.NamedQueryRepository (NamedQueryRepository.java:167) - Checking 0 named SQL queries
2017-04-24 12:05:40,364 DEBUG [main] internal.SessionFactoryRegistry (SessionFactoryRegistry.java:52) - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5df6163a
2017-04-24 12:05:40,369 DEBUG [main] internal.SessionFactoryRegistry (SessionFactoryRegistry.java:74) - Registering SessionFactory: 8a025c62-50b9-43e6-ac6f-eb4176c61022 (<unnamed>)
2017-04-24 12:05:40,370 DEBUG [main] internal.SessionFactoryRegistry (SessionFactoryRegistry.java:81) - Not binding SessionFactory to JNDI, no JNDI name configured
2017-04-24 12:05:55,107 DEBUG [qtp1661803311-16] internal.StatisticsInitiator (StatisticsInitiator.java:82) - Statistics initialized [enabled=false]
2017-04-24 12:05:55,249 INFO  [qtp1661803311-16] action.Login (Login.java:25) - VALIDATE ad 
2017-04-24 12:05:55,258 ERROR [qtp1661803311-16] dispatcher.Dispatcher (Dispatcher.java:599) - Could not find action or result: /Home.action
com.opensymphony.xwork2.config.ConfigurationException: No result defined for action com.example.struts2.action.Login and result input
	at com.opensymphony.xwork2.DefaultActionInvocation.executeResult(DefaultActionInvocation.java:368) ~[struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:270) ~[struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.validator.ValidationInterceptor.doIntercept(ValidationInterceptor.java:260) ~[struts2-core-2.5.8.jar:2.5.8]
	at org.apache.struts2.interceptor.validation.AnnotationValidationInterceptor.doIntercept(AnnotationValidationInterceptor.java:69) ~[struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:97) ~[struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) ~[struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.ConversionErrorInterceptor.doIntercept(ConversionErrorInterceptor.java:139) ~[struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:97) ~[struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) ~[struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.ParametersInterceptor.doIntercept(ParametersInterceptor.java:133) ~[struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:97) ~[struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) ~[struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.ParametersInterceptor.doIntercept(ParametersInterceptor.java:133) ~[struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:97) ~[struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) ~[struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.StaticParametersInterceptor.intercept(StaticParametersInterceptor.java:192) ~[struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) ~[struts2-core-2.5.8.jar:2.5.8]
	at org.apache.struts2.interceptor.MultiselectInterceptor.intercept(MultiselectInterceptor.java:69) ~[struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) ~[struts2-core-2.5.8.jar:2.5.8]
	at org.apache.struts2.interceptor.DateTextFieldInterceptor.intercept(DateTextFieldInterceptor.java:121) ~[struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) ~[struts2-core-2.5.8.jar:2.5.8]
	at org.apache.struts2.interceptor.CheckboxInterceptor.intercept(CheckboxInterceptor.java:88) ~[struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) ~[struts2-core-2.5.8.jar:2.5.8]
	at org.apache.struts2.interceptor.FileUploadInterceptor.intercept(FileUploadInterceptor.java:248) ~[struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) ~[struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.ModelDrivenInterceptor.intercept(ModelDrivenInterceptor.java:99) ~[struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) ~[struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.ScopedModelDrivenInterceptor.intercept(ScopedModelDrivenInterceptor.java:139) ~[struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) ~[struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.ChainingInterceptor.intercept(ChainingInterceptor.java:155) ~[struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) ~[struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.PrepareInterceptor.doIntercept(PrepareInterceptor.java:174) ~[struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:97) ~[struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) ~[struts2-core-2.5.8.jar:2.5.8]
	at org.apache.struts2.interceptor.I18nInterceptor.intercept(I18nInterceptor.java:163) ~[struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) ~[struts2-core-2.5.8.jar:2.5.8]
	at org.apache.struts2.interceptor.ServletConfigInterceptor.intercept(ServletConfigInterceptor.java:171) ~[struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) ~[struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.AliasInterceptor.intercept(AliasInterceptor.java:195) ~[struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) ~[struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.ExceptionMappingInterceptor.intercept(ExceptionMappingInterceptor.java:193) ~[struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) ~[struts2-core-2.5.8.jar:2.5.8]
	at org.apache.struts2.factory.StrutsActionProxy.execute(StrutsActionProxy.java:54) ~[struts2-core-2.5.8.jar:2.5.8]
	at org.apache.struts2.dispatcher.Dispatcher.serviceAction(Dispatcher.java:564) [struts2-core-2.5.8.jar:2.5.8]
	at org.apache.struts2.dispatcher.ExecuteOperations.executeAction(ExecuteOperations.java:81) [struts2-core-2.5.8.jar:2.5.8]
	at org.apache.struts2.dispatcher.filter.StrutsPrepareAndExecuteFilter.doFilter(StrutsPrepareAndExecuteFilter.java:143) [struts2-core-2.5.8.jar:2.5.8]
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652) [jetty-servlet-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585) [jetty-servlet-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143) [jetty-server-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:550) [jetty-security-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:223) [jetty-server-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1128) [jetty-server-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515) [jetty-servlet-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185) [jetty-server-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1062) [jetty-server-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141) [jetty-server-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:215) [jetty-server-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:110) [jetty-server-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:113) [jetty-server-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.server.Server.handle(Server.java:507) [jetty-server-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:284) [jetty-server-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:237) [jetty-server-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:240) [jetty-io-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:93) [jetty-io-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:53) [jetty-io-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceRun.produceAndRun(ExecuteProduceRun.java:191) [jetty-util-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceRun.run(ExecuteProduceRun.java:126) [jetty-util-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:641) [jetty-util-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:559) [jetty-util-9.3.0.M2.jar:9.3.0.M2]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_111]
2017-04-24 12:06:08,130 DEBUG [pool-2-thread-1] internal.PooledConnections (PooledConnections.java:51) - Connection pool now considered primed; min-size will be maintained
2017-04-24 12:20:36,715 DEBUG [main] internal.CoreLogging (CoreLogging.java:28) - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2017-04-24 12:20:36,755 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2017-04-24 12:20:36,765 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2017-04-24 12:20:36,784 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2017-04-24 12:20:37,337 INFO  [main] hibernate.Version (Version.java:45) - HHH000412: Hibernate Core {5.2.9.Final}
2017-04-24 12:20:37,346 INFO  [main] cfg.Environment (Environment.java:213) - HHH000206: hibernate.properties not found
2017-04-24 12:20:37,407 DEBUG [main] internal.JaxbCfgProcessor (JaxbCfgProcessor.java:116) - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2017-04-24 12:20:37,933 DEBUG [main] cfg.Configuration (Configuration.java:724) - Building session factory using internal StandardServiceRegistryBuilder
2017-04-24 12:20:37,953 DEBUG [main] spi.ServiceBinding (ServiceBinding.java:68) - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2017-04-24 12:20:37,957 DEBUG [main] cfg.Configuration (Configuration.java:652) - Building session factory using provided StandardServiceRegistry
2017-04-24 12:20:38,022 DEBUG [main] internal.RegionFactoryInitiator (RegionFactoryInitiator.java:75) - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2017-04-24 12:20:38,047 INFO  [main] java.JavaReflectionManager (JavaReflectionManager.java:66) - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2017-04-24 12:20:38,118 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@334ebcaa
2017-04-24 12:20:38,123 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@334ebcaa
2017-04-24 12:20:38,127 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@334ebcaa
2017-04-24 12:20:38,132 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6c1cfa53
2017-04-24 12:20:38,140 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@37d28f02
2017-04-24 12:20:38,144 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration yes_no -> org.hibernate.type.YesNoType@33f2df51
2017-04-24 12:20:38,154 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@61a91c9b
2017-04-24 12:20:38,157 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@61a91c9b
2017-04-24 12:20:38,165 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@61a91c9b
2017-04-24 12:20:38,175 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration character -> org.hibernate.type.CharacterType@462e1e64
2017-04-24 12:20:38,188 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration char -> org.hibernate.type.CharacterType@462e1e64
2017-04-24 12:20:38,199 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@462e1e64
2017-04-24 12:20:38,207 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@22c75c01
2017-04-24 12:20:38,208 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@22c75c01
2017-04-24 12:20:38,208 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@22c75c01
2017-04-24 12:20:38,214 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration integer -> org.hibernate.type.IntegerType@2f0ed952
2017-04-24 12:20:38,217 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration int -> org.hibernate.type.IntegerType@2f0ed952
2017-04-24 12:20:38,222 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2f0ed952
2017-04-24 12:20:38,230 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@4832f03b
2017-04-24 12:20:38,233 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@4832f03b
2017-04-24 12:20:38,246 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4832f03b
2017-04-24 12:20:38,251 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@e11ecfa
2017-04-24 12:20:38,257 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@e11ecfa
2017-04-24 12:20:38,258 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@e11ecfa
2017-04-24 12:20:38,265 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@43acd79e
2017-04-24 12:20:38,271 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@43acd79e
2017-04-24 12:20:38,275 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@43acd79e
2017-04-24 12:20:38,284 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@23a918c7
2017-04-24 12:20:38,288 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@23a918c7
2017-04-24 12:20:38,294 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1f67761b
2017-04-24 12:20:38,298 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1f67761b
2017-04-24 12:20:38,306 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration string -> org.hibernate.type.StringType@77ab22be
2017-04-24 12:20:38,310 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.String -> org.hibernate.type.StringType@77ab22be
2017-04-24 12:20:38,316 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6ca372ef
2017-04-24 12:20:38,324 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@280d4882
2017-04-24 12:20:38,330 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration url -> org.hibernate.type.UrlType@56b859a6
2017-04-24 12:20:38,333 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@56b859a6
2017-04-24 12:20:38,346 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Duration -> org.hibernate.type.DurationType@58015e56
2017-04-24 12:20:38,350 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@58015e56
2017-04-24 12:20:38,423 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Instant -> org.hibernate.type.InstantType@2db4ad1
2017-04-24 12:20:38,429 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2db4ad1
2017-04-24 12:20:38,442 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@6fc1020a
2017-04-24 12:20:38,443 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@6fc1020a
2017-04-24 12:20:38,449 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7dffda8b
2017-04-24 12:20:38,450 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7dffda8b
2017-04-24 12:20:38,459 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@66933239
2017-04-24 12:20:38,460 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@66933239
2017-04-24 12:20:38,465 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4f327096
2017-04-24 12:20:38,466 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4f327096
2017-04-24 12:20:38,471 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@41a374be
2017-04-24 12:20:38,472 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@41a374be
2017-04-24 12:20:38,491 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7be1ce6a
2017-04-24 12:20:38,492 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7be1ce6a
2017-04-24 12:20:38,497 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration date -> org.hibernate.type.DateType@2ddb3ae8
2017-04-24 12:20:38,499 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2ddb3ae8
2017-04-24 12:20:38,505 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration time -> org.hibernate.type.TimeType@6fbc1bb
2017-04-24 12:20:38,506 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6fbc1bb
2017-04-24 12:20:38,509 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration timestamp -> org.hibernate.type.TimestampType@48df4071
2017-04-24 12:20:38,511 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@48df4071
2017-04-24 12:20:38,511 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@48df4071
2017-04-24 12:20:38,518 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@67507df
2017-04-24 12:20:38,524 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration calendar -> org.hibernate.type.CalendarType@33feb805
2017-04-24 12:20:38,525 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@33feb805
2017-04-24 12:20:38,526 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@33feb805
2017-04-24 12:20:38,528 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@34332b8d
2017-04-24 12:20:38,532 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration locale -> org.hibernate.type.LocaleType@7cca01a8
2017-04-24 12:20:38,533 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7cca01a8
2017-04-24 12:20:38,537 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration currency -> org.hibernate.type.CurrencyType@45e9b12d
2017-04-24 12:20:38,538 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@45e9b12d
2017-04-24 12:20:38,541 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@329548d0
2017-04-24 12:20:38,543 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@329548d0
2017-04-24 12:20:38,548 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration class -> org.hibernate.type.ClassType@49d30c6f
2017-04-24 12:20:38,549 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@49d30c6f
2017-04-24 12:20:38,555 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1c7350b0
2017-04-24 12:20:38,557 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1c7350b0
2017-04-24 12:20:38,559 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@50448409
2017-04-24 12:20:38,563 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration binary -> org.hibernate.type.BinaryType@30b975ad
2017-04-24 12:20:38,564 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte[] -> org.hibernate.type.BinaryType@30b975ad
2017-04-24 12:20:38,565 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [B -> org.hibernate.type.BinaryType@30b975ad
2017-04-24 12:20:38,570 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@ea52184
2017-04-24 12:20:38,573 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@ea52184
2017-04-24 12:20:38,574 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@ea52184
2017-04-24 12:20:38,578 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration row_version -> org.hibernate.type.RowVersionType@7f608e21
2017-04-24 12:20:38,582 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration image -> org.hibernate.type.ImageType@66236a0a
2017-04-24 12:20:38,587 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration characters -> org.hibernate.type.CharArrayType@795f8317
2017-04-24 12:20:38,588 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration char[] -> org.hibernate.type.CharArrayType@795f8317
2017-04-24 12:20:38,591 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [C -> org.hibernate.type.CharArrayType@795f8317
2017-04-24 12:20:38,595 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@157ec23b
2017-04-24 12:20:38,595 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@157ec23b
2017-04-24 12:20:38,596 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@157ec23b
2017-04-24 12:20:38,600 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration text -> org.hibernate.type.TextType@47ac613b
2017-04-24 12:20:38,604 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ntext -> org.hibernate.type.NTextType@134ff8f8
2017-04-24 12:20:38,617 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration blob -> org.hibernate.type.BlobType@1f3b992
2017-04-24 12:20:38,618 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1f3b992
2017-04-24 12:20:38,620 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7beae796
2017-04-24 12:20:38,631 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration clob -> org.hibernate.type.ClobType@2eed37f4
2017-04-24 12:20:38,632 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2eed37f4
2017-04-24 12:20:38,641 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration nclob -> org.hibernate.type.NClobType@13dbed9e
2017-04-24 12:20:38,642 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@13dbed9e
2017-04-24 12:20:38,644 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1d50a7ca
2017-04-24 12:20:38,646 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3003e580
2017-04-24 12:20:38,650 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration serializable -> org.hibernate.type.SerializableType@5f174dd2
2017-04-24 12:20:38,659 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration object -> org.hibernate.type.ObjectType@326e0b8e
2017-04-24 12:20:38,660 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@326e0b8e
2017-04-24 12:20:38,662 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@34585ac9
2017-04-24 12:20:38,663 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@76a805b7
2017-04-24 12:20:38,664 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@15f35bc3
2017-04-24 12:20:38,665 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@167381c7
2017-04-24 12:20:38,668 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@608b1fd2
2017-04-24 12:20:38,670 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@56382bc9
2017-04-24 12:20:38,671 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@591a4f8e
2017-04-24 12:20:38,672 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@53ed80d3
2017-04-24 12:20:38,705 WARN  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:70) - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2017-04-24 12:20:38,709 DEBUG [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:154) - No driver class specified
2017-04-24 12:20:38,710 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:126) - HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306/strutsproject]
2017-04-24 12:20:38,712 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:132) - HHH10001001: Connection properties: {user=root, password=}
2017-04-24 12:20:38,721 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:140) - HHH10001003: Autocommit mode: false
2017-04-24 12:20:38,731 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:384) - Initializing Connection pool with 1 Connections
2017-04-24 12:20:38,732 INFO  [main] internal.PooledConnections (PooledConnections.java:41) - HHH000115: Hibernate connection pool size: 1 (min=1)
2017-04-24 12:20:39,331 DEBUG [main] internal.JdbcEnvironmentInitiator (JdbcEnvironmentInitiator.java:72) - Database ->
       name : MySQL
    version : 5.6.30-1
      major : 5
      minor : 6
2017-04-24 12:20:39,333 DEBUG [main] internal.JdbcEnvironmentInitiator (JdbcEnvironmentInitiator.java:83) - Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.9 ( Revision: ${svn.Revision} )
      major : 5
      minor : 1
2017-04-24 12:20:39,337 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:389) - JDBC version : 3.0
2017-04-24 12:20:39,371 INFO  [main] dialect.Dialect (Dialect.java:157) - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2017-04-24 12:20:39,464 DEBUG [main] spi.IdentifierHelperBuilder (IdentifierHelperBuilder.java:117) - JDBC driver metadata reported database stores quoted identifiers in more than one case
2017-04-24 12:20:39,476 DEBUG [main] spi.IdentifierHelperBuilder (IdentifierHelperBuilder.java:191) - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2017-04-24 12:20:39,512 INFO  [main] internal.LobCreatorBuilderImpl (LobCreatorBuilderImpl.java:98) - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2017-04-24 12:20:39,579 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2017-04-24 12:20:39,581 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2017-04-24 12:20:39,583 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2017-04-24 12:20:39,584 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2017-04-24 12:20:39,586 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2017-04-24 12:20:39,588 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2017-04-24 12:20:39,591 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2017-04-24 12:20:39,594 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2017-04-24 12:20:39,597 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2017-04-24 12:20:39,599 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2017-04-24 12:20:39,601 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2017-04-24 12:20:39,603 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2017-04-24 12:20:39,604 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2017-04-24 12:20:39,606 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2017-04-24 12:20:40,148 DEBUG [main] relational.Namespace (Namespace.java:47) - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2017-04-24 12:20:40,220 DEBUG [main] cfg.AnnotationBinder (AnnotationBinder.java:511) - Binding entity from annotated class: com.example.struts2.model.Users
2017-04-24 12:20:40,279 DEBUG [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2017-04-24 12:20:40,295 DEBUG [main] annotations.EntityBinder (EntityBinder.java:419) - Import with entity name users
2017-04-24 12:20:40,311 DEBUG [main] annotations.EntityBinder (EntityBinder.java:695) - Bind entity com.example.struts2.model.Users on table users
2017-04-24 12:20:40,388 DEBUG [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
2017-04-24 12:20:40,398 DEBUG [main] annotations.PropertyBinder (PropertyBinder.java:174) - MetadataSourceProcessor property id with lazy=false
2017-04-24 12:20:40,405 DEBUG [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.example.struts2.model.Users:id]
2017-04-24 12:20:40,410 DEBUG [main] annotations.SimpleValueBinder (SimpleValueBinder.java:411) - building SimpleValue for id
2017-04-24 12:20:40,417 DEBUG [main] annotations.PropertyBinder (PropertyBinder.java:265) - Building property id
2017-04-24 12:20:40,426 DEBUG [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2017-04-24 12:20:40,427 DEBUG [main] annotations.PropertyBinder (PropertyBinder.java:174) - MetadataSourceProcessor property password with lazy=false
2017-04-24 12:20:40,428 DEBUG [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.example.struts2.model.Users:password]
2017-04-24 12:20:40,429 DEBUG [main] annotations.SimpleValueBinder (SimpleValueBinder.java:411) - building SimpleValue for password
2017-04-24 12:20:40,429 DEBUG [main] annotations.PropertyBinder (PropertyBinder.java:265) - Building property password
2017-04-24 12:20:40,434 DEBUG [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=false}
2017-04-24 12:20:40,443 DEBUG [main] annotations.PropertyBinder (PropertyBinder.java:174) - MetadataSourceProcessor property username with lazy=false
2017-04-24 12:20:40,444 DEBUG [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.example.struts2.model.Users:username]
2017-04-24 12:20:40,444 DEBUG [main] annotations.SimpleValueBinder (SimpleValueBinder.java:411) - building SimpleValue for username
2017-04-24 12:20:40,445 DEBUG [main] annotations.PropertyBinder (PropertyBinder.java:265) - Building property username
2017-04-24 12:20:40,451 DEBUG [main] annotations.SimpleValueBinder (SimpleValueBinder.java:456) - Starting fillSimpleValue for id
2017-04-24 12:20:40,452 DEBUG [main] annotations.SimpleValueBinder (SimpleValueBinder.java:456) - Starting fillSimpleValue for password
2017-04-24 12:20:40,453 DEBUG [main] annotations.SimpleValueBinder (SimpleValueBinder.java:456) - Starting fillSimpleValue for username
2017-04-24 12:20:40,457 DEBUG [main] mapping.PrimaryKey (PrimaryKey.java:35) - Forcing column [id] to be non-null as it is part of the primary key for table [users]
2017-04-24 12:20:40,552 DEBUG [main] internal.SessionFactoryImpl (SessionFactoryImpl.java:199) - Building session factory
2017-04-24 12:20:40,555 DEBUG [main] cfg.Settings (Settings.java:69) - SessionFactory name : null
2017-04-24 12:20:40,558 DEBUG [main] cfg.Settings (Settings.java:70) - Automatic flush during beforeCompletion(): enabled
2017-04-24 12:20:40,559 DEBUG [main] cfg.Settings (Settings.java:71) - Automatic session close at end of transaction: disabled
2017-04-24 12:20:40,560 DEBUG [main] cfg.Settings (Settings.java:73) - Statistics: disabled
2017-04-24 12:20:40,560 DEBUG [main] cfg.Settings (Settings.java:75) - Deleted entity synthetic identifier rollback: disabled
2017-04-24 12:20:40,561 DEBUG [main] cfg.Settings (Settings.java:76) - Default entity-mode: pojo
2017-04-24 12:20:40,561 DEBUG [main] cfg.Settings (Settings.java:77) - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2017-04-24 12:20:40,562 DEBUG [main] cfg.Settings (Settings.java:78) - Allow initialization of lazy state outside session : disabled
2017-04-24 12:20:40,565 DEBUG [main] cfg.Settings (Settings.java:80) - Using BatchFetchStyle : LEGACY
2017-04-24 12:20:40,566 DEBUG [main] cfg.Settings (Settings.java:81) - Default batch fetch size: -1
2017-04-24 12:20:40,568 DEBUG [main] cfg.Settings (Settings.java:82) - Maximum outer join fetch depth: 2
2017-04-24 12:20:40,569 DEBUG [main] cfg.Settings (Settings.java:83) - Default null ordering: NONE
2017-04-24 12:20:40,569 DEBUG [main] cfg.Settings (Settings.java:84) - Order SQL updates by primary key: disabled
2017-04-24 12:20:40,570 DEBUG [main] cfg.Settings (Settings.java:85) - Order SQL inserts for batching: disabled
2017-04-24 12:20:40,570 DEBUG [main] cfg.Settings (Settings.java:87) - multi-tenancy strategy : NONE
2017-04-24 12:20:40,571 DEBUG [main] cfg.Settings (Settings.java:89) - JTA Track by Thread: enabled
2017-04-24 12:20:40,571 DEBUG [main] cfg.Settings (Settings.java:91) - Query language substitutions: {}
2017-04-24 12:20:40,572 DEBUG [main] cfg.Settings (Settings.java:92) - JPA query language strict compliance: disabled
2017-04-24 12:20:40,572 DEBUG [main] cfg.Settings (Settings.java:93) - Named query checking : enabled
2017-04-24 12:20:40,572 DEBUG [main] cfg.Settings (Settings.java:95) - Second-level cache: enabled
2017-04-24 12:20:40,573 DEBUG [main] cfg.Settings (Settings.java:96) - Second-level query cache: disabled
2017-04-24 12:20:40,573 DEBUG [main] cfg.Settings (Settings.java:97) - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@65ef48f2
2017-04-24 12:20:40,574 DEBUG [main] cfg.Settings (Settings.java:98) - Second-level cache region prefix: null
2017-04-24 12:20:40,574 DEBUG [main] cfg.Settings (Settings.java:99) - Optimize second-level cache for minimal puts: disabled
2017-04-24 12:20:40,574 DEBUG [main] cfg.Settings (Settings.java:100) - Structured second-level cache entries: disabled
2017-04-24 12:20:40,575 DEBUG [main] cfg.Settings (Settings.java:101) - Second-level cache direct-reference entries: disabled
2017-04-24 12:20:40,575 DEBUG [main] cfg.Settings (Settings.java:102) - Automatic eviction of collection cache: disabled
2017-04-24 12:20:40,578 DEBUG [main] cfg.Settings (Settings.java:104) - JDBC batch size: 15
2017-04-24 12:20:40,578 DEBUG [main] cfg.Settings (Settings.java:105) - JDBC batch updates for versioned data: enabled
2017-04-24 12:20:40,579 DEBUG [main] cfg.Settings (Settings.java:106) - Scrollable result sets: enabled
2017-04-24 12:20:40,579 DEBUG [main] cfg.Settings (Settings.java:107) - Wrap result sets: disabled
2017-04-24 12:20:40,580 DEBUG [main] cfg.Settings (Settings.java:108) - JDBC3 getGeneratedKeys(): enabled
2017-04-24 12:20:40,580 DEBUG [main] cfg.Settings (Settings.java:109) - JDBC result set fetch size: null
2017-04-24 12:20:40,581 DEBUG [main] cfg.Settings (Settings.java:110) - Connection release mode: AFTER_TRANSACTION
2017-04-24 12:20:40,581 DEBUG [main] cfg.Settings (Settings.java:111) - Generate SQL with comments: disabled
2017-04-24 12:20:40,795 DEBUG [main] internal.SessionFactoryImpl (SessionFactoryImpl.java:254) - Session factory constructed with filter configurations : {}
2017-04-24 12:20:40,795 DEBUG [main] internal.SessionFactoryImpl (SessionFactoryImpl.java:255) - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, java.vendor.url=http://java.oracle.com/, user.timezone=Asia/Jakarta, os.name=Linux, java.vm.specification.version=1.8, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, maven.home=/usr/share/maven, sun.cpu.endian=little, user.home=/root, user.language=en, java.specification.vendor=Oracle Corporation, java.home=/usr/lib/jvm/java-8-openjdk-amd64/jre, file.separator=/, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, sun.boot.class.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/classes, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_111-8u111-b14-3-b14, user.name=root, path.separator=:, securerandom.source=file:/dev/./urandom, hibernate.connection.username=root, os.version=4.8.0-kali2-amd64, java.endorsed.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/endorsed, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/strutsproject, file.encoding=UTF-8, guice.disable.misplaced.annotation.check=true, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=/tmp, java.version=1.8.0_111, user.dir=/root/Source/java/struts/struts-project, os.arch=amd64, maven.multiModuleProjectDirectory=/root/Source/java/struts/struts-project, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@47b33e07, java.library.path=/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.111-b14, classworlds.conf=/usr/share/maven/bin/m2.conf, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.pool_size=1, java.ext.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
2017-04-24 12:20:40,824 DEBUG [main] spi.JaccIntegrator (JaccIntegrator.java:80) - Skipping JACC integration as it was not enabled
2017-04-24 12:20:40,842 DEBUG [main] internal.SessionFactoryImpl (SessionFactoryImpl.java:294) - Instantiated session factory
2017-04-24 12:20:40,954 DEBUG [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [com.example.struts2.model.Users] is safe
2017-04-24 12:20:40,955 DEBUG [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.struts2.model.Users
2017-04-24 12:20:40,991 DEBUG [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [com.example.struts2.model.Users] is safe
2017-04-24 12:20:40,992 DEBUG [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.struts2.model.Users
2017-04-24 12:20:41,141 DEBUG [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3598) - Static SQL for entity: com.example.struts2.model.Users
2017-04-24 12:20:41,142 DEBUG [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3603) -  Version select: select id from users where id =?
2017-04-24 12:20:41,142 DEBUG [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3606) -  Snapshot select: select users_.id, users_.password as password2_0_, users_.username as username3_0_ from users users_ where users_.id=?
2017-04-24 12:20:41,143 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Insert 0: insert into users (password, username, id) values (?, ?, ?)
2017-04-24 12:20:41,143 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Update 0: update users set password=?, username=? where id=?
2017-04-24 12:20:41,144 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Delete 0: delete from users where id=?
2017-04-24 12:20:41,144 DEBUG [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3614) -  Identity insert: insert into users (password, username) values (?, ?)
2017-04-24 12:20:41,194 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c5df615]
2017-04-24 12:20:41,198 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:20:41,199 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:20:41,200 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:20:41,231 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:20:41,243 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:20:41,249 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [NONE]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-24 12:20:41,250 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18d47df0]
2017-04-24 12:20:41,251 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:20:41,252 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:20:41,253 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:20:41,254 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:20:41,255 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:20:41,256 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [READ]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-24 12:20:41,257 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@697a0948]
2017-04-24 12:20:41,258 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:20:41,259 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:20:41,259 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:20:41,260 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:20:41,262 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:20:41,263 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [UPGRADE]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=? for update
2017-04-24 12:20:41,263 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4776e209]
2017-04-24 12:20:41,264 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:20:41,265 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:20:41,265 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:20:41,266 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:20:41,268 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:20:41,269 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [UPGRADE_NOWAIT]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=? for update
2017-04-24 12:20:41,270 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f536481]
2017-04-24 12:20:41,271 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:20:41,271 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:20:41,272 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:20:41,273 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:20:41,274 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:20:41,275 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [UPGRADE_SKIPLOCKED]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=? for update
2017-04-24 12:20:41,276 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22a260ff]
2017-04-24 12:20:41,276 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:20:41,277 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:20:41,278 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:20:41,278 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:20:41,280 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:20:41,280 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [FORCE]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=? for update
2017-04-24 12:20:41,281 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50b734c4]
2017-04-24 12:20:41,282 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:20:41,282 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:20:41,283 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:20:41,284 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:20:41,286 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:20:41,287 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [PESSIMISTIC_READ]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=? lock in share mode
2017-04-24 12:20:41,287 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16d0e521]
2017-04-24 12:20:41,288 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:20:41,289 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:20:41,289 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:20:41,290 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:20:41,291 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:20:41,292 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [PESSIMISTIC_WRITE]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=? for update
2017-04-24 12:20:41,293 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ab4aa5e]
2017-04-24 12:20:41,294 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:20:41,294 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:20:41,295 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:20:41,296 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:20:41,297 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:20:41,298 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [PESSIMISTIC_FORCE_INCREMENT]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=? for update
2017-04-24 12:20:41,298 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a7cb3a4]
2017-04-24 12:20:41,299 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:20:41,300 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:20:41,301 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:20:41,301 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:20:41,303 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:20:41,304 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [OPTIMISTIC]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-24 12:20:41,305 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33e0c716]
2017-04-24 12:20:41,305 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:20:41,306 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:20:41,307 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:20:41,308 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:20:41,309 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:20:41,310 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [OPTIMISTIC_FORCE_INCREMENT]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-24 12:20:41,349 DEBUG [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_MERGE on entity com.example.struts2.model.Users: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-24 12:20:41,350 DEBUG [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_REFRESH on entity com.example.struts2.model.Users: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-24 12:20:41,409 DEBUG [main] spi.SchemaManagementToolCoordinator (SchemaManagementToolCoordinator.java:56) - No actions specified; doing nothing
2017-04-24 12:20:41,410 DEBUG [main] internal.JtaPlatformInitiator (JtaPlatformInitiator.java:42) - No JtaPlatform was specified, checking resolver
2017-04-24 12:20:41,412 DEBUG [main] internal.JtaPlatformResolverInitiator (JtaPlatformResolverInitiator.java:33) - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2017-04-24 12:20:41,428 DEBUG [main] internal.StandardJtaPlatformResolver (StandardJtaPlatformResolver.java:102) - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2017-04-24 12:20:41,432 DEBUG [main] spi.NamedQueryRepository (NamedQueryRepository.java:151) - Checking 0 named HQL queries
2017-04-24 12:20:41,433 DEBUG [main] spi.NamedQueryRepository (NamedQueryRepository.java:167) - Checking 0 named SQL queries
2017-04-24 12:20:41,439 DEBUG [main] internal.SessionFactoryRegistry (SessionFactoryRegistry.java:52) - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@a90e2c1
2017-04-24 12:20:41,445 DEBUG [main] internal.SessionFactoryRegistry (SessionFactoryRegistry.java:74) - Registering SessionFactory: fb55b22b-1b63-433a-86a4-fac751c2fe90 (<unnamed>)
2017-04-24 12:20:41,446 DEBUG [main] internal.SessionFactoryRegistry (SessionFactoryRegistry.java:81) - Not binding SessionFactory to JNDI, no JNDI name configured
2017-04-24 12:20:59,843 DEBUG [qtp2096194236-18] internal.StatisticsInitiator (StatisticsInitiator.java:82) - Statistics initialized [enabled=false]
2017-04-24 12:20:59,966 INFO  [qtp2096194236-18] action.Login (Login.java:25) - VALIDATE admin admin
2017-04-24 12:20:59,976 DEBUG [qtp2096194236-18] internal.TransactionImpl (TransactionImpl.java:55) - begin
2017-04-24 12:21:00,062 DEBUG [qtp2096194236-18] internal.QueryTranslatorFactoryInitiator (QueryTranslatorFactoryInitiator.java:45) - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@5e0602a5
2017-04-24 12:21:00,067 INFO  [qtp2096194236-18] internal.QueryTranslatorFactoryInitiator (QueryTranslatorFactoryInitiator.java:47) - HHH000397: Using ASTQueryTranslatorFactory
2017-04-24 12:21:00,205 DEBUG [qtp2096194236-18] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:282) - parse() - HQL: from User where username = :username and password = :password
2017-04-24 12:21:00,249 DEBUG [qtp2096194236-18] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:300) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[IDENT] Node: 'User'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[IDENT] Node: 'username'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'username'
          \-[EQ] Node: '='
             +-[IDENT] Node: 'password'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'password'

2017-04-24 12:21:00,252 DEBUG [qtp2096194236-18] ast.ErrorCounter (ErrorCounter.java:95) - throwQueryException() : no errors
2017-04-24 12:21:00,348 DEBUG [qtp2096194236-18] antlr.HqlSqlBaseWalker (HqlSqlBaseWalker.java:124) - select << begin [level=1, statement=select]
2017-04-24 12:22:22,242 DEBUG [main] internal.CoreLogging (CoreLogging.java:28) - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2017-04-24 12:22:22,275 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2017-04-24 12:22:22,282 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2017-04-24 12:22:22,306 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2017-04-24 12:22:22,711 INFO  [main] hibernate.Version (Version.java:45) - HHH000412: Hibernate Core {5.2.9.Final}
2017-04-24 12:22:22,721 INFO  [main] cfg.Environment (Environment.java:213) - HHH000206: hibernate.properties not found
2017-04-24 12:22:22,771 DEBUG [main] internal.JaxbCfgProcessor (JaxbCfgProcessor.java:116) - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2017-04-24 12:22:23,226 DEBUG [main] cfg.Configuration (Configuration.java:724) - Building session factory using internal StandardServiceRegistryBuilder
2017-04-24 12:22:23,241 DEBUG [main] spi.ServiceBinding (ServiceBinding.java:68) - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2017-04-24 12:22:23,242 DEBUG [main] cfg.Configuration (Configuration.java:652) - Building session factory using provided StandardServiceRegistry
2017-04-24 12:22:23,287 DEBUG [main] internal.RegionFactoryInitiator (RegionFactoryInitiator.java:75) - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2017-04-24 12:22:23,309 INFO  [main] java.JavaReflectionManager (JavaReflectionManager.java:66) - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2017-04-24 12:22:23,367 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@17947e6d
2017-04-24 12:22:23,371 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@17947e6d
2017-04-24 12:22:23,374 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@17947e6d
2017-04-24 12:22:23,380 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@123d7057
2017-04-24 12:22:23,385 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@32fa809f
2017-04-24 12:22:23,388 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration yes_no -> org.hibernate.type.YesNoType@68ee3b6d
2017-04-24 12:22:23,393 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@19a31b9d
2017-04-24 12:22:23,395 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@19a31b9d
2017-04-24 12:22:23,396 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@19a31b9d
2017-04-24 12:22:23,399 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration character -> org.hibernate.type.CharacterType@334ebcaa
2017-04-24 12:22:23,400 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration char -> org.hibernate.type.CharacterType@334ebcaa
2017-04-24 12:22:23,401 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@334ebcaa
2017-04-24 12:22:23,405 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@52b06bef
2017-04-24 12:22:23,406 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@52b06bef
2017-04-24 12:22:23,407 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@52b06bef
2017-04-24 12:22:23,410 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration integer -> org.hibernate.type.IntegerType@37d28f02
2017-04-24 12:22:23,411 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration int -> org.hibernate.type.IntegerType@37d28f02
2017-04-24 12:22:23,412 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@37d28f02
2017-04-24 12:22:23,416 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@f9f3928
2017-04-24 12:22:23,417 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@f9f3928
2017-04-24 12:22:23,418 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@f9f3928
2017-04-24 12:22:23,421 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@69afa141
2017-04-24 12:22:23,422 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@69afa141
2017-04-24 12:22:23,423 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@69afa141
2017-04-24 12:22:23,427 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@46e64760
2017-04-24 12:22:23,428 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@46e64760
2017-04-24 12:22:23,428 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@46e64760
2017-04-24 12:22:23,432 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@18371d89
2017-04-24 12:22:23,433 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@18371d89
2017-04-24 12:22:23,436 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@68565bc7
2017-04-24 12:22:23,437 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@68565bc7
2017-04-24 12:22:23,440 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration string -> org.hibernate.type.StringType@70d63e05
2017-04-24 12:22:23,441 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.String -> org.hibernate.type.StringType@70d63e05
2017-04-24 12:22:23,445 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@38830ea
2017-04-24 12:22:23,448 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@38f77cd9
2017-04-24 12:22:23,451 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration url -> org.hibernate.type.UrlType@5984feef
2017-04-24 12:22:23,452 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5984feef
2017-04-24 12:22:23,456 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Duration -> org.hibernate.type.DurationType@204abeff
2017-04-24 12:22:23,457 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@204abeff
2017-04-24 12:22:23,498 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Instant -> org.hibernate.type.InstantType@3456558
2017-04-24 12:22:23,499 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3456558
2017-04-24 12:22:23,504 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@47b11ec7
2017-04-24 12:22:23,505 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@47b11ec7
2017-04-24 12:22:23,510 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@332bcab0
2017-04-24 12:22:23,511 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@332bcab0
2017-04-24 12:22:23,516 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7da31a40
2017-04-24 12:22:23,517 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7da31a40
2017-04-24 12:22:23,521 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@f1f7db2
2017-04-24 12:22:23,522 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@f1f7db2
2017-04-24 12:22:23,527 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@2513a118
2017-04-24 12:22:23,528 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@2513a118
2017-04-24 12:22:23,542 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2f7efd0b
2017-04-24 12:22:23,543 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2f7efd0b
2017-04-24 12:22:23,547 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration date -> org.hibernate.type.DateType@d2291de
2017-04-24 12:22:23,549 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@d2291de
2017-04-24 12:22:23,552 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration time -> org.hibernate.type.TimeType@1e236278
2017-04-24 12:22:23,554 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1e236278
2017-04-24 12:22:23,557 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration timestamp -> org.hibernate.type.TimestampType@4d6ccc97
2017-04-24 12:22:23,558 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4d6ccc97
2017-04-24 12:22:23,559 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4d6ccc97
2017-04-24 12:22:23,565 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@436bd4df
2017-04-24 12:22:23,568 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration calendar -> org.hibernate.type.CalendarType@67f77f6e
2017-04-24 12:22:23,569 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@67f77f6e
2017-04-24 12:22:23,570 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@67f77f6e
2017-04-24 12:22:23,573 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3119cf6f
2017-04-24 12:22:23,576 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration locale -> org.hibernate.type.LocaleType@3481ff98
2017-04-24 12:22:23,577 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3481ff98
2017-04-24 12:22:23,580 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration currency -> org.hibernate.type.CurrencyType@732f6050
2017-04-24 12:22:23,581 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@732f6050
2017-04-24 12:22:23,584 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@5f96f6a2
2017-04-24 12:22:23,585 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5f96f6a2
2017-04-24 12:22:23,588 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration class -> org.hibernate.type.ClassType@341b13a8
2017-04-24 12:22:23,589 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@341b13a8
2017-04-24 12:22:23,593 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6f8aba08
2017-04-24 12:22:23,594 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6f8aba08
2017-04-24 12:22:23,596 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7cca01a8
2017-04-24 12:22:23,600 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration binary -> org.hibernate.type.BinaryType@45e9b12d
2017-04-24 12:22:23,601 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte[] -> org.hibernate.type.BinaryType@45e9b12d
2017-04-24 12:22:23,601 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [B -> org.hibernate.type.BinaryType@45e9b12d
2017-04-24 12:22:23,604 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@329548d0
2017-04-24 12:22:23,606 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@329548d0
2017-04-24 12:22:23,606 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@329548d0
2017-04-24 12:22:23,609 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration row_version -> org.hibernate.type.RowVersionType@49d30c6f
2017-04-24 12:22:23,612 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration image -> org.hibernate.type.ImageType@3bed3315
2017-04-24 12:22:23,615 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration characters -> org.hibernate.type.CharArrayType@55651434
2017-04-24 12:22:23,616 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration char[] -> org.hibernate.type.CharArrayType@55651434
2017-04-24 12:22:23,617 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [C -> org.hibernate.type.CharArrayType@55651434
2017-04-24 12:22:23,621 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@37ad042b
2017-04-24 12:22:23,622 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@37ad042b
2017-04-24 12:22:23,622 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@37ad042b
2017-04-24 12:22:23,625 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration text -> org.hibernate.type.TextType@470d183
2017-04-24 12:22:23,628 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ntext -> org.hibernate.type.NTextType@3ddeaa5f
2017-04-24 12:22:23,637 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration blob -> org.hibernate.type.BlobType@134ff8f8
2017-04-24 12:22:23,638 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@134ff8f8
2017-04-24 12:22:23,640 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4db60246
2017-04-24 12:22:23,649 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration clob -> org.hibernate.type.ClobType@52bf7bf6
2017-04-24 12:22:23,650 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@52bf7bf6
2017-04-24 12:22:23,657 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration nclob -> org.hibernate.type.NClobType@44be69aa
2017-04-24 12:22:23,659 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@44be69aa
2017-04-24 12:22:23,660 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@551e4c6d
2017-04-24 12:22:23,662 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2eed37f4
2017-04-24 12:22:23,666 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration serializable -> org.hibernate.type.SerializableType@3f36e8d1
2017-04-24 12:22:23,673 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration object -> org.hibernate.type.ObjectType@67531e3a
2017-04-24 12:22:23,674 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@67531e3a
2017-04-24 12:22:23,676 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@51ab1ee3
2017-04-24 12:22:23,677 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2e766822
2017-04-24 12:22:23,677 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3003e580
2017-04-24 12:22:23,678 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@28757abd
2017-04-24 12:22:23,679 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@21a02556
2017-04-24 12:22:23,679 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3c8a7e38
2017-04-24 12:22:23,680 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@138aa3cc
2017-04-24 12:22:23,680 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@10a98392
2017-04-24 12:22:23,721 WARN  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:70) - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2017-04-24 12:22:23,726 DEBUG [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:154) - No driver class specified
2017-04-24 12:22:23,731 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:126) - HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306/strutsproject]
2017-04-24 12:22:23,735 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:132) - HHH10001001: Connection properties: {user=root, password=}
2017-04-24 12:22:23,748 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:140) - HHH10001003: Autocommit mode: false
2017-04-24 12:22:23,760 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:384) - Initializing Connection pool with 1 Connections
2017-04-24 12:22:23,764 INFO  [main] internal.PooledConnections (PooledConnections.java:41) - HHH000115: Hibernate connection pool size: 1 (min=1)
2017-04-24 12:22:24,388 DEBUG [main] internal.JdbcEnvironmentInitiator (JdbcEnvironmentInitiator.java:72) - Database ->
       name : MySQL
    version : 5.6.30-1
      major : 5
      minor : 6
2017-04-24 12:22:24,392 DEBUG [main] internal.JdbcEnvironmentInitiator (JdbcEnvironmentInitiator.java:83) - Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.9 ( Revision: ${svn.Revision} )
      major : 5
      minor : 1
2017-04-24 12:22:24,397 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:389) - JDBC version : 3.0
2017-04-24 12:22:24,426 INFO  [main] dialect.Dialect (Dialect.java:157) - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2017-04-24 12:22:24,557 DEBUG [main] spi.IdentifierHelperBuilder (IdentifierHelperBuilder.java:117) - JDBC driver metadata reported database stores quoted identifiers in more than one case
2017-04-24 12:22:24,571 DEBUG [main] spi.IdentifierHelperBuilder (IdentifierHelperBuilder.java:191) - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2017-04-24 12:22:24,594 INFO  [main] internal.LobCreatorBuilderImpl (LobCreatorBuilderImpl.java:98) - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2017-04-24 12:22:24,686 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2017-04-24 12:22:24,691 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2017-04-24 12:22:24,695 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2017-04-24 12:22:24,699 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2017-04-24 12:22:24,703 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2017-04-24 12:22:24,708 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2017-04-24 12:22:24,715 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2017-04-24 12:22:24,720 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2017-04-24 12:22:24,727 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2017-04-24 12:22:24,732 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2017-04-24 12:22:24,737 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2017-04-24 12:22:24,744 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2017-04-24 12:22:24,748 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2017-04-24 12:22:24,753 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2017-04-24 12:22:25,234 DEBUG [main] relational.Namespace (Namespace.java:47) - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2017-04-24 12:22:25,313 DEBUG [main] cfg.AnnotationBinder (AnnotationBinder.java:511) - Binding entity from annotated class: com.example.struts2.model.Users
2017-04-24 12:22:25,377 DEBUG [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2017-04-24 12:22:25,402 DEBUG [main] annotations.EntityBinder (EntityBinder.java:419) - Import with entity name users
2017-04-24 12:22:25,420 DEBUG [main] annotations.EntityBinder (EntityBinder.java:695) - Bind entity com.example.struts2.model.Users on table users
2017-04-24 12:22:25,492 DEBUG [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
2017-04-24 12:22:25,503 DEBUG [main] annotations.PropertyBinder (PropertyBinder.java:174) - MetadataSourceProcessor property id with lazy=false
2017-04-24 12:22:25,509 DEBUG [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.example.struts2.model.Users:id]
2017-04-24 12:22:25,515 DEBUG [main] annotations.SimpleValueBinder (SimpleValueBinder.java:411) - building SimpleValue for id
2017-04-24 12:22:25,523 DEBUG [main] annotations.PropertyBinder (PropertyBinder.java:265) - Building property id
2017-04-24 12:22:25,531 DEBUG [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2017-04-24 12:22:25,532 DEBUG [main] annotations.PropertyBinder (PropertyBinder.java:174) - MetadataSourceProcessor property password with lazy=false
2017-04-24 12:22:25,533 DEBUG [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.example.struts2.model.Users:password]
2017-04-24 12:22:25,534 DEBUG [main] annotations.SimpleValueBinder (SimpleValueBinder.java:411) - building SimpleValue for password
2017-04-24 12:22:25,535 DEBUG [main] annotations.PropertyBinder (PropertyBinder.java:265) - Building property password
2017-04-24 12:22:25,540 DEBUG [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=false}
2017-04-24 12:22:25,547 DEBUG [main] annotations.PropertyBinder (PropertyBinder.java:174) - MetadataSourceProcessor property username with lazy=false
2017-04-24 12:22:25,548 DEBUG [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.example.struts2.model.Users:username]
2017-04-24 12:22:25,549 DEBUG [main] annotations.SimpleValueBinder (SimpleValueBinder.java:411) - building SimpleValue for username
2017-04-24 12:22:25,549 DEBUG [main] annotations.PropertyBinder (PropertyBinder.java:265) - Building property username
2017-04-24 12:22:25,554 DEBUG [main] annotations.SimpleValueBinder (SimpleValueBinder.java:456) - Starting fillSimpleValue for id
2017-04-24 12:22:25,555 DEBUG [main] annotations.SimpleValueBinder (SimpleValueBinder.java:456) - Starting fillSimpleValue for password
2017-04-24 12:22:25,556 DEBUG [main] annotations.SimpleValueBinder (SimpleValueBinder.java:456) - Starting fillSimpleValue for username
2017-04-24 12:22:25,560 DEBUG [main] mapping.PrimaryKey (PrimaryKey.java:35) - Forcing column [id] to be non-null as it is part of the primary key for table [users]
2017-04-24 12:22:25,670 DEBUG [main] internal.SessionFactoryImpl (SessionFactoryImpl.java:199) - Building session factory
2017-04-24 12:22:25,674 DEBUG [main] cfg.Settings (Settings.java:69) - SessionFactory name : null
2017-04-24 12:22:25,674 DEBUG [main] cfg.Settings (Settings.java:70) - Automatic flush during beforeCompletion(): enabled
2017-04-24 12:22:25,676 DEBUG [main] cfg.Settings (Settings.java:71) - Automatic session close at end of transaction: disabled
2017-04-24 12:22:25,677 DEBUG [main] cfg.Settings (Settings.java:73) - Statistics: disabled
2017-04-24 12:22:25,678 DEBUG [main] cfg.Settings (Settings.java:75) - Deleted entity synthetic identifier rollback: disabled
2017-04-24 12:22:25,678 DEBUG [main] cfg.Settings (Settings.java:76) - Default entity-mode: pojo
2017-04-24 12:22:25,679 DEBUG [main] cfg.Settings (Settings.java:77) - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2017-04-24 12:22:25,682 DEBUG [main] cfg.Settings (Settings.java:78) - Allow initialization of lazy state outside session : disabled
2017-04-24 12:22:25,683 DEBUG [main] cfg.Settings (Settings.java:80) - Using BatchFetchStyle : LEGACY
2017-04-24 12:22:25,683 DEBUG [main] cfg.Settings (Settings.java:81) - Default batch fetch size: -1
2017-04-24 12:22:25,684 DEBUG [main] cfg.Settings (Settings.java:82) - Maximum outer join fetch depth: 2
2017-04-24 12:22:25,684 DEBUG [main] cfg.Settings (Settings.java:83) - Default null ordering: NONE
2017-04-24 12:22:25,685 DEBUG [main] cfg.Settings (Settings.java:84) - Order SQL updates by primary key: disabled
2017-04-24 12:22:25,685 DEBUG [main] cfg.Settings (Settings.java:85) - Order SQL inserts for batching: disabled
2017-04-24 12:22:25,686 DEBUG [main] cfg.Settings (Settings.java:87) - multi-tenancy strategy : NONE
2017-04-24 12:22:25,686 DEBUG [main] cfg.Settings (Settings.java:89) - JTA Track by Thread: enabled
2017-04-24 12:22:25,687 DEBUG [main] cfg.Settings (Settings.java:91) - Query language substitutions: {}
2017-04-24 12:22:25,687 DEBUG [main] cfg.Settings (Settings.java:92) - JPA query language strict compliance: disabled
2017-04-24 12:22:25,688 DEBUG [main] cfg.Settings (Settings.java:93) - Named query checking : enabled
2017-04-24 12:22:25,688 DEBUG [main] cfg.Settings (Settings.java:95) - Second-level cache: enabled
2017-04-24 12:22:25,689 DEBUG [main] cfg.Settings (Settings.java:96) - Second-level query cache: disabled
2017-04-24 12:22:25,689 DEBUG [main] cfg.Settings (Settings.java:97) - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@1e957e2f
2017-04-24 12:22:25,690 DEBUG [main] cfg.Settings (Settings.java:98) - Second-level cache region prefix: null
2017-04-24 12:22:25,690 DEBUG [main] cfg.Settings (Settings.java:99) - Optimize second-level cache for minimal puts: disabled
2017-04-24 12:22:25,691 DEBUG [main] cfg.Settings (Settings.java:100) - Structured second-level cache entries: disabled
2017-04-24 12:22:25,691 DEBUG [main] cfg.Settings (Settings.java:101) - Second-level cache direct-reference entries: disabled
2017-04-24 12:22:25,692 DEBUG [main] cfg.Settings (Settings.java:102) - Automatic eviction of collection cache: disabled
2017-04-24 12:22:25,694 DEBUG [main] cfg.Settings (Settings.java:104) - JDBC batch size: 15
2017-04-24 12:22:25,695 DEBUG [main] cfg.Settings (Settings.java:105) - JDBC batch updates for versioned data: enabled
2017-04-24 12:22:25,695 DEBUG [main] cfg.Settings (Settings.java:106) - Scrollable result sets: enabled
2017-04-24 12:22:25,696 DEBUG [main] cfg.Settings (Settings.java:107) - Wrap result sets: disabled
2017-04-24 12:22:25,696 DEBUG [main] cfg.Settings (Settings.java:108) - JDBC3 getGeneratedKeys(): enabled
2017-04-24 12:22:25,697 DEBUG [main] cfg.Settings (Settings.java:109) - JDBC result set fetch size: null
2017-04-24 12:22:25,697 DEBUG [main] cfg.Settings (Settings.java:110) - Connection release mode: AFTER_TRANSACTION
2017-04-24 12:22:25,698 DEBUG [main] cfg.Settings (Settings.java:111) - Generate SQL with comments: disabled
2017-04-24 12:22:25,860 DEBUG [main] internal.SessionFactoryImpl (SessionFactoryImpl.java:254) - Session factory constructed with filter configurations : {}
2017-04-24 12:22:25,861 DEBUG [main] internal.SessionFactoryImpl (SessionFactoryImpl.java:255) - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, java.vendor.url=http://java.oracle.com/, user.timezone=Asia/Jakarta, os.name=Linux, java.vm.specification.version=1.8, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, maven.home=/usr/share/maven, sun.cpu.endian=little, user.home=/root, user.language=en, java.specification.vendor=Oracle Corporation, java.home=/usr/lib/jvm/java-8-openjdk-amd64/jre, file.separator=/, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, sun.boot.class.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/classes, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_111-8u111-b14-3-b14, user.name=root, path.separator=:, securerandom.source=file:/dev/./urandom, hibernate.connection.username=root, os.version=4.8.0-kali2-amd64, java.endorsed.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/endorsed, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/strutsproject, file.encoding=UTF-8, guice.disable.misplaced.annotation.check=true, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=/tmp, java.version=1.8.0_111, user.dir=/root/Source/java/struts/struts-project, os.arch=amd64, maven.multiModuleProjectDirectory=/root/Source/java/struts/struts-project, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@3cc79c02, java.library.path=/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.111-b14, classworlds.conf=/usr/share/maven/bin/m2.conf, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.pool_size=1, java.ext.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
2017-04-24 12:22:25,888 DEBUG [main] spi.JaccIntegrator (JaccIntegrator.java:80) - Skipping JACC integration as it was not enabled
2017-04-24 12:22:25,911 DEBUG [main] internal.SessionFactoryImpl (SessionFactoryImpl.java:294) - Instantiated session factory
2017-04-24 12:22:26,042 DEBUG [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [com.example.struts2.model.Users] is safe
2017-04-24 12:22:26,046 DEBUG [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.struts2.model.Users
2017-04-24 12:22:26,087 DEBUG [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [com.example.struts2.model.Users] is safe
2017-04-24 12:22:26,090 DEBUG [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.struts2.model.Users
2017-04-24 12:22:26,265 DEBUG [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3598) - Static SQL for entity: com.example.struts2.model.Users
2017-04-24 12:22:26,266 DEBUG [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3603) -  Version select: select id from users where id =?
2017-04-24 12:22:26,267 DEBUG [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3606) -  Snapshot select: select users_.id, users_.password as password2_0_, users_.username as username3_0_ from users users_ where users_.id=?
2017-04-24 12:22:26,267 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Insert 0: insert into users (password, username, id) values (?, ?, ?)
2017-04-24 12:22:26,268 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Update 0: update users set password=?, username=? where id=?
2017-04-24 12:22:26,268 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Delete 0: delete from users where id=?
2017-04-24 12:22:26,269 DEBUG [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3614) -  Identity insert: insert into users (password, username) values (?, ?)
2017-04-24 12:22:26,317 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a65a360]
2017-04-24 12:22:26,321 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:22:26,322 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:22:26,323 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:22:26,353 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:22:26,364 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:22:26,371 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [NONE]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-24 12:22:26,372 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4bf03fee]
2017-04-24 12:22:26,373 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:22:26,377 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:22:26,377 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:22:26,381 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:22:26,382 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:22:26,383 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [READ]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-24 12:22:26,384 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44f0ff2b]
2017-04-24 12:22:26,385 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:22:26,385 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:22:26,387 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:22:26,389 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:22:26,390 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:22:26,391 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [UPGRADE]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=? for update
2017-04-24 12:22:26,392 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68af87ad]
2017-04-24 12:22:26,394 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:22:26,394 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:22:26,401 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:22:26,404 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:22:26,408 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:22:26,411 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [UPGRADE_NOWAIT]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=? for update
2017-04-24 12:22:26,414 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9cfc77]
2017-04-24 12:22:26,416 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:22:26,417 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:22:26,419 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:22:26,420 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:22:26,423 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:22:26,424 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [UPGRADE_SKIPLOCKED]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=? for update
2017-04-24 12:22:26,425 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@601eb4af]
2017-04-24 12:22:26,427 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:22:26,428 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:22:26,428 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:22:26,430 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:22:26,431 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:22:26,432 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [FORCE]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=? for update
2017-04-24 12:22:26,433 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7675c171]
2017-04-24 12:22:26,434 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:22:26,435 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:22:26,436 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:22:26,437 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:22:26,439 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:22:26,440 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [PESSIMISTIC_READ]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=? lock in share mode
2017-04-24 12:22:26,440 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51cab489]
2017-04-24 12:22:26,441 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:22:26,442 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:22:26,443 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:22:26,444 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:22:26,445 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:22:26,446 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [PESSIMISTIC_WRITE]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=? for update
2017-04-24 12:22:26,447 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@773c2214]
2017-04-24 12:22:26,449 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:22:26,450 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:22:26,450 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:22:26,451 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:22:26,453 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:22:26,453 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [PESSIMISTIC_FORCE_INCREMENT]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=? for update
2017-04-24 12:22:26,454 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@110b7837]
2017-04-24 12:22:26,455 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:22:26,456 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:22:26,457 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:22:26,458 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:22:26,459 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:22:26,460 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [OPTIMISTIC]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-24 12:22:26,461 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78d23d6a]
2017-04-24 12:22:26,465 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:22:26,466 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:22:26,466 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:22:26,467 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:22:26,473 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:22:26,477 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [OPTIMISTIC_FORCE_INCREMENT]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-24 12:22:26,515 DEBUG [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_MERGE on entity com.example.struts2.model.Users: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-24 12:22:26,517 DEBUG [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_REFRESH on entity com.example.struts2.model.Users: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-24 12:22:26,576 DEBUG [main] spi.SchemaManagementToolCoordinator (SchemaManagementToolCoordinator.java:56) - No actions specified; doing nothing
2017-04-24 12:22:26,577 DEBUG [main] internal.JtaPlatformInitiator (JtaPlatformInitiator.java:42) - No JtaPlatform was specified, checking resolver
2017-04-24 12:22:26,579 DEBUG [main] internal.JtaPlatformResolverInitiator (JtaPlatformResolverInitiator.java:33) - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2017-04-24 12:22:26,596 DEBUG [main] internal.StandardJtaPlatformResolver (StandardJtaPlatformResolver.java:102) - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2017-04-24 12:22:26,601 DEBUG [main] spi.NamedQueryRepository (NamedQueryRepository.java:151) - Checking 0 named HQL queries
2017-04-24 12:22:26,602 DEBUG [main] spi.NamedQueryRepository (NamedQueryRepository.java:167) - Checking 0 named SQL queries
2017-04-24 12:22:26,609 DEBUG [main] internal.SessionFactoryRegistry (SessionFactoryRegistry.java:52) - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1129829c
2017-04-24 12:22:26,615 DEBUG [main] internal.SessionFactoryRegistry (SessionFactoryRegistry.java:74) - Registering SessionFactory: 7988d134-5b4f-4310-8c20-f754a9fb9de8 (<unnamed>)
2017-04-24 12:22:26,616 DEBUG [main] internal.SessionFactoryRegistry (SessionFactoryRegistry.java:81) - Not binding SessionFactory to JNDI, no JNDI name configured
2017-04-24 12:22:54,386 DEBUG [pool-2-thread-1] internal.PooledConnections (PooledConnections.java:51) - Connection pool now considered primed; min-size will be maintained
2017-04-24 12:22:56,637 DEBUG [qtp741370455-14] internal.StatisticsInitiator (StatisticsInitiator.java:82) - Statistics initialized [enabled=false]
2017-04-24 12:22:56,721 INFO  [qtp741370455-14] action.Login (Login.java:25) - VALIDATE admin admin
2017-04-24 12:22:56,732 DEBUG [qtp741370455-14] internal.TransactionImpl (TransactionImpl.java:55) - begin
2017-04-24 12:22:56,784 DEBUG [qtp741370455-14] internal.QueryTranslatorFactoryInitiator (QueryTranslatorFactoryInitiator.java:45) - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@4406ed7e
2017-04-24 12:22:56,791 INFO  [qtp741370455-14] internal.QueryTranslatorFactoryInitiator (QueryTranslatorFactoryInitiator.java:47) - HHH000397: Using ASTQueryTranslatorFactory
2017-04-24 12:22:56,892 DEBUG [qtp741370455-14] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:282) - parse() - HQL: from com.example.struts2.model.Users where username = :username and password = :password
2017-04-24 12:22:56,928 DEBUG [qtp741370455-14] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:300) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[DOT] Node: '.'
    |           |  |  |  +-[IDENT] Node: 'com'
    |           |  |  |  \-[IDENT] Node: 'example'
    |           |  |  \-[IDENT] Node: 'struts2'
    |           |  \-[IDENT] Node: 'model'
    |           \-[IDENT] Node: 'Users'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[IDENT] Node: 'username'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'username'
          \-[EQ] Node: '='
             +-[IDENT] Node: 'password'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'password'

2017-04-24 12:22:56,935 DEBUG [qtp741370455-14] ast.ErrorCounter (ErrorCounter.java:95) - throwQueryException() : no errors
2017-04-24 12:22:57,009 DEBUG [qtp741370455-14] antlr.HqlSqlBaseWalker (HqlSqlBaseWalker.java:124) - select << begin [level=1, statement=select]
2017-04-24 12:22:57,082 DEBUG [qtp741370455-14] tree.FromElement (FromElement.java:147) - FromClause{level=1} : com.example.struts2.model.Users (<no alias>) -> users0_
2017-04-24 12:22:57,097 DEBUG [qtp741370455-14] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : {synthetic-alias} -> {synthetic-alias}
2017-04-24 12:22:57,106 DEBUG [qtp741370455-14] tree.DotNode (DotNode.java:666) - getDataType() : username -> org.hibernate.type.StringType@70d63e05
2017-04-24 12:22:57,113 DEBUG [qtp741370455-14] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : {synthetic-alias}.username -> users0_.username
2017-04-24 12:22:57,125 DEBUG [qtp741370455-14] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : {synthetic-alias} -> {synthetic-alias}
2017-04-24 12:22:57,130 DEBUG [qtp741370455-14] tree.DotNode (DotNode.java:666) - getDataType() : password -> org.hibernate.type.StringType@70d63e05
2017-04-24 12:22:57,134 DEBUG [qtp741370455-14] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : {synthetic-alias}.password -> users0_.password
2017-04-24 12:22:57,141 DEBUG [qtp741370455-14] antlr.HqlSqlBaseWalker (HqlSqlBaseWalker.java:128) - select : finishing up [level=1, statement=select]
2017-04-24 12:22:57,143 DEBUG [qtp741370455-14] ast.HqlSqlWalker (HqlSqlWalker.java:745) - processQuery() :  ( SELECT ( FromClause{level=1} users users0_ ) ( where ( and ( = ( users0_.username {synthetic-alias} username ) ? ) ( = ( users0_.password {synthetic-alias} password ) ? ) ) ) )
2017-04-24 12:22:57,163 DEBUG [qtp741370455-14] ast.HqlSqlWalker (HqlSqlWalker.java:1021) - Derived SELECT clause created.
2017-04-24 12:22:57,186 DEBUG [qtp741370455-14] util.JoinProcessor (JoinProcessor.java:187) - Using FROM fragment [users users0_]
2017-04-24 12:22:57,193 DEBUG [qtp741370455-14] antlr.HqlSqlBaseWalker (HqlSqlBaseWalker.java:132) - select >> end [level=1, statement=select]
2017-04-24 12:22:57,200 DEBUG [qtp741370455-14] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:269) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'users0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=users,tableAlias=users0_,origin=null,columns={,className=com.example.struts2.model.Users}}}
    |  \-[SQL_TOKEN] SqlFragment: 'users0_.password as password2_0_, users0_.username as username3_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[users0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users users0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=users,tableAlias=users0_,origin=null,columns={,className=com.example.struts2.model.Users}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'users0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path={synthetic-alias}.username,tableAlias=users0_,className=com.example.struts2.model.Users,classAlias=null}
          |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |  \-[IDENT] IdentNode: 'username' {originalText=username}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=username, expectedType=org.hibernate.type.StringType@70d63e05}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'users0_.password' {propertyName=password,dereferenceType=PRIMITIVE,getPropertyPath=password,path={synthetic-alias}.password,tableAlias=users0_,className=com.example.struts2.model.Users,classAlias=null}
             |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             |  \-[IDENT] IdentNode: 'password' {originalText=password}
             \-[NAMED_PARAM] ParameterNode: '?' {name=password, expectedType=org.hibernate.type.StringType@70d63e05}

2017-04-24 12:22:57,206 DEBUG [qtp741370455-14] ast.ErrorCounter (ErrorCounter.java:95) - throwQueryException() : no errors
2017-04-24 12:22:57,234 DEBUG [qtp741370455-14] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:251) - HQL: from com.example.struts2.model.Users where username = :username and password = :password
2017-04-24 12:22:57,237 DEBUG [qtp741370455-14] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:252) - SQL: select users0_.id as id1_0_, users0_.password as password2_0_, users0_.username as username3_0_ from users users0_ where users0_.username=? and users0_.password=?
2017-04-24 12:22:57,244 DEBUG [qtp741370455-14] ast.ErrorCounter (ErrorCounter.java:95) - throwQueryException() : no errors
2017-04-24 12:24:03,940 DEBUG [main] internal.CoreLogging (CoreLogging.java:28) - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2017-04-24 12:24:03,973 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2017-04-24 12:24:03,981 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2017-04-24 12:24:03,992 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2017-04-24 12:24:04,365 INFO  [main] hibernate.Version (Version.java:45) - HHH000412: Hibernate Core {5.2.9.Final}
2017-04-24 12:24:04,371 INFO  [main] cfg.Environment (Environment.java:213) - HHH000206: hibernate.properties not found
2017-04-24 12:24:04,415 DEBUG [main] internal.JaxbCfgProcessor (JaxbCfgProcessor.java:116) - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2017-04-24 12:24:04,813 DEBUG [main] cfg.Configuration (Configuration.java:724) - Building session factory using internal StandardServiceRegistryBuilder
2017-04-24 12:24:04,840 DEBUG [main] spi.ServiceBinding (ServiceBinding.java:68) - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2017-04-24 12:24:04,841 DEBUG [main] cfg.Configuration (Configuration.java:652) - Building session factory using provided StandardServiceRegistry
2017-04-24 12:24:04,890 DEBUG [main] internal.RegionFactoryInitiator (RegionFactoryInitiator.java:75) - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2017-04-24 12:24:04,910 INFO  [main] java.JavaReflectionManager (JavaReflectionManager.java:66) - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2017-04-24 12:24:04,963 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@696b4a95
2017-04-24 12:24:04,965 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@696b4a95
2017-04-24 12:24:04,966 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@696b4a95
2017-04-24 12:24:04,968 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6af91cc8
2017-04-24 12:24:04,972 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@107bfcb2
2017-04-24 12:24:04,974 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration yes_no -> org.hibernate.type.YesNoType@f9f3928
2017-04-24 12:24:04,980 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@1806bc4c
2017-04-24 12:24:04,981 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@1806bc4c
2017-04-24 12:24:04,988 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1806bc4c
2017-04-24 12:24:04,991 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration character -> org.hibernate.type.CharacterType@52d6d273
2017-04-24 12:24:04,993 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration char -> org.hibernate.type.CharacterType@52d6d273
2017-04-24 12:24:04,996 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@52d6d273
2017-04-24 12:24:05,000 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@5b275811
2017-04-24 12:24:05,001 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@5b275811
2017-04-24 12:24:05,001 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5b275811
2017-04-24 12:24:05,005 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration integer -> org.hibernate.type.IntegerType@559cedee
2017-04-24 12:24:05,006 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration int -> org.hibernate.type.IntegerType@559cedee
2017-04-24 12:24:05,006 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@559cedee
2017-04-24 12:24:05,011 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@37baddde
2017-04-24 12:24:05,012 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@37baddde
2017-04-24 12:24:05,013 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@37baddde
2017-04-24 12:24:05,032 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@38830ea
2017-04-24 12:24:05,036 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@38830ea
2017-04-24 12:24:05,037 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@38830ea
2017-04-24 12:24:05,040 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@6fbb4061
2017-04-24 12:24:05,041 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@6fbb4061
2017-04-24 12:24:05,042 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6fbb4061
2017-04-24 12:24:05,046 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4b4ee511
2017-04-24 12:24:05,047 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4b4ee511
2017-04-24 12:24:05,051 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3762c4fc
2017-04-24 12:24:05,052 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3762c4fc
2017-04-24 12:24:05,056 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration string -> org.hibernate.type.StringType@141d3d43
2017-04-24 12:24:05,057 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.String -> org.hibernate.type.StringType@141d3d43
2017-04-24 12:24:05,061 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6419a0e1
2017-04-24 12:24:05,063 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@68ed3f30
2017-04-24 12:24:05,066 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration url -> org.hibernate.type.UrlType@575e572f
2017-04-24 12:24:05,067 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@575e572f
2017-04-24 12:24:05,071 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Duration -> org.hibernate.type.DurationType@3456558
2017-04-24 12:24:05,072 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@3456558
2017-04-24 12:24:05,148 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Instant -> org.hibernate.type.InstantType@73ae0257
2017-04-24 12:24:05,151 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@73ae0257
2017-04-24 12:24:05,172 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@42a0501e
2017-04-24 12:24:05,176 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@42a0501e
2017-04-24 12:24:05,193 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@2b5c4f17
2017-04-24 12:24:05,198 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@2b5c4f17
2017-04-24 12:24:05,225 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@177c41d7
2017-04-24 12:24:05,229 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@177c41d7
2017-04-24 12:24:05,239 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@51c8f62c
2017-04-24 12:24:05,245 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@51c8f62c
2017-04-24 12:24:05,254 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@44fff386
2017-04-24 12:24:05,267 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@44fff386
2017-04-24 12:24:05,300 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@68a78f3c
2017-04-24 12:24:05,304 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@68a78f3c
2017-04-24 12:24:05,314 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration date -> org.hibernate.type.DateType@732f6050
2017-04-24 12:24:05,375 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@732f6050
2017-04-24 12:24:05,406 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration time -> org.hibernate.type.TimeType@5f96f6a2
2017-04-24 12:24:05,412 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5f96f6a2
2017-04-24 12:24:05,425 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration timestamp -> org.hibernate.type.TimestampType@341b13a8
2017-04-24 12:24:05,427 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@341b13a8
2017-04-24 12:24:05,427 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@341b13a8
2017-04-24 12:24:05,448 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5f14761c
2017-04-24 12:24:05,456 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration calendar -> org.hibernate.type.CalendarType@724b939e
2017-04-24 12:24:05,457 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@724b939e
2017-04-24 12:24:05,460 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@724b939e
2017-04-24 12:24:05,465 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@52b3bf03
2017-04-24 12:24:05,468 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration locale -> org.hibernate.type.LocaleType@5626d18c
2017-04-24 12:24:05,474 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5626d18c
2017-04-24 12:24:05,478 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration currency -> org.hibernate.type.CurrencyType@45f756e6
2017-04-24 12:24:05,479 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@45f756e6
2017-04-24 12:24:05,481 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@656f62dc
2017-04-24 12:24:05,482 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@656f62dc
2017-04-24 12:24:05,485 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration class -> org.hibernate.type.ClassType@5a8c93
2017-04-24 12:24:05,489 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5a8c93
2017-04-24 12:24:05,495 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5634a861
2017-04-24 12:24:05,495 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5634a861
2017-04-24 12:24:05,497 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@43bdaa1b
2017-04-24 12:24:05,501 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration binary -> org.hibernate.type.BinaryType@7f9fc8bd
2017-04-24 12:24:05,502 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte[] -> org.hibernate.type.BinaryType@7f9fc8bd
2017-04-24 12:24:05,506 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [B -> org.hibernate.type.BinaryType@7f9fc8bd
2017-04-24 12:24:05,510 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1a500561
2017-04-24 12:24:05,512 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1a500561
2017-04-24 12:24:05,512 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1a500561
2017-04-24 12:24:05,515 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration row_version -> org.hibernate.type.RowVersionType@4086d8fb
2017-04-24 12:24:05,517 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration image -> org.hibernate.type.ImageType@7c781c42
2017-04-24 12:24:05,525 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration characters -> org.hibernate.type.CharArrayType@c386958
2017-04-24 12:24:05,526 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration char[] -> org.hibernate.type.CharArrayType@c386958
2017-04-24 12:24:05,527 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [C -> org.hibernate.type.CharArrayType@c386958
2017-04-24 12:24:05,530 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3166f664
2017-04-24 12:24:05,531 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3166f664
2017-04-24 12:24:05,531 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3166f664
2017-04-24 12:24:05,535 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration text -> org.hibernate.type.TextType@44a085e5
2017-04-24 12:24:05,541 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ntext -> org.hibernate.type.NTextType@2152ab30
2017-04-24 12:24:05,552 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration blob -> org.hibernate.type.BlobType@6749fe50
2017-04-24 12:24:05,552 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6749fe50
2017-04-24 12:24:05,557 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@ae73c80
2017-04-24 12:24:05,567 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration clob -> org.hibernate.type.ClobType@5562c2c9
2017-04-24 12:24:05,568 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5562c2c9
2017-04-24 12:24:05,575 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration nclob -> org.hibernate.type.NClobType@51ab1ee3
2017-04-24 12:24:05,576 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@51ab1ee3
2017-04-24 12:24:05,578 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@28757abd
2017-04-24 12:24:05,580 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@138aa3cc
2017-04-24 12:24:05,583 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration serializable -> org.hibernate.type.SerializableType@ceddaf8
2017-04-24 12:24:05,590 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration object -> org.hibernate.type.ObjectType@76a805b7
2017-04-24 12:24:05,591 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@76a805b7
2017-04-24 12:24:05,592 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@608b1fd2
2017-04-24 12:24:05,593 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@56382bc9
2017-04-24 12:24:05,594 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@591a4f8e
2017-04-24 12:24:05,594 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@53ed80d3
2017-04-24 12:24:05,595 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6ba060f3
2017-04-24 12:24:05,596 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7c51782d
2017-04-24 12:24:05,596 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@77bc2e16
2017-04-24 12:24:05,597 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@48e8c32a
2017-04-24 12:24:05,623 WARN  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:70) - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2017-04-24 12:24:05,625 DEBUG [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:154) - No driver class specified
2017-04-24 12:24:05,626 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:126) - HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306/strutsproject]
2017-04-24 12:24:05,628 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:132) - HHH10001001: Connection properties: {user=root, password=}
2017-04-24 12:24:05,630 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:140) - HHH10001003: Autocommit mode: false
2017-04-24 12:24:05,637 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:384) - Initializing Connection pool with 1 Connections
2017-04-24 12:24:05,638 INFO  [main] internal.PooledConnections (PooledConnections.java:41) - HHH000115: Hibernate connection pool size: 1 (min=1)
2017-04-24 12:24:06,151 DEBUG [main] internal.JdbcEnvironmentInitiator (JdbcEnvironmentInitiator.java:72) - Database ->
       name : MySQL
    version : 5.6.30-1
      major : 5
      minor : 6
2017-04-24 12:24:06,152 DEBUG [main] internal.JdbcEnvironmentInitiator (JdbcEnvironmentInitiator.java:83) - Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.9 ( Revision: ${svn.Revision} )
      major : 5
      minor : 1
2017-04-24 12:24:06,155 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:389) - JDBC version : 3.0
2017-04-24 12:24:06,184 INFO  [main] dialect.Dialect (Dialect.java:157) - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2017-04-24 12:24:06,252 DEBUG [main] spi.IdentifierHelperBuilder (IdentifierHelperBuilder.java:117) - JDBC driver metadata reported database stores quoted identifiers in more than one case
2017-04-24 12:24:06,257 DEBUG [main] spi.IdentifierHelperBuilder (IdentifierHelperBuilder.java:191) - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2017-04-24 12:24:06,275 INFO  [main] internal.LobCreatorBuilderImpl (LobCreatorBuilderImpl.java:98) - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2017-04-24 12:24:06,366 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2017-04-24 12:24:06,368 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2017-04-24 12:24:06,370 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2017-04-24 12:24:06,371 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2017-04-24 12:24:06,372 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2017-04-24 12:24:06,375 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2017-04-24 12:24:06,376 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2017-04-24 12:24:06,380 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2017-04-24 12:24:06,383 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2017-04-24 12:24:06,385 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2017-04-24 12:24:06,386 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2017-04-24 12:24:06,388 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2017-04-24 12:24:06,389 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2017-04-24 12:24:06,392 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2017-04-24 12:24:07,085 DEBUG [main] relational.Namespace (Namespace.java:47) - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2017-04-24 12:24:07,182 DEBUG [main] cfg.AnnotationBinder (AnnotationBinder.java:511) - Binding entity from annotated class: com.example.struts2.model.Users
2017-04-24 12:24:07,252 DEBUG [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2017-04-24 12:24:07,275 DEBUG [main] annotations.EntityBinder (EntityBinder.java:419) - Import with entity name users
2017-04-24 12:24:07,295 DEBUG [main] annotations.EntityBinder (EntityBinder.java:695) - Bind entity com.example.struts2.model.Users on table users
2017-04-24 12:24:07,374 DEBUG [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
2017-04-24 12:24:07,384 DEBUG [main] annotations.PropertyBinder (PropertyBinder.java:174) - MetadataSourceProcessor property id with lazy=false
2017-04-24 12:24:07,391 DEBUG [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.example.struts2.model.Users:id]
2017-04-24 12:24:07,397 DEBUG [main] annotations.SimpleValueBinder (SimpleValueBinder.java:411) - building SimpleValue for id
2017-04-24 12:24:07,405 DEBUG [main] annotations.PropertyBinder (PropertyBinder.java:265) - Building property id
2017-04-24 12:24:07,414 DEBUG [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2017-04-24 12:24:07,415 DEBUG [main] annotations.PropertyBinder (PropertyBinder.java:174) - MetadataSourceProcessor property password with lazy=false
2017-04-24 12:24:07,416 DEBUG [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.example.struts2.model.Users:password]
2017-04-24 12:24:07,417 DEBUG [main] annotations.SimpleValueBinder (SimpleValueBinder.java:411) - building SimpleValue for password
2017-04-24 12:24:07,418 DEBUG [main] annotations.PropertyBinder (PropertyBinder.java:265) - Building property password
2017-04-24 12:24:07,420 DEBUG [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=false}
2017-04-24 12:24:07,421 DEBUG [main] annotations.PropertyBinder (PropertyBinder.java:174) - MetadataSourceProcessor property username with lazy=false
2017-04-24 12:24:07,421 DEBUG [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.example.struts2.model.Users:username]
2017-04-24 12:24:07,422 DEBUG [main] annotations.SimpleValueBinder (SimpleValueBinder.java:411) - building SimpleValue for username
2017-04-24 12:24:07,423 DEBUG [main] annotations.PropertyBinder (PropertyBinder.java:265) - Building property username
2017-04-24 12:24:07,427 DEBUG [main] annotations.SimpleValueBinder (SimpleValueBinder.java:456) - Starting fillSimpleValue for id
2017-04-24 12:24:07,428 DEBUG [main] annotations.SimpleValueBinder (SimpleValueBinder.java:456) - Starting fillSimpleValue for password
2017-04-24 12:24:07,429 DEBUG [main] annotations.SimpleValueBinder (SimpleValueBinder.java:456) - Starting fillSimpleValue for username
2017-04-24 12:24:07,433 DEBUG [main] mapping.PrimaryKey (PrimaryKey.java:35) - Forcing column [id] to be non-null as it is part of the primary key for table [users]
2017-04-24 12:24:07,522 DEBUG [main] internal.SessionFactoryImpl (SessionFactoryImpl.java:199) - Building session factory
2017-04-24 12:24:07,526 DEBUG [main] cfg.Settings (Settings.java:69) - SessionFactory name : null
2017-04-24 12:24:07,527 DEBUG [main] cfg.Settings (Settings.java:70) - Automatic flush during beforeCompletion(): enabled
2017-04-24 12:24:07,528 DEBUG [main] cfg.Settings (Settings.java:71) - Automatic session close at end of transaction: disabled
2017-04-24 12:24:07,528 DEBUG [main] cfg.Settings (Settings.java:73) - Statistics: disabled
2017-04-24 12:24:07,529 DEBUG [main] cfg.Settings (Settings.java:75) - Deleted entity synthetic identifier rollback: disabled
2017-04-24 12:24:07,529 DEBUG [main] cfg.Settings (Settings.java:76) - Default entity-mode: pojo
2017-04-24 12:24:07,530 DEBUG [main] cfg.Settings (Settings.java:77) - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2017-04-24 12:24:07,531 DEBUG [main] cfg.Settings (Settings.java:78) - Allow initialization of lazy state outside session : disabled
2017-04-24 12:24:07,531 DEBUG [main] cfg.Settings (Settings.java:80) - Using BatchFetchStyle : LEGACY
2017-04-24 12:24:07,532 DEBUG [main] cfg.Settings (Settings.java:81) - Default batch fetch size: -1
2017-04-24 12:24:07,533 DEBUG [main] cfg.Settings (Settings.java:82) - Maximum outer join fetch depth: 2
2017-04-24 12:24:07,533 DEBUG [main] cfg.Settings (Settings.java:83) - Default null ordering: NONE
2017-04-24 12:24:07,534 DEBUG [main] cfg.Settings (Settings.java:84) - Order SQL updates by primary key: disabled
2017-04-24 12:24:07,534 DEBUG [main] cfg.Settings (Settings.java:85) - Order SQL inserts for batching: disabled
2017-04-24 12:24:07,535 DEBUG [main] cfg.Settings (Settings.java:87) - multi-tenancy strategy : NONE
2017-04-24 12:24:07,536 DEBUG [main] cfg.Settings (Settings.java:89) - JTA Track by Thread: enabled
2017-04-24 12:24:07,536 DEBUG [main] cfg.Settings (Settings.java:91) - Query language substitutions: {}
2017-04-24 12:24:07,537 DEBUG [main] cfg.Settings (Settings.java:92) - JPA query language strict compliance: disabled
2017-04-24 12:24:07,537 DEBUG [main] cfg.Settings (Settings.java:93) - Named query checking : enabled
2017-04-24 12:24:07,537 DEBUG [main] cfg.Settings (Settings.java:95) - Second-level cache: enabled
2017-04-24 12:24:07,538 DEBUG [main] cfg.Settings (Settings.java:96) - Second-level query cache: disabled
2017-04-24 12:24:07,538 DEBUG [main] cfg.Settings (Settings.java:97) - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@22bf9122
2017-04-24 12:24:07,539 DEBUG [main] cfg.Settings (Settings.java:98) - Second-level cache region prefix: null
2017-04-24 12:24:07,540 DEBUG [main] cfg.Settings (Settings.java:99) - Optimize second-level cache for minimal puts: disabled
2017-04-24 12:24:07,540 DEBUG [main] cfg.Settings (Settings.java:100) - Structured second-level cache entries: disabled
2017-04-24 12:24:07,540 DEBUG [main] cfg.Settings (Settings.java:101) - Second-level cache direct-reference entries: disabled
2017-04-24 12:24:07,541 DEBUG [main] cfg.Settings (Settings.java:102) - Automatic eviction of collection cache: disabled
2017-04-24 12:24:07,541 DEBUG [main] cfg.Settings (Settings.java:104) - JDBC batch size: 15
2017-04-24 12:24:07,542 DEBUG [main] cfg.Settings (Settings.java:105) - JDBC batch updates for versioned data: enabled
2017-04-24 12:24:07,542 DEBUG [main] cfg.Settings (Settings.java:106) - Scrollable result sets: enabled
2017-04-24 12:24:07,546 DEBUG [main] cfg.Settings (Settings.java:107) - Wrap result sets: disabled
2017-04-24 12:24:07,547 DEBUG [main] cfg.Settings (Settings.java:108) - JDBC3 getGeneratedKeys(): enabled
2017-04-24 12:24:07,547 DEBUG [main] cfg.Settings (Settings.java:109) - JDBC result set fetch size: null
2017-04-24 12:24:07,548 DEBUG [main] cfg.Settings (Settings.java:110) - Connection release mode: AFTER_TRANSACTION
2017-04-24 12:24:07,548 DEBUG [main] cfg.Settings (Settings.java:111) - Generate SQL with comments: disabled
2017-04-24 12:24:07,723 DEBUG [main] internal.SessionFactoryImpl (SessionFactoryImpl.java:254) - Session factory constructed with filter configurations : {}
2017-04-24 12:24:07,726 DEBUG [main] internal.SessionFactoryImpl (SessionFactoryImpl.java:255) - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, java.vendor.url=http://java.oracle.com/, user.timezone=Asia/Jakarta, os.name=Linux, java.vm.specification.version=1.8, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, maven.home=/usr/share/maven, sun.cpu.endian=little, user.home=/root, user.language=en, java.specification.vendor=Oracle Corporation, java.home=/usr/lib/jvm/java-8-openjdk-amd64/jre, file.separator=/, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, sun.boot.class.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/classes, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_111-8u111-b14-3-b14, user.name=root, path.separator=:, securerandom.source=file:/dev/./urandom, hibernate.connection.username=root, os.version=4.8.0-kali2-amd64, java.endorsed.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/endorsed, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/strutsproject, file.encoding=UTF-8, guice.disable.misplaced.annotation.check=true, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=/tmp, java.version=1.8.0_111, user.dir=/root/Source/java/struts/struts-project, os.arch=amd64, maven.multiModuleProjectDirectory=/root/Source/java/struts/struts-project, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@4d705112, java.library.path=/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.111-b14, classworlds.conf=/usr/share/maven/bin/m2.conf, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.pool_size=1, java.ext.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
2017-04-24 12:24:07,758 DEBUG [main] spi.JaccIntegrator (JaccIntegrator.java:80) - Skipping JACC integration as it was not enabled
2017-04-24 12:24:07,788 DEBUG [main] internal.SessionFactoryImpl (SessionFactoryImpl.java:294) - Instantiated session factory
2017-04-24 12:24:07,975 DEBUG [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [com.example.struts2.model.Users] is safe
2017-04-24 12:24:07,978 DEBUG [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.struts2.model.Users
2017-04-24 12:24:08,032 DEBUG [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [com.example.struts2.model.Users] is safe
2017-04-24 12:24:08,035 DEBUG [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.struts2.model.Users
2017-04-24 12:24:08,195 DEBUG [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3598) - Static SQL for entity: com.example.struts2.model.Users
2017-04-24 12:24:08,199 DEBUG [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3603) -  Version select: select id from users where id =?
2017-04-24 12:24:08,202 DEBUG [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3606) -  Snapshot select: select users_.id, users_.password as password2_0_, users_.username as username3_0_ from users users_ where users_.id=?
2017-04-24 12:24:08,206 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Insert 0: insert into users (password, username, id) values (?, ?, ?)
2017-04-24 12:24:08,209 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Update 0: update users set password=?, username=? where id=?
2017-04-24 12:24:08,209 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Delete 0: delete from users where id=?
2017-04-24 12:24:08,210 DEBUG [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3614) -  Identity insert: insert into users (password, username) values (?, ?)
2017-04-24 12:24:08,263 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a21f43f]
2017-04-24 12:24:08,272 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:24:08,275 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:24:08,279 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:24:08,312 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:24:08,354 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:24:08,365 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [NONE]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-24 12:24:08,370 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4776e209]
2017-04-24 12:24:08,374 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:24:08,378 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:24:08,380 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:24:08,382 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:24:08,384 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:24:08,387 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [READ]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-24 12:24:08,403 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f536481]
2017-04-24 12:24:08,405 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:24:08,406 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:24:08,409 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:24:08,413 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:24:08,416 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:24:08,419 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [UPGRADE]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=? for update
2017-04-24 12:24:08,422 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22a260ff]
2017-04-24 12:24:08,429 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:24:08,435 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:24:08,442 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:24:08,443 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:24:08,444 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:24:08,445 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [UPGRADE_NOWAIT]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=? for update
2017-04-24 12:24:08,446 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50b734c4]
2017-04-24 12:24:08,454 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:24:08,457 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:24:08,460 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:24:08,463 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:24:08,467 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:24:08,468 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [UPGRADE_SKIPLOCKED]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=? for update
2017-04-24 12:24:08,469 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16d0e521]
2017-04-24 12:24:08,470 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:24:08,475 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:24:08,479 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:24:08,483 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:24:08,484 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:24:08,485 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [FORCE]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=? for update
2017-04-24 12:24:08,486 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ab4aa5e]
2017-04-24 12:24:08,486 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:24:08,490 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:24:08,494 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:24:08,496 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:24:08,498 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:24:08,503 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [PESSIMISTIC_READ]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=? lock in share mode
2017-04-24 12:24:08,506 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a7cb3a4]
2017-04-24 12:24:08,509 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:24:08,512 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:24:08,515 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:24:08,516 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:24:08,518 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:24:08,524 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [PESSIMISTIC_WRITE]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=? for update
2017-04-24 12:24:08,529 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33e0c716]
2017-04-24 12:24:08,530 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:24:08,531 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:24:08,532 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:24:08,533 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:24:08,534 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:24:08,534 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [PESSIMISTIC_FORCE_INCREMENT]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=? for update
2017-04-24 12:24:08,539 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6274f21c]
2017-04-24 12:24:08,563 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:24:08,571 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:24:08,572 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:24:08,573 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:24:08,578 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:24:08,579 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [OPTIMISTIC]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-24 12:24:08,580 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@237add]
2017-04-24 12:24:08,581 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:24:08,582 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:24:08,588 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:24:08,598 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:24:08,604 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:24:08,605 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [OPTIMISTIC_FORCE_INCREMENT]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-24 12:24:08,690 DEBUG [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_MERGE on entity com.example.struts2.model.Users: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-24 12:24:08,693 DEBUG [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_REFRESH on entity com.example.struts2.model.Users: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-24 12:24:08,823 DEBUG [main] spi.SchemaManagementToolCoordinator (SchemaManagementToolCoordinator.java:56) - No actions specified; doing nothing
2017-04-24 12:24:08,829 DEBUG [main] internal.JtaPlatformInitiator (JtaPlatformInitiator.java:42) - No JtaPlatform was specified, checking resolver
2017-04-24 12:24:08,851 DEBUG [main] internal.JtaPlatformResolverInitiator (JtaPlatformResolverInitiator.java:33) - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2017-04-24 12:24:08,937 DEBUG [main] internal.StandardJtaPlatformResolver (StandardJtaPlatformResolver.java:102) - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2017-04-24 12:24:08,954 DEBUG [main] spi.NamedQueryRepository (NamedQueryRepository.java:151) - Checking 0 named HQL queries
2017-04-24 12:24:08,959 DEBUG [main] spi.NamedQueryRepository (NamedQueryRepository.java:167) - Checking 0 named SQL queries
2017-04-24 12:24:08,976 DEBUG [main] internal.SessionFactoryRegistry (SessionFactoryRegistry.java:52) - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@268c030f
2017-04-24 12:24:09,009 DEBUG [main] internal.SessionFactoryRegistry (SessionFactoryRegistry.java:74) - Registering SessionFactory: 5a2b421a-4be4-4402-b98c-a5c884f1866a (<unnamed>)
2017-04-24 12:24:09,039 DEBUG [main] internal.SessionFactoryRegistry (SessionFactoryRegistry.java:81) - Not binding SessionFactory to JNDI, no JNDI name configured
2017-04-24 12:24:29,100 DEBUG [qtp350413251-11] internal.StatisticsInitiator (StatisticsInitiator.java:82) - Statistics initialized [enabled=false]
2017-04-24 12:24:29,184 INFO  [qtp350413251-11] action.Login (Login.java:25) - VALIDATE admin admin
2017-04-24 12:24:29,189 DEBUG [qtp350413251-11] internal.TransactionImpl (TransactionImpl.java:55) - begin
2017-04-24 12:24:29,242 DEBUG [qtp350413251-11] internal.QueryTranslatorFactoryInitiator (QueryTranslatorFactoryInitiator.java:45) - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@2f49f721
2017-04-24 12:24:29,244 INFO  [qtp350413251-11] internal.QueryTranslatorFactoryInitiator (QueryTranslatorFactoryInitiator.java:47) - HHH000397: Using ASTQueryTranslatorFactory
2017-04-24 12:24:29,329 DEBUG [qtp350413251-11] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:282) - parse() - HQL: from com.example.struts2.model.Users where username = :username and password = :password
2017-04-24 12:24:29,363 DEBUG [qtp350413251-11] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:300) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[DOT] Node: '.'
    |           |  |  |  +-[IDENT] Node: 'com'
    |           |  |  |  \-[IDENT] Node: 'example'
    |           |  |  \-[IDENT] Node: 'struts2'
    |           |  \-[IDENT] Node: 'model'
    |           \-[IDENT] Node: 'Users'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[IDENT] Node: 'username'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'username'
          \-[EQ] Node: '='
             +-[IDENT] Node: 'password'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'password'

2017-04-24 12:24:29,364 DEBUG [qtp350413251-11] ast.ErrorCounter (ErrorCounter.java:95) - throwQueryException() : no errors
2017-04-24 12:24:29,429 DEBUG [qtp350413251-11] antlr.HqlSqlBaseWalker (HqlSqlBaseWalker.java:124) - select << begin [level=1, statement=select]
2017-04-24 12:24:29,472 DEBUG [qtp350413251-11] tree.FromElement (FromElement.java:147) - FromClause{level=1} : com.example.struts2.model.Users (<no alias>) -> users0_
2017-04-24 12:24:29,480 DEBUG [qtp350413251-11] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : {synthetic-alias} -> {synthetic-alias}
2017-04-24 12:24:29,487 DEBUG [qtp350413251-11] tree.DotNode (DotNode.java:666) - getDataType() : username -> org.hibernate.type.StringType@141d3d43
2017-04-24 12:24:29,491 DEBUG [qtp350413251-11] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : {synthetic-alias}.username -> users0_.username
2017-04-24 12:24:29,501 DEBUG [qtp350413251-11] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : {synthetic-alias} -> {synthetic-alias}
2017-04-24 12:24:29,506 DEBUG [qtp350413251-11] tree.DotNode (DotNode.java:666) - getDataType() : password -> org.hibernate.type.StringType@141d3d43
2017-04-24 12:24:29,517 DEBUG [qtp350413251-11] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : {synthetic-alias}.password -> users0_.password
2017-04-24 12:24:29,518 DEBUG [qtp350413251-11] antlr.HqlSqlBaseWalker (HqlSqlBaseWalker.java:128) - select : finishing up [level=1, statement=select]
2017-04-24 12:24:29,519 DEBUG [qtp350413251-11] ast.HqlSqlWalker (HqlSqlWalker.java:745) - processQuery() :  ( SELECT ( FromClause{level=1} users users0_ ) ( where ( and ( = ( users0_.username {synthetic-alias} username ) ? ) ( = ( users0_.password {synthetic-alias} password ) ? ) ) ) )
2017-04-24 12:24:29,549 DEBUG [qtp350413251-11] ast.HqlSqlWalker (HqlSqlWalker.java:1021) - Derived SELECT clause created.
2017-04-24 12:24:29,568 DEBUG [qtp350413251-11] util.JoinProcessor (JoinProcessor.java:187) - Using FROM fragment [users users0_]
2017-04-24 12:24:29,580 DEBUG [qtp350413251-11] antlr.HqlSqlBaseWalker (HqlSqlBaseWalker.java:132) - select >> end [level=1, statement=select]
2017-04-24 12:24:29,585 DEBUG [qtp350413251-11] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:269) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'users0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=users,tableAlias=users0_,origin=null,columns={,className=com.example.struts2.model.Users}}}
    |  \-[SQL_TOKEN] SqlFragment: 'users0_.password as password2_0_, users0_.username as username3_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[users0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users users0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=users,tableAlias=users0_,origin=null,columns={,className=com.example.struts2.model.Users}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'users0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path={synthetic-alias}.username,tableAlias=users0_,className=com.example.struts2.model.Users,classAlias=null}
          |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |  \-[IDENT] IdentNode: 'username' {originalText=username}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=username, expectedType=org.hibernate.type.StringType@141d3d43}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'users0_.password' {propertyName=password,dereferenceType=PRIMITIVE,getPropertyPath=password,path={synthetic-alias}.password,tableAlias=users0_,className=com.example.struts2.model.Users,classAlias=null}
             |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             |  \-[IDENT] IdentNode: 'password' {originalText=password}
             \-[NAMED_PARAM] ParameterNode: '?' {name=password, expectedType=org.hibernate.type.StringType@141d3d43}

2017-04-24 12:24:29,589 DEBUG [qtp350413251-11] ast.ErrorCounter (ErrorCounter.java:95) - throwQueryException() : no errors
2017-04-24 12:24:29,624 DEBUG [qtp350413251-11] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:251) - HQL: from com.example.struts2.model.Users where username = :username and password = :password
2017-04-24 12:24:29,630 DEBUG [qtp350413251-11] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:252) - SQL: select users0_.id as id1_0_, users0_.password as password2_0_, users0_.username as username3_0_ from users users0_ where users0_.username=? and users0_.password=?
2017-04-24 12:24:29,633 DEBUG [qtp350413251-11] ast.ErrorCounter (ErrorCounter.java:95) - throwQueryException() : no errors
2017-04-24 12:24:29,716 DEBUG [qtp350413251-11] spi.SqlStatementLogger (SqlStatementLogger.java:92) - select users0_.id as id1_0_, users0_.password as password2_0_, users0_.username as username3_0_ from users users0_ where users0_.username=? and users0_.password=?
2017-04-24 12:24:29,764 DEBUG [qtp350413251-11] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:384) - Result set row: 0
2017-04-24 12:24:29,774 DEBUG [qtp350413251-11] loader.Loader (Loader.java:1527) - Result row: EntityKey[com.example.struts2.model.Users#1]
2017-04-24 12:24:29,797 DEBUG [qtp350413251-11] internal.TwoPhaseLoad (TwoPhaseLoad.java:141) - Resolving associations for [com.example.struts2.model.Users#1]
2017-04-24 12:24:29,804 DEBUG [qtp350413251-11] internal.TwoPhaseLoad (TwoPhaseLoad.java:281) - Done materializing entity [com.example.struts2.model.Users#1]
2017-04-24 12:25:38,886 INFO  [qtp350413251-12] action.Login (Login.java:25) - VALIDATE null null
2017-04-24 12:26:42,164 DEBUG [main] internal.CoreLogging (CoreLogging.java:28) - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2017-04-24 12:26:42,196 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2017-04-24 12:26:42,201 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2017-04-24 12:26:42,209 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2017-04-24 12:26:42,675 INFO  [main] hibernate.Version (Version.java:45) - HHH000412: Hibernate Core {5.2.9.Final}
2017-04-24 12:26:42,681 INFO  [main] cfg.Environment (Environment.java:213) - HHH000206: hibernate.properties not found
2017-04-24 12:26:42,727 DEBUG [main] internal.JaxbCfgProcessor (JaxbCfgProcessor.java:116) - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2017-04-24 12:26:43,213 DEBUG [main] cfg.Configuration (Configuration.java:724) - Building session factory using internal StandardServiceRegistryBuilder
2017-04-24 12:26:43,229 DEBUG [main] spi.ServiceBinding (ServiceBinding.java:68) - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2017-04-24 12:26:43,230 DEBUG [main] cfg.Configuration (Configuration.java:652) - Building session factory using provided StandardServiceRegistry
2017-04-24 12:26:43,280 DEBUG [main] internal.RegionFactoryInitiator (RegionFactoryInitiator.java:75) - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2017-04-24 12:26:43,301 INFO  [main] java.JavaReflectionManager (JavaReflectionManager.java:66) - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2017-04-24 12:26:43,355 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@334ebcaa
2017-04-24 12:26:43,357 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@334ebcaa
2017-04-24 12:26:43,357 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@334ebcaa
2017-04-24 12:26:43,360 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6c1cfa53
2017-04-24 12:26:43,363 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@37d28f02
2017-04-24 12:26:43,365 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration yes_no -> org.hibernate.type.YesNoType@33f2df51
2017-04-24 12:26:43,371 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@61a91c9b
2017-04-24 12:26:43,372 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@61a91c9b
2017-04-24 12:26:43,377 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@61a91c9b
2017-04-24 12:26:43,380 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration character -> org.hibernate.type.CharacterType@462e1e64
2017-04-24 12:26:43,381 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration char -> org.hibernate.type.CharacterType@462e1e64
2017-04-24 12:26:43,382 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@462e1e64
2017-04-24 12:26:43,386 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@22c75c01
2017-04-24 12:26:43,388 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@22c75c01
2017-04-24 12:26:43,389 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@22c75c01
2017-04-24 12:26:43,392 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration integer -> org.hibernate.type.IntegerType@2f0ed952
2017-04-24 12:26:43,393 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration int -> org.hibernate.type.IntegerType@2f0ed952
2017-04-24 12:26:43,393 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2f0ed952
2017-04-24 12:26:43,397 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@4832f03b
2017-04-24 12:26:43,398 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@4832f03b
2017-04-24 12:26:43,399 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4832f03b
2017-04-24 12:26:43,402 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@e11ecfa
2017-04-24 12:26:43,404 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@e11ecfa
2017-04-24 12:26:43,404 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@e11ecfa
2017-04-24 12:26:43,408 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@43acd79e
2017-04-24 12:26:43,409 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@43acd79e
2017-04-24 12:26:43,409 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@43acd79e
2017-04-24 12:26:43,413 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@23a918c7
2017-04-24 12:26:43,414 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@23a918c7
2017-04-24 12:26:43,417 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1f67761b
2017-04-24 12:26:43,418 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1f67761b
2017-04-24 12:26:43,422 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration string -> org.hibernate.type.StringType@77ab22be
2017-04-24 12:26:43,423 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.String -> org.hibernate.type.StringType@77ab22be
2017-04-24 12:26:43,426 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6ca372ef
2017-04-24 12:26:43,429 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@280d4882
2017-04-24 12:26:43,432 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration url -> org.hibernate.type.UrlType@56b859a6
2017-04-24 12:26:43,433 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@56b859a6
2017-04-24 12:26:43,437 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Duration -> org.hibernate.type.DurationType@58015e56
2017-04-24 12:26:43,438 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@58015e56
2017-04-24 12:26:43,494 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Instant -> org.hibernate.type.InstantType@2db4ad1
2017-04-24 12:26:43,501 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2db4ad1
2017-04-24 12:26:43,506 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@6fc1020a
2017-04-24 12:26:43,514 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@6fc1020a
2017-04-24 12:26:43,519 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7dffda8b
2017-04-24 12:26:43,520 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7dffda8b
2017-04-24 12:26:43,527 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@66933239
2017-04-24 12:26:43,528 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@66933239
2017-04-24 12:26:43,542 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4f327096
2017-04-24 12:26:43,543 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4f327096
2017-04-24 12:26:43,547 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@41a374be
2017-04-24 12:26:43,548 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@41a374be
2017-04-24 12:26:43,567 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7be1ce6a
2017-04-24 12:26:43,569 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7be1ce6a
2017-04-24 12:26:43,573 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration date -> org.hibernate.type.DateType@2ddb3ae8
2017-04-24 12:26:43,575 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2ddb3ae8
2017-04-24 12:26:43,579 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration time -> org.hibernate.type.TimeType@6fbc1bb
2017-04-24 12:26:43,580 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6fbc1bb
2017-04-24 12:26:43,583 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration timestamp -> org.hibernate.type.TimestampType@48df4071
2017-04-24 12:26:43,584 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@48df4071
2017-04-24 12:26:43,585 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@48df4071
2017-04-24 12:26:43,590 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@67507df
2017-04-24 12:26:43,594 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration calendar -> org.hibernate.type.CalendarType@33feb805
2017-04-24 12:26:43,595 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@33feb805
2017-04-24 12:26:43,596 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@33feb805
2017-04-24 12:26:43,598 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@34332b8d
2017-04-24 12:26:43,601 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration locale -> org.hibernate.type.LocaleType@7cca01a8
2017-04-24 12:26:43,602 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7cca01a8
2017-04-24 12:26:43,604 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration currency -> org.hibernate.type.CurrencyType@45e9b12d
2017-04-24 12:26:43,605 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@45e9b12d
2017-04-24 12:26:43,608 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@329548d0
2017-04-24 12:26:43,609 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@329548d0
2017-04-24 12:26:43,614 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration class -> org.hibernate.type.ClassType@49d30c6f
2017-04-24 12:26:43,615 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@49d30c6f
2017-04-24 12:26:43,619 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1c7350b0
2017-04-24 12:26:43,621 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1c7350b0
2017-04-24 12:26:43,622 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@50448409
2017-04-24 12:26:43,626 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration binary -> org.hibernate.type.BinaryType@30b975ad
2017-04-24 12:26:43,627 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte[] -> org.hibernate.type.BinaryType@30b975ad
2017-04-24 12:26:43,628 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [B -> org.hibernate.type.BinaryType@30b975ad
2017-04-24 12:26:43,631 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@ea52184
2017-04-24 12:26:43,633 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@ea52184
2017-04-24 12:26:43,634 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@ea52184
2017-04-24 12:26:43,637 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration row_version -> org.hibernate.type.RowVersionType@7f608e21
2017-04-24 12:26:43,640 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration image -> org.hibernate.type.ImageType@66236a0a
2017-04-24 12:26:43,643 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration characters -> org.hibernate.type.CharArrayType@795f8317
2017-04-24 12:26:43,643 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration char[] -> org.hibernate.type.CharArrayType@795f8317
2017-04-24 12:26:43,644 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [C -> org.hibernate.type.CharArrayType@795f8317
2017-04-24 12:26:43,647 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@157ec23b
2017-04-24 12:26:43,648 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@157ec23b
2017-04-24 12:26:43,648 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@157ec23b
2017-04-24 12:26:43,652 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration text -> org.hibernate.type.TextType@47ac613b
2017-04-24 12:26:43,655 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ntext -> org.hibernate.type.NTextType@134ff8f8
2017-04-24 12:26:43,666 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration blob -> org.hibernate.type.BlobType@1f3b992
2017-04-24 12:26:43,667 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1f3b992
2017-04-24 12:26:43,671 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7beae796
2017-04-24 12:26:43,681 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration clob -> org.hibernate.type.ClobType@2eed37f4
2017-04-24 12:26:43,682 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2eed37f4
2017-04-24 12:26:43,689 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration nclob -> org.hibernate.type.NClobType@13dbed9e
2017-04-24 12:26:43,690 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@13dbed9e
2017-04-24 12:26:43,692 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1d50a7ca
2017-04-24 12:26:43,693 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3003e580
2017-04-24 12:26:43,697 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration serializable -> org.hibernate.type.SerializableType@5f174dd2
2017-04-24 12:26:43,704 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration object -> org.hibernate.type.ObjectType@326e0b8e
2017-04-24 12:26:43,705 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@326e0b8e
2017-04-24 12:26:43,707 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@34585ac9
2017-04-24 12:26:43,708 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@76a805b7
2017-04-24 12:26:43,708 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@15f35bc3
2017-04-24 12:26:43,709 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@167381c7
2017-04-24 12:26:43,709 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@608b1fd2
2017-04-24 12:26:43,724 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@56382bc9
2017-04-24 12:26:43,724 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@591a4f8e
2017-04-24 12:26:43,725 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@53ed80d3
2017-04-24 12:26:43,762 WARN  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:70) - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2017-04-24 12:26:43,769 DEBUG [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:154) - No driver class specified
2017-04-24 12:26:43,771 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:126) - HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306/strutsproject]
2017-04-24 12:26:43,772 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:132) - HHH10001001: Connection properties: {user=root, password=}
2017-04-24 12:26:43,773 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:140) - HHH10001003: Autocommit mode: false
2017-04-24 12:26:43,784 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:384) - Initializing Connection pool with 1 Connections
2017-04-24 12:26:43,788 INFO  [main] internal.PooledConnections (PooledConnections.java:41) - HHH000115: Hibernate connection pool size: 1 (min=1)
2017-04-24 12:26:44,348 DEBUG [main] internal.JdbcEnvironmentInitiator (JdbcEnvironmentInitiator.java:72) - Database ->
       name : MySQL
    version : 5.6.30-1
      major : 5
      minor : 6
2017-04-24 12:26:44,349 DEBUG [main] internal.JdbcEnvironmentInitiator (JdbcEnvironmentInitiator.java:83) - Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.9 ( Revision: ${svn.Revision} )
      major : 5
      minor : 1
2017-04-24 12:26:44,353 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:389) - JDBC version : 3.0
2017-04-24 12:26:44,382 INFO  [main] dialect.Dialect (Dialect.java:157) - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2017-04-24 12:26:44,476 DEBUG [main] spi.IdentifierHelperBuilder (IdentifierHelperBuilder.java:117) - JDBC driver metadata reported database stores quoted identifiers in more than one case
2017-04-24 12:26:44,490 DEBUG [main] spi.IdentifierHelperBuilder (IdentifierHelperBuilder.java:191) - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2017-04-24 12:26:44,521 INFO  [main] internal.LobCreatorBuilderImpl (LobCreatorBuilderImpl.java:98) - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2017-04-24 12:26:44,590 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2017-04-24 12:26:44,592 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2017-04-24 12:26:44,594 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2017-04-24 12:26:44,595 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2017-04-24 12:26:44,596 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2017-04-24 12:26:44,599 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2017-04-24 12:26:44,602 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2017-04-24 12:26:44,605 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2017-04-24 12:26:44,608 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2017-04-24 12:26:44,610 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2017-04-24 12:26:44,612 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2017-04-24 12:26:44,613 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2017-04-24 12:26:44,614 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2017-04-24 12:26:44,617 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2017-04-24 12:26:45,157 DEBUG [main] relational.Namespace (Namespace.java:47) - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2017-04-24 12:26:45,225 DEBUG [main] cfg.AnnotationBinder (AnnotationBinder.java:511) - Binding entity from annotated class: com.example.struts2.model.Users
2017-04-24 12:26:45,284 DEBUG [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2017-04-24 12:26:45,317 DEBUG [main] annotations.EntityBinder (EntityBinder.java:419) - Import with entity name users
2017-04-24 12:26:45,346 DEBUG [main] annotations.EntityBinder (EntityBinder.java:695) - Bind entity com.example.struts2.model.Users on table users
2017-04-24 12:26:45,500 DEBUG [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
2017-04-24 12:26:45,524 DEBUG [main] annotations.PropertyBinder (PropertyBinder.java:174) - MetadataSourceProcessor property id with lazy=false
2017-04-24 12:26:45,544 DEBUG [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.example.struts2.model.Users:id]
2017-04-24 12:26:45,549 DEBUG [main] annotations.SimpleValueBinder (SimpleValueBinder.java:411) - building SimpleValue for id
2017-04-24 12:26:45,565 DEBUG [main] annotations.PropertyBinder (PropertyBinder.java:265) - Building property id
2017-04-24 12:26:45,581 DEBUG [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2017-04-24 12:26:45,582 DEBUG [main] annotations.PropertyBinder (PropertyBinder.java:174) - MetadataSourceProcessor property password with lazy=false
2017-04-24 12:26:45,592 DEBUG [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.example.struts2.model.Users:password]
2017-04-24 12:26:45,592 DEBUG [main] annotations.SimpleValueBinder (SimpleValueBinder.java:411) - building SimpleValue for password
2017-04-24 12:26:45,593 DEBUG [main] annotations.PropertyBinder (PropertyBinder.java:265) - Building property password
2017-04-24 12:26:45,597 DEBUG [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=false}
2017-04-24 12:26:45,600 DEBUG [main] annotations.PropertyBinder (PropertyBinder.java:174) - MetadataSourceProcessor property username with lazy=false
2017-04-24 12:26:45,600 DEBUG [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.example.struts2.model.Users:username]
2017-04-24 12:26:45,601 DEBUG [main] annotations.SimpleValueBinder (SimpleValueBinder.java:411) - building SimpleValue for username
2017-04-24 12:26:45,602 DEBUG [main] annotations.PropertyBinder (PropertyBinder.java:265) - Building property username
2017-04-24 12:26:45,607 DEBUG [main] annotations.SimpleValueBinder (SimpleValueBinder.java:456) - Starting fillSimpleValue for id
2017-04-24 12:26:45,608 DEBUG [main] annotations.SimpleValueBinder (SimpleValueBinder.java:456) - Starting fillSimpleValue for password
2017-04-24 12:26:45,609 DEBUG [main] annotations.SimpleValueBinder (SimpleValueBinder.java:456) - Starting fillSimpleValue for username
2017-04-24 12:26:45,612 DEBUG [main] mapping.PrimaryKey (PrimaryKey.java:35) - Forcing column [id] to be non-null as it is part of the primary key for table [users]
2017-04-24 12:26:45,705 DEBUG [main] internal.SessionFactoryImpl (SessionFactoryImpl.java:199) - Building session factory
2017-04-24 12:26:45,709 DEBUG [main] cfg.Settings (Settings.java:69) - SessionFactory name : null
2017-04-24 12:26:45,709 DEBUG [main] cfg.Settings (Settings.java:70) - Automatic flush during beforeCompletion(): enabled
2017-04-24 12:26:45,716 DEBUG [main] cfg.Settings (Settings.java:71) - Automatic session close at end of transaction: disabled
2017-04-24 12:26:45,717 DEBUG [main] cfg.Settings (Settings.java:73) - Statistics: disabled
2017-04-24 12:26:45,717 DEBUG [main] cfg.Settings (Settings.java:75) - Deleted entity synthetic identifier rollback: disabled
2017-04-24 12:26:45,718 DEBUG [main] cfg.Settings (Settings.java:76) - Default entity-mode: pojo
2017-04-24 12:26:45,718 DEBUG [main] cfg.Settings (Settings.java:77) - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2017-04-24 12:26:45,719 DEBUG [main] cfg.Settings (Settings.java:78) - Allow initialization of lazy state outside session : disabled
2017-04-24 12:26:45,719 DEBUG [main] cfg.Settings (Settings.java:80) - Using BatchFetchStyle : LEGACY
2017-04-24 12:26:45,720 DEBUG [main] cfg.Settings (Settings.java:81) - Default batch fetch size: -1
2017-04-24 12:26:45,720 DEBUG [main] cfg.Settings (Settings.java:82) - Maximum outer join fetch depth: 2
2017-04-24 12:26:45,721 DEBUG [main] cfg.Settings (Settings.java:83) - Default null ordering: NONE
2017-04-24 12:26:45,721 DEBUG [main] cfg.Settings (Settings.java:84) - Order SQL updates by primary key: disabled
2017-04-24 12:26:45,722 DEBUG [main] cfg.Settings (Settings.java:85) - Order SQL inserts for batching: disabled
2017-04-24 12:26:45,722 DEBUG [main] cfg.Settings (Settings.java:87) - multi-tenancy strategy : NONE
2017-04-24 12:26:45,722 DEBUG [main] cfg.Settings (Settings.java:89) - JTA Track by Thread: enabled
2017-04-24 12:26:45,727 DEBUG [main] cfg.Settings (Settings.java:91) - Query language substitutions: {}
2017-04-24 12:26:45,728 DEBUG [main] cfg.Settings (Settings.java:92) - JPA query language strict compliance: disabled
2017-04-24 12:26:45,728 DEBUG [main] cfg.Settings (Settings.java:93) - Named query checking : enabled
2017-04-24 12:26:45,729 DEBUG [main] cfg.Settings (Settings.java:95) - Second-level cache: enabled
2017-04-24 12:26:45,729 DEBUG [main] cfg.Settings (Settings.java:96) - Second-level query cache: disabled
2017-04-24 12:26:45,729 DEBUG [main] cfg.Settings (Settings.java:97) - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@65ef48f2
2017-04-24 12:26:45,730 DEBUG [main] cfg.Settings (Settings.java:98) - Second-level cache region prefix: null
2017-04-24 12:26:45,730 DEBUG [main] cfg.Settings (Settings.java:99) - Optimize second-level cache for minimal puts: disabled
2017-04-24 12:26:45,731 DEBUG [main] cfg.Settings (Settings.java:100) - Structured second-level cache entries: disabled
2017-04-24 12:26:45,731 DEBUG [main] cfg.Settings (Settings.java:101) - Second-level cache direct-reference entries: disabled
2017-04-24 12:26:45,732 DEBUG [main] cfg.Settings (Settings.java:102) - Automatic eviction of collection cache: disabled
2017-04-24 12:26:45,733 DEBUG [main] cfg.Settings (Settings.java:104) - JDBC batch size: 15
2017-04-24 12:26:45,734 DEBUG [main] cfg.Settings (Settings.java:105) - JDBC batch updates for versioned data: enabled
2017-04-24 12:26:45,734 DEBUG [main] cfg.Settings (Settings.java:106) - Scrollable result sets: enabled
2017-04-24 12:26:45,734 DEBUG [main] cfg.Settings (Settings.java:107) - Wrap result sets: disabled
2017-04-24 12:26:45,735 DEBUG [main] cfg.Settings (Settings.java:108) - JDBC3 getGeneratedKeys(): enabled
2017-04-24 12:26:45,735 DEBUG [main] cfg.Settings (Settings.java:109) - JDBC result set fetch size: null
2017-04-24 12:26:45,736 DEBUG [main] cfg.Settings (Settings.java:110) - Connection release mode: AFTER_TRANSACTION
2017-04-24 12:26:45,736 DEBUG [main] cfg.Settings (Settings.java:111) - Generate SQL with comments: disabled
2017-04-24 12:26:45,903 DEBUG [main] internal.SessionFactoryImpl (SessionFactoryImpl.java:254) - Session factory constructed with filter configurations : {}
2017-04-24 12:26:45,904 DEBUG [main] internal.SessionFactoryImpl (SessionFactoryImpl.java:255) - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, java.vendor.url=http://java.oracle.com/, user.timezone=Asia/Jakarta, os.name=Linux, java.vm.specification.version=1.8, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, maven.home=/usr/share/maven, sun.cpu.endian=little, user.home=/root, user.language=en, java.specification.vendor=Oracle Corporation, java.home=/usr/lib/jvm/java-8-openjdk-amd64/jre, file.separator=/, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, sun.boot.class.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/classes, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_111-8u111-b14-3-b14, user.name=root, path.separator=:, securerandom.source=file:/dev/./urandom, hibernate.connection.username=root, os.version=4.8.0-kali2-amd64, java.endorsed.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/endorsed, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/strutsproject, file.encoding=UTF-8, guice.disable.misplaced.annotation.check=true, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=/tmp, java.version=1.8.0_111, user.dir=/root/Source/java/struts/struts-project, os.arch=amd64, maven.multiModuleProjectDirectory=/root/Source/java/struts/struts-project, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@47b33e07, java.library.path=/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.111-b14, classworlds.conf=/usr/share/maven/bin/m2.conf, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.pool_size=1, java.ext.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
2017-04-24 12:26:45,932 DEBUG [main] spi.JaccIntegrator (JaccIntegrator.java:80) - Skipping JACC integration as it was not enabled
2017-04-24 12:26:45,954 DEBUG [main] internal.SessionFactoryImpl (SessionFactoryImpl.java:294) - Instantiated session factory
2017-04-24 12:26:46,079 DEBUG [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [com.example.struts2.model.Users] is safe
2017-04-24 12:26:46,080 DEBUG [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.struts2.model.Users
2017-04-24 12:26:46,115 DEBUG [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [com.example.struts2.model.Users] is safe
2017-04-24 12:26:46,116 DEBUG [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.struts2.model.Users
2017-04-24 12:26:46,285 DEBUG [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3598) - Static SQL for entity: com.example.struts2.model.Users
2017-04-24 12:26:46,286 DEBUG [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3603) -  Version select: select id from users where id =?
2017-04-24 12:26:46,286 DEBUG [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3606) -  Snapshot select: select users_.id, users_.password as password2_0_, users_.username as username3_0_ from users users_ where users_.id=?
2017-04-24 12:26:46,287 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Insert 0: insert into users (password, username, id) values (?, ?, ?)
2017-04-24 12:26:46,288 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Update 0: update users set password=?, username=? where id=?
2017-04-24 12:26:46,289 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Delete 0: delete from users where id=?
2017-04-24 12:26:46,289 DEBUG [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3614) -  Identity insert: insert into users (password, username) values (?, ?)
2017-04-24 12:26:46,342 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c5df615]
2017-04-24 12:26:46,346 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:26:46,347 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:26:46,349 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:26:46,379 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:26:46,391 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:26:46,400 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [NONE]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-24 12:26:46,402 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18d47df0]
2017-04-24 12:26:46,404 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:26:46,404 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:26:46,405 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:26:46,406 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:26:46,407 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:26:46,408 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [READ]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-24 12:26:46,408 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@697a0948]
2017-04-24 12:26:46,409 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:26:46,410 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:26:46,410 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:26:46,411 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:26:46,412 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:26:46,413 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [UPGRADE]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=? for update
2017-04-24 12:26:46,414 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4776e209]
2017-04-24 12:26:46,414 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:26:46,415 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:26:46,416 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:26:46,416 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:26:46,418 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:26:46,421 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [UPGRADE_NOWAIT]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=? for update
2017-04-24 12:26:46,427 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f536481]
2017-04-24 12:26:46,429 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:26:46,429 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:26:46,430 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:26:46,431 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:26:46,432 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:26:46,433 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [UPGRADE_SKIPLOCKED]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=? for update
2017-04-24 12:26:46,433 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22a260ff]
2017-04-24 12:26:46,434 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:26:46,437 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:26:46,438 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:26:46,440 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:26:46,442 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:26:46,443 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [FORCE]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=? for update
2017-04-24 12:26:46,443 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50b734c4]
2017-04-24 12:26:46,444 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:26:46,445 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:26:46,445 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:26:46,448 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:26:46,453 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:26:46,454 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [PESSIMISTIC_READ]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=? lock in share mode
2017-04-24 12:26:46,455 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16d0e521]
2017-04-24 12:26:46,458 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:26:46,459 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:26:46,459 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:26:46,460 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:26:46,461 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:26:46,462 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [PESSIMISTIC_WRITE]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=? for update
2017-04-24 12:26:46,463 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ab4aa5e]
2017-04-24 12:26:46,464 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:26:46,464 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:26:46,465 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:26:46,466 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:26:46,468 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:26:46,469 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [PESSIMISTIC_FORCE_INCREMENT]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=? for update
2017-04-24 12:26:46,470 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a7cb3a4]
2017-04-24 12:26:46,471 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:26:46,472 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:26:46,473 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:26:46,475 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:26:46,480 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:26:46,481 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [OPTIMISTIC]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-24 12:26:46,481 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33e0c716]
2017-04-24 12:26:46,482 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:26:46,483 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:26:46,484 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:26:46,486 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:26:46,489 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:26:46,490 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [OPTIMISTIC_FORCE_INCREMENT]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-24 12:26:46,527 DEBUG [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_MERGE on entity com.example.struts2.model.Users: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-24 12:26:46,529 DEBUG [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_REFRESH on entity com.example.struts2.model.Users: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-24 12:26:46,593 DEBUG [main] spi.SchemaManagementToolCoordinator (SchemaManagementToolCoordinator.java:56) - No actions specified; doing nothing
2017-04-24 12:26:46,594 DEBUG [main] internal.JtaPlatformInitiator (JtaPlatformInitiator.java:42) - No JtaPlatform was specified, checking resolver
2017-04-24 12:26:46,595 DEBUG [main] internal.JtaPlatformResolverInitiator (JtaPlatformResolverInitiator.java:33) - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2017-04-24 12:26:46,611 DEBUG [main] internal.StandardJtaPlatformResolver (StandardJtaPlatformResolver.java:102) - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2017-04-24 12:26:46,616 DEBUG [main] spi.NamedQueryRepository (NamedQueryRepository.java:151) - Checking 0 named HQL queries
2017-04-24 12:26:46,617 DEBUG [main] spi.NamedQueryRepository (NamedQueryRepository.java:167) - Checking 0 named SQL queries
2017-04-24 12:26:46,622 DEBUG [main] internal.SessionFactoryRegistry (SessionFactoryRegistry.java:52) - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@a90e2c1
2017-04-24 12:26:46,628 DEBUG [main] internal.SessionFactoryRegistry (SessionFactoryRegistry.java:74) - Registering SessionFactory: 29cd63ea-1049-4f4b-b326-a9031b8b2d84 (<unnamed>)
2017-04-24 12:26:46,630 DEBUG [main] internal.SessionFactoryRegistry (SessionFactoryRegistry.java:81) - Not binding SessionFactory to JNDI, no JNDI name configured
2017-04-24 12:27:02,320 DEBUG [qtp2096194236-12] internal.StatisticsInitiator (StatisticsInitiator.java:82) - Statistics initialized [enabled=false]
2017-04-24 12:27:02,427 INFO  [qtp2096194236-12] action.Login (Login.java:25) - VALIDATE admin admin
2017-04-24 12:27:02,436 DEBUG [qtp2096194236-12] internal.TransactionImpl (TransactionImpl.java:55) - begin
2017-04-24 12:27:02,492 DEBUG [qtp2096194236-12] internal.QueryTranslatorFactoryInitiator (QueryTranslatorFactoryInitiator.java:45) - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@7fdc0f9f
2017-04-24 12:27:02,496 INFO  [qtp2096194236-12] internal.QueryTranslatorFactoryInitiator (QueryTranslatorFactoryInitiator.java:47) - HHH000397: Using ASTQueryTranslatorFactory
2017-04-24 12:27:02,582 DEBUG [qtp2096194236-12] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:282) - parse() - HQL: from com.example.struts2.model.Users where username = :username and password = :password
2017-04-24 12:27:02,622 DEBUG [qtp2096194236-12] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:300) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[DOT] Node: '.'
    |           |  |  |  +-[IDENT] Node: 'com'
    |           |  |  |  \-[IDENT] Node: 'example'
    |           |  |  \-[IDENT] Node: 'struts2'
    |           |  \-[IDENT] Node: 'model'
    |           \-[IDENT] Node: 'Users'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[IDENT] Node: 'username'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'username'
          \-[EQ] Node: '='
             +-[IDENT] Node: 'password'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'password'

2017-04-24 12:27:02,622 DEBUG [qtp2096194236-12] ast.ErrorCounter (ErrorCounter.java:95) - throwQueryException() : no errors
2017-04-24 12:27:02,694 DEBUG [qtp2096194236-12] antlr.HqlSqlBaseWalker (HqlSqlBaseWalker.java:124) - select << begin [level=1, statement=select]
2017-04-24 12:27:02,747 DEBUG [qtp2096194236-12] tree.FromElement (FromElement.java:147) - FromClause{level=1} : com.example.struts2.model.Users (<no alias>) -> users0_
2017-04-24 12:27:02,752 DEBUG [qtp2096194236-12] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : {synthetic-alias} -> {synthetic-alias}
2017-04-24 12:27:02,760 DEBUG [qtp2096194236-12] tree.DotNode (DotNode.java:666) - getDataType() : username -> org.hibernate.type.StringType@77ab22be
2017-04-24 12:27:02,765 DEBUG [qtp2096194236-12] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : {synthetic-alias}.username -> users0_.username
2017-04-24 12:27:02,781 DEBUG [qtp2096194236-12] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : {synthetic-alias} -> {synthetic-alias}
2017-04-24 12:27:02,785 DEBUG [qtp2096194236-12] tree.DotNode (DotNode.java:666) - getDataType() : password -> org.hibernate.type.StringType@77ab22be
2017-04-24 12:27:02,790 DEBUG [qtp2096194236-12] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : {synthetic-alias}.password -> users0_.password
2017-04-24 12:27:02,794 DEBUG [qtp2096194236-12] antlr.HqlSqlBaseWalker (HqlSqlBaseWalker.java:128) - select : finishing up [level=1, statement=select]
2017-04-24 12:27:02,797 DEBUG [qtp2096194236-12] ast.HqlSqlWalker (HqlSqlWalker.java:745) - processQuery() :  ( SELECT ( FromClause{level=1} users users0_ ) ( where ( and ( = ( users0_.username {synthetic-alias} username ) ? ) ( = ( users0_.password {synthetic-alias} password ) ? ) ) ) )
2017-04-24 12:27:02,820 DEBUG [qtp2096194236-12] ast.HqlSqlWalker (HqlSqlWalker.java:1021) - Derived SELECT clause created.
2017-04-24 12:27:02,844 DEBUG [qtp2096194236-12] util.JoinProcessor (JoinProcessor.java:187) - Using FROM fragment [users users0_]
2017-04-24 12:27:02,847 DEBUG [qtp2096194236-12] antlr.HqlSqlBaseWalker (HqlSqlBaseWalker.java:132) - select >> end [level=1, statement=select]
2017-04-24 12:27:02,853 DEBUG [qtp2096194236-12] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:269) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'users0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=users,tableAlias=users0_,origin=null,columns={,className=com.example.struts2.model.Users}}}
    |  \-[SQL_TOKEN] SqlFragment: 'users0_.password as password2_0_, users0_.username as username3_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[users0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users users0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=users,tableAlias=users0_,origin=null,columns={,className=com.example.struts2.model.Users}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'users0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path={synthetic-alias}.username,tableAlias=users0_,className=com.example.struts2.model.Users,classAlias=null}
          |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |  \-[IDENT] IdentNode: 'username' {originalText=username}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=username, expectedType=org.hibernate.type.StringType@77ab22be}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'users0_.password' {propertyName=password,dereferenceType=PRIMITIVE,getPropertyPath=password,path={synthetic-alias}.password,tableAlias=users0_,className=com.example.struts2.model.Users,classAlias=null}
             |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             |  \-[IDENT] IdentNode: 'password' {originalText=password}
             \-[NAMED_PARAM] ParameterNode: '?' {name=password, expectedType=org.hibernate.type.StringType@77ab22be}

2017-04-24 12:27:02,856 DEBUG [qtp2096194236-12] ast.ErrorCounter (ErrorCounter.java:95) - throwQueryException() : no errors
2017-04-24 12:27:02,883 DEBUG [qtp2096194236-12] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:251) - HQL: from com.example.struts2.model.Users where username = :username and password = :password
2017-04-24 12:27:02,885 DEBUG [qtp2096194236-12] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:252) - SQL: select users0_.id as id1_0_, users0_.password as password2_0_, users0_.username as username3_0_ from users users0_ where users0_.username=? and users0_.password=?
2017-04-24 12:27:02,893 DEBUG [qtp2096194236-12] ast.ErrorCounter (ErrorCounter.java:95) - throwQueryException() : no errors
2017-04-24 12:27:02,949 DEBUG [qtp2096194236-12] spi.SqlStatementLogger (SqlStatementLogger.java:92) - select users0_.id as id1_0_, users0_.password as password2_0_, users0_.username as username3_0_ from users users0_ where users0_.username=? and users0_.password=?
2017-04-24 12:27:03,050 DEBUG [qtp2096194236-12] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:384) - Result set row: 0
2017-04-24 12:27:03,065 DEBUG [qtp2096194236-12] loader.Loader (Loader.java:1527) - Result row: EntityKey[com.example.struts2.model.Users#1]
2017-04-24 12:27:03,097 DEBUG [qtp2096194236-12] internal.TwoPhaseLoad (TwoPhaseLoad.java:141) - Resolving associations for [com.example.struts2.model.Users#1]
2017-04-24 12:27:03,110 DEBUG [qtp2096194236-12] internal.TwoPhaseLoad (TwoPhaseLoad.java:281) - Done materializing entity [com.example.struts2.model.Users#1]
2017-04-24 12:27:48,372 DEBUG [main] internal.CoreLogging (CoreLogging.java:28) - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2017-04-24 12:27:48,406 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2017-04-24 12:27:48,412 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2017-04-24 12:27:48,420 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2017-04-24 12:27:48,847 INFO  [main] hibernate.Version (Version.java:45) - HHH000412: Hibernate Core {5.2.9.Final}
2017-04-24 12:27:48,852 INFO  [main] cfg.Environment (Environment.java:213) - HHH000206: hibernate.properties not found
2017-04-24 12:27:48,894 DEBUG [main] internal.JaxbCfgProcessor (JaxbCfgProcessor.java:116) - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2017-04-24 12:27:49,350 DEBUG [main] cfg.Configuration (Configuration.java:724) - Building session factory using internal StandardServiceRegistryBuilder
2017-04-24 12:27:49,367 DEBUG [main] spi.ServiceBinding (ServiceBinding.java:68) - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2017-04-24 12:27:49,368 DEBUG [main] cfg.Configuration (Configuration.java:652) - Building session factory using provided StandardServiceRegistry
2017-04-24 12:27:49,417 DEBUG [main] internal.RegionFactoryInitiator (RegionFactoryInitiator.java:75) - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2017-04-24 12:27:49,436 INFO  [main] java.JavaReflectionManager (JavaReflectionManager.java:66) - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2017-04-24 12:27:49,488 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@6468a7b6
2017-04-24 12:27:49,489 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@6468a7b6
2017-04-24 12:27:49,494 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6468a7b6
2017-04-24 12:27:49,499 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@52b06bef
2017-04-24 12:27:49,505 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6056232d
2017-04-24 12:27:49,509 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration yes_no -> org.hibernate.type.YesNoType@7bac686b
2017-04-24 12:27:49,517 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@2121d1f9
2017-04-24 12:27:49,521 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@2121d1f9
2017-04-24 12:27:49,527 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2121d1f9
2017-04-24 12:27:49,530 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration character -> org.hibernate.type.CharacterType@49f40c00
2017-04-24 12:27:49,531 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration char -> org.hibernate.type.CharacterType@49f40c00
2017-04-24 12:27:49,533 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@49f40c00
2017-04-24 12:27:49,537 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@3e5fd2b1
2017-04-24 12:27:49,538 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@3e5fd2b1
2017-04-24 12:27:49,539 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3e5fd2b1
2017-04-24 12:27:49,542 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration integer -> org.hibernate.type.IntegerType@6d074b14
2017-04-24 12:27:49,543 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration int -> org.hibernate.type.IntegerType@6d074b14
2017-04-24 12:27:49,543 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6d074b14
2017-04-24 12:27:49,547 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@5a8816cc
2017-04-24 12:27:49,548 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@5a8816cc
2017-04-24 12:27:49,548 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5a8816cc
2017-04-24 12:27:49,554 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@43984213
2017-04-24 12:27:49,555 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@43984213
2017-04-24 12:27:49,556 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@43984213
2017-04-24 12:27:49,563 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@38f77cd9
2017-04-24 12:27:49,566 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@38f77cd9
2017-04-24 12:27:49,569 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@38f77cd9
2017-04-24 12:27:49,576 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4483d35
2017-04-24 12:27:49,580 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4483d35
2017-04-24 12:27:49,585 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2f4ba1ae
2017-04-24 12:27:49,588 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2f4ba1ae
2017-04-24 12:27:49,597 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration string -> org.hibernate.type.StringType@1b6924cb
2017-04-24 12:27:49,601 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.String -> org.hibernate.type.StringType@1b6924cb
2017-04-24 12:27:49,607 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6ed043d3
2017-04-24 12:27:49,615 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3d19d85
2017-04-24 12:27:49,620 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration url -> org.hibernate.type.UrlType@42aae04d
2017-04-24 12:27:49,624 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@42aae04d
2017-04-24 12:27:49,631 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Duration -> org.hibernate.type.DurationType@7426a448
2017-04-24 12:27:49,634 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7426a448
2017-04-24 12:27:49,704 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Instant -> org.hibernate.type.InstantType@2513a118
2017-04-24 12:27:49,708 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2513a118
2017-04-24 12:27:49,725 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@2629d5dc
2017-04-24 12:27:49,732 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@2629d5dc
2017-04-24 12:27:49,742 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6abdec0e
2017-04-24 12:27:49,745 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6abdec0e
2017-04-24 12:27:49,753 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@41ad373
2017-04-24 12:27:49,759 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@41ad373
2017-04-24 12:27:49,766 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@78a515e4
2017-04-24 12:27:49,770 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@78a515e4
2017-04-24 12:27:49,776 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@8cc8cdb
2017-04-24 12:27:49,780 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@8cc8cdb
2017-04-24 12:27:49,795 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6dc9da2d
2017-04-24 12:27:49,799 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6dc9da2d
2017-04-24 12:27:49,805 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration date -> org.hibernate.type.DateType@3c91530d
2017-04-24 12:27:49,809 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@3c91530d
2017-04-24 12:27:49,818 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration time -> org.hibernate.type.TimeType@f1dd5b4
2017-04-24 12:27:49,821 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@f1dd5b4
2017-04-24 12:27:49,827 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration timestamp -> org.hibernate.type.TimestampType@6e3ecf5c
2017-04-24 12:27:49,831 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6e3ecf5c
2017-04-24 12:27:49,834 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6e3ecf5c
2017-04-24 12:27:49,843 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@692dba54
2017-04-24 12:27:49,849 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration calendar -> org.hibernate.type.CalendarType@48eb001a
2017-04-24 12:27:49,853 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@48eb001a
2017-04-24 12:27:49,856 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@48eb001a
2017-04-24 12:27:49,861 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6f8aba08
2017-04-24 12:27:49,870 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration locale -> org.hibernate.type.LocaleType@35c9a231
2017-04-24 12:27:49,873 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@35c9a231
2017-04-24 12:27:49,879 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration currency -> org.hibernate.type.CurrencyType@2d55e826
2017-04-24 12:27:49,882 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2d55e826
2017-04-24 12:27:49,888 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@29b40b3
2017-04-24 12:27:49,891 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@29b40b3
2017-04-24 12:27:49,898 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration class -> org.hibernate.type.ClassType@4fdca00a
2017-04-24 12:27:49,901 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4fdca00a
2017-04-24 12:27:49,908 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3bc4ef12
2017-04-24 12:27:49,912 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3bc4ef12
2017-04-24 12:27:49,919 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2b0dc227
2017-04-24 12:27:49,925 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration binary -> org.hibernate.type.BinaryType@2a334bac
2017-04-24 12:27:49,928 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte[] -> org.hibernate.type.BinaryType@2a334bac
2017-04-24 12:27:49,932 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [B -> org.hibernate.type.BinaryType@2a334bac
2017-04-24 12:27:49,938 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3c854752
2017-04-24 12:27:49,940 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3c854752
2017-04-24 12:27:49,945 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3c854752
2017-04-24 12:27:49,951 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration row_version -> org.hibernate.type.RowVersionType@210d2a6c
2017-04-24 12:27:49,956 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration image -> org.hibernate.type.ImageType@77c10a5f
2017-04-24 12:27:49,961 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration characters -> org.hibernate.type.CharArrayType@355c94be
2017-04-24 12:27:49,965 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration char[] -> org.hibernate.type.CharArrayType@355c94be
2017-04-24 12:27:49,969 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [C -> org.hibernate.type.CharArrayType@355c94be
2017-04-24 12:27:49,977 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1dd74143
2017-04-24 12:27:49,981 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1dd74143
2017-04-24 12:27:49,984 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1dd74143
2017-04-24 12:27:49,989 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration text -> org.hibernate.type.TextType@66f28a1f
2017-04-24 12:27:49,993 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ntext -> org.hibernate.type.NTextType@df921b1
2017-04-24 12:27:50,007 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration blob -> org.hibernate.type.BlobType@6b63e6ad
2017-04-24 12:27:50,010 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6b63e6ad
2017-04-24 12:27:50,021 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@52bf7bf6
2017-04-24 12:27:50,040 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration clob -> org.hibernate.type.ClobType@3fb9a67f
2017-04-24 12:27:50,043 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3fb9a67f
2017-04-24 12:27:50,053 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration nclob -> org.hibernate.type.NClobType@2b38b1f
2017-04-24 12:27:50,057 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2b38b1f
2017-04-24 12:27:50,061 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2e766822
2017-04-24 12:27:50,066 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@21a02556
2017-04-24 12:27:50,072 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration serializable -> org.hibernate.type.SerializableType@45aca496
2017-04-24 12:27:50,082 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration object -> org.hibernate.type.ObjectType@41184371
2017-04-24 12:27:50,086 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@41184371
2017-04-24 12:27:50,090 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@15f35bc3
2017-04-24 12:27:50,096 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@167381c7
2017-04-24 12:27:50,100 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@608b1fd2
2017-04-24 12:27:50,101 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@56382bc9
2017-04-24 12:27:50,102 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@591a4f8e
2017-04-24 12:27:50,106 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@53ed80d3
2017-04-24 12:27:50,107 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6ba060f3
2017-04-24 12:27:50,108 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7c51782d
2017-04-24 12:27:50,137 WARN  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:70) - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2017-04-24 12:27:50,142 DEBUG [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:154) - No driver class specified
2017-04-24 12:27:50,148 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:126) - HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306/strutsproject]
2017-04-24 12:27:50,153 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:132) - HHH10001001: Connection properties: {user=root, password=}
2017-04-24 12:27:50,157 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:140) - HHH10001003: Autocommit mode: false
2017-04-24 12:27:50,168 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:384) - Initializing Connection pool with 1 Connections
2017-04-24 12:27:50,172 INFO  [main] internal.PooledConnections (PooledConnections.java:41) - HHH000115: Hibernate connection pool size: 1 (min=1)
2017-04-24 12:27:50,699 DEBUG [main] internal.JdbcEnvironmentInitiator (JdbcEnvironmentInitiator.java:72) - Database ->
       name : MySQL
    version : 5.6.30-1
      major : 5
      minor : 6
2017-04-24 12:27:50,700 DEBUG [main] internal.JdbcEnvironmentInitiator (JdbcEnvironmentInitiator.java:83) - Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.9 ( Revision: ${svn.Revision} )
      major : 5
      minor : 1
2017-04-24 12:27:50,704 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:389) - JDBC version : 3.0
2017-04-24 12:27:50,733 INFO  [main] dialect.Dialect (Dialect.java:157) - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2017-04-24 12:27:50,829 DEBUG [main] spi.IdentifierHelperBuilder (IdentifierHelperBuilder.java:117) - JDBC driver metadata reported database stores quoted identifiers in more than one case
2017-04-24 12:27:50,839 DEBUG [main] spi.IdentifierHelperBuilder (IdentifierHelperBuilder.java:191) - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2017-04-24 12:27:50,872 INFO  [main] internal.LobCreatorBuilderImpl (LobCreatorBuilderImpl.java:98) - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2017-04-24 12:27:50,944 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2017-04-24 12:27:50,947 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2017-04-24 12:27:50,949 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2017-04-24 12:27:50,951 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2017-04-24 12:27:50,952 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2017-04-24 12:27:50,955 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2017-04-24 12:27:50,957 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2017-04-24 12:27:50,961 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2017-04-24 12:27:50,964 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2017-04-24 12:27:50,966 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2017-04-24 12:27:50,968 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2017-04-24 12:27:50,970 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2017-04-24 12:27:50,971 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2017-04-24 12:27:50,974 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2017-04-24 12:27:51,544 DEBUG [main] relational.Namespace (Namespace.java:47) - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2017-04-24 12:27:51,614 DEBUG [main] cfg.AnnotationBinder (AnnotationBinder.java:511) - Binding entity from annotated class: com.example.struts2.model.Users
2017-04-24 12:27:51,674 DEBUG [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2017-04-24 12:27:51,691 DEBUG [main] annotations.EntityBinder (EntityBinder.java:419) - Import with entity name users
2017-04-24 12:27:51,709 DEBUG [main] annotations.EntityBinder (EntityBinder.java:695) - Bind entity com.example.struts2.model.Users on table users
2017-04-24 12:27:51,790 DEBUG [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
2017-04-24 12:27:51,801 DEBUG [main] annotations.PropertyBinder (PropertyBinder.java:174) - MetadataSourceProcessor property id with lazy=false
2017-04-24 12:27:51,808 DEBUG [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.example.struts2.model.Users:id]
2017-04-24 12:27:51,814 DEBUG [main] annotations.SimpleValueBinder (SimpleValueBinder.java:411) - building SimpleValue for id
2017-04-24 12:27:51,822 DEBUG [main] annotations.PropertyBinder (PropertyBinder.java:265) - Building property id
2017-04-24 12:27:51,834 DEBUG [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2017-04-24 12:27:51,835 DEBUG [main] annotations.PropertyBinder (PropertyBinder.java:174) - MetadataSourceProcessor property password with lazy=false
2017-04-24 12:27:51,836 DEBUG [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.example.struts2.model.Users:password]
2017-04-24 12:27:51,837 DEBUG [main] annotations.SimpleValueBinder (SimpleValueBinder.java:411) - building SimpleValue for password
2017-04-24 12:27:51,838 DEBUG [main] annotations.PropertyBinder (PropertyBinder.java:265) - Building property password
2017-04-24 12:27:51,844 DEBUG [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=false}
2017-04-24 12:27:51,852 DEBUG [main] annotations.PropertyBinder (PropertyBinder.java:174) - MetadataSourceProcessor property username with lazy=false
2017-04-24 12:27:51,853 DEBUG [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.example.struts2.model.Users:username]
2017-04-24 12:27:51,854 DEBUG [main] annotations.SimpleValueBinder (SimpleValueBinder.java:411) - building SimpleValue for username
2017-04-24 12:27:51,855 DEBUG [main] annotations.PropertyBinder (PropertyBinder.java:265) - Building property username
2017-04-24 12:27:51,860 DEBUG [main] annotations.SimpleValueBinder (SimpleValueBinder.java:456) - Starting fillSimpleValue for id
2017-04-24 12:27:51,862 DEBUG [main] annotations.SimpleValueBinder (SimpleValueBinder.java:456) - Starting fillSimpleValue for password
2017-04-24 12:27:51,863 DEBUG [main] annotations.SimpleValueBinder (SimpleValueBinder.java:456) - Starting fillSimpleValue for username
2017-04-24 12:27:51,867 DEBUG [main] mapping.PrimaryKey (PrimaryKey.java:35) - Forcing column [id] to be non-null as it is part of the primary key for table [users]
2017-04-24 12:27:51,963 DEBUG [main] internal.SessionFactoryImpl (SessionFactoryImpl.java:199) - Building session factory
2017-04-24 12:27:51,967 DEBUG [main] cfg.Settings (Settings.java:69) - SessionFactory name : null
2017-04-24 12:27:51,968 DEBUG [main] cfg.Settings (Settings.java:70) - Automatic flush during beforeCompletion(): enabled
2017-04-24 12:27:51,971 DEBUG [main] cfg.Settings (Settings.java:71) - Automatic session close at end of transaction: disabled
2017-04-24 12:27:51,972 DEBUG [main] cfg.Settings (Settings.java:73) - Statistics: disabled
2017-04-24 12:27:51,973 DEBUG [main] cfg.Settings (Settings.java:75) - Deleted entity synthetic identifier rollback: disabled
2017-04-24 12:27:51,974 DEBUG [main] cfg.Settings (Settings.java:76) - Default entity-mode: pojo
2017-04-24 12:27:51,974 DEBUG [main] cfg.Settings (Settings.java:77) - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2017-04-24 12:27:51,976 DEBUG [main] cfg.Settings (Settings.java:78) - Allow initialization of lazy state outside session : disabled
2017-04-24 12:27:51,979 DEBUG [main] cfg.Settings (Settings.java:80) - Using BatchFetchStyle : LEGACY
2017-04-24 12:27:51,980 DEBUG [main] cfg.Settings (Settings.java:81) - Default batch fetch size: -1
2017-04-24 12:27:51,980 DEBUG [main] cfg.Settings (Settings.java:82) - Maximum outer join fetch depth: 2
2017-04-24 12:27:51,981 DEBUG [main] cfg.Settings (Settings.java:83) - Default null ordering: NONE
2017-04-24 12:27:51,982 DEBUG [main] cfg.Settings (Settings.java:84) - Order SQL updates by primary key: disabled
2017-04-24 12:27:51,983 DEBUG [main] cfg.Settings (Settings.java:85) - Order SQL inserts for batching: disabled
2017-04-24 12:27:51,984 DEBUG [main] cfg.Settings (Settings.java:87) - multi-tenancy strategy : NONE
2017-04-24 12:27:51,988 DEBUG [main] cfg.Settings (Settings.java:89) - JTA Track by Thread: enabled
2017-04-24 12:27:51,990 DEBUG [main] cfg.Settings (Settings.java:91) - Query language substitutions: {}
2017-04-24 12:27:51,991 DEBUG [main] cfg.Settings (Settings.java:92) - JPA query language strict compliance: disabled
2017-04-24 12:27:51,993 DEBUG [main] cfg.Settings (Settings.java:93) - Named query checking : enabled
2017-04-24 12:27:51,993 DEBUG [main] cfg.Settings (Settings.java:95) - Second-level cache: enabled
2017-04-24 12:27:51,995 DEBUG [main] cfg.Settings (Settings.java:96) - Second-level query cache: disabled
2017-04-24 12:27:51,996 DEBUG [main] cfg.Settings (Settings.java:97) - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@72543547
2017-04-24 12:27:51,996 DEBUG [main] cfg.Settings (Settings.java:98) - Second-level cache region prefix: null
2017-04-24 12:27:51,997 DEBUG [main] cfg.Settings (Settings.java:99) - Optimize second-level cache for minimal puts: disabled
2017-04-24 12:27:51,997 DEBUG [main] cfg.Settings (Settings.java:100) - Structured second-level cache entries: disabled
2017-04-24 12:27:51,998 DEBUG [main] cfg.Settings (Settings.java:101) - Second-level cache direct-reference entries: disabled
2017-04-24 12:27:51,998 DEBUG [main] cfg.Settings (Settings.java:102) - Automatic eviction of collection cache: disabled
2017-04-24 12:27:51,999 DEBUG [main] cfg.Settings (Settings.java:104) - JDBC batch size: 15
2017-04-24 12:27:52,000 DEBUG [main] cfg.Settings (Settings.java:105) - JDBC batch updates for versioned data: enabled
2017-04-24 12:27:52,001 DEBUG [main] cfg.Settings (Settings.java:106) - Scrollable result sets: enabled
2017-04-24 12:27:52,001 DEBUG [main] cfg.Settings (Settings.java:107) - Wrap result sets: disabled
2017-04-24 12:27:52,002 DEBUG [main] cfg.Settings (Settings.java:108) - JDBC3 getGeneratedKeys(): enabled
2017-04-24 12:27:52,002 DEBUG [main] cfg.Settings (Settings.java:109) - JDBC result set fetch size: null
2017-04-24 12:27:52,003 DEBUG [main] cfg.Settings (Settings.java:110) - Connection release mode: AFTER_TRANSACTION
2017-04-24 12:27:52,004 DEBUG [main] cfg.Settings (Settings.java:111) - Generate SQL with comments: disabled
2017-04-24 12:27:52,184 DEBUG [main] internal.SessionFactoryImpl (SessionFactoryImpl.java:254) - Session factory constructed with filter configurations : {}
2017-04-24 12:27:52,185 DEBUG [main] internal.SessionFactoryImpl (SessionFactoryImpl.java:255) - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, java.vendor.url=http://java.oracle.com/, user.timezone=Asia/Jakarta, os.name=Linux, java.vm.specification.version=1.8, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, maven.home=/usr/share/maven, sun.cpu.endian=little, user.home=/root, user.language=en, java.specification.vendor=Oracle Corporation, java.home=/usr/lib/jvm/java-8-openjdk-amd64/jre, file.separator=/, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, sun.boot.class.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/classes, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_111-8u111-b14-3-b14, user.name=root, path.separator=:, securerandom.source=file:/dev/./urandom, hibernate.connection.username=root, os.version=4.8.0-kali2-amd64, java.endorsed.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/endorsed, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/strutsproject, file.encoding=UTF-8, guice.disable.misplaced.annotation.check=true, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=/tmp, java.version=1.8.0_111, user.dir=/root/Source/java/struts/struts-project, os.arch=amd64, maven.multiModuleProjectDirectory=/root/Source/java/struts/struts-project, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@151ab2b9, java.library.path=/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.111-b14, classworlds.conf=/usr/share/maven/bin/m2.conf, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.pool_size=1, java.ext.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
2017-04-24 12:27:52,214 DEBUG [main] spi.JaccIntegrator (JaccIntegrator.java:80) - Skipping JACC integration as it was not enabled
2017-04-24 12:27:52,242 DEBUG [main] internal.SessionFactoryImpl (SessionFactoryImpl.java:294) - Instantiated session factory
2017-04-24 12:27:52,350 DEBUG [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [com.example.struts2.model.Users] is safe
2017-04-24 12:27:52,351 DEBUG [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.struts2.model.Users
2017-04-24 12:27:52,411 DEBUG [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [com.example.struts2.model.Users] is safe
2017-04-24 12:27:52,413 DEBUG [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.struts2.model.Users
2017-04-24 12:27:52,613 DEBUG [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3598) - Static SQL for entity: com.example.struts2.model.Users
2017-04-24 12:27:52,616 DEBUG [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3603) -  Version select: select id from users where id =?
2017-04-24 12:27:52,619 DEBUG [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3606) -  Snapshot select: select users_.id, users_.password as password2_0_, users_.username as username3_0_ from users users_ where users_.id=?
2017-04-24 12:27:52,621 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Insert 0: insert into users (password, username, id) values (?, ?, ?)
2017-04-24 12:27:52,622 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Update 0: update users set password=?, username=? where id=?
2017-04-24 12:27:52,624 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Delete 0: delete from users where id=?
2017-04-24 12:27:52,626 DEBUG [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3614) -  Identity insert: insert into users (password, username) values (?, ?)
2017-04-24 12:27:52,690 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@377949f1]
2017-04-24 12:27:52,694 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:27:52,695 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:27:52,696 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:27:52,741 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:27:52,756 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:27:52,763 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [NONE]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-24 12:27:52,764 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@697a0948]
2017-04-24 12:27:52,765 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:27:52,767 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:27:52,768 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:27:52,769 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:27:52,770 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:27:52,771 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [READ]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-24 12:27:52,772 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4776e209]
2017-04-24 12:27:52,773 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:27:52,774 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:27:52,774 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:27:52,775 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:27:52,776 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:27:52,777 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [UPGRADE]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=? for update
2017-04-24 12:27:52,778 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f536481]
2017-04-24 12:27:52,779 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:27:52,779 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:27:52,780 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:27:52,781 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:27:52,782 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:27:52,783 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [UPGRADE_NOWAIT]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=? for update
2017-04-24 12:27:52,791 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22a260ff]
2017-04-24 12:27:52,793 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:27:52,794 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:27:52,794 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:27:52,795 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:27:52,804 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:27:52,805 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [UPGRADE_SKIPLOCKED]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=? for update
2017-04-24 12:27:52,805 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50b734c4]
2017-04-24 12:27:52,806 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:27:52,807 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:27:52,807 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:27:52,808 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:27:52,810 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:27:52,811 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [FORCE]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=? for update
2017-04-24 12:27:52,812 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16d0e521]
2017-04-24 12:27:52,813 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:27:52,813 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:27:52,814 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:27:52,815 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:27:52,816 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:27:52,817 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [PESSIMISTIC_READ]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=? lock in share mode
2017-04-24 12:27:52,818 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ab4aa5e]
2017-04-24 12:27:52,819 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:27:52,819 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:27:52,820 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:27:52,821 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:27:52,822 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:27:52,822 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [PESSIMISTIC_WRITE]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=? for update
2017-04-24 12:27:52,823 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a7cb3a4]
2017-04-24 12:27:52,824 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:27:52,825 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:27:52,825 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:27:52,826 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:27:52,827 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:27:52,828 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [PESSIMISTIC_FORCE_INCREMENT]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=? for update
2017-04-24 12:27:52,829 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33e0c716]
2017-04-24 12:27:52,830 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:27:52,831 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:27:52,831 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:27:52,832 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:27:52,833 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:27:52,834 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [OPTIMISTIC]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-24 12:27:52,835 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6274f21c]
2017-04-24 12:27:52,836 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:27:52,836 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:27:52,837 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:27:52,838 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:27:52,839 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:27:52,840 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [OPTIMISTIC_FORCE_INCREMENT]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-24 12:27:52,878 DEBUG [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_MERGE on entity com.example.struts2.model.Users: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-24 12:27:52,879 DEBUG [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_REFRESH on entity com.example.struts2.model.Users: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-24 12:27:52,936 DEBUG [main] spi.SchemaManagementToolCoordinator (SchemaManagementToolCoordinator.java:56) - No actions specified; doing nothing
2017-04-24 12:27:52,937 DEBUG [main] internal.JtaPlatformInitiator (JtaPlatformInitiator.java:42) - No JtaPlatform was specified, checking resolver
2017-04-24 12:27:52,939 DEBUG [main] internal.JtaPlatformResolverInitiator (JtaPlatformResolverInitiator.java:33) - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2017-04-24 12:27:52,959 DEBUG [main] internal.StandardJtaPlatformResolver (StandardJtaPlatformResolver.java:102) - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2017-04-24 12:27:52,966 DEBUG [main] spi.NamedQueryRepository (NamedQueryRepository.java:151) - Checking 0 named HQL queries
2017-04-24 12:27:52,969 DEBUG [main] spi.NamedQueryRepository (NamedQueryRepository.java:167) - Checking 0 named SQL queries
2017-04-24 12:27:52,980 DEBUG [main] internal.SessionFactoryRegistry (SessionFactoryRegistry.java:52) - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@370ef50b
2017-04-24 12:27:52,988 DEBUG [main] internal.SessionFactoryRegistry (SessionFactoryRegistry.java:74) - Registering SessionFactory: d5f59189-764f-48b3-b2dd-ec92e35054c3 (<unnamed>)
2017-04-24 12:27:52,994 DEBUG [main] internal.SessionFactoryRegistry (SessionFactoryRegistry.java:81) - Not binding SessionFactory to JNDI, no JNDI name configured
2017-04-24 12:28:05,715 DEBUG [qtp1986676021-15] internal.StatisticsInitiator (StatisticsInitiator.java:82) - Statistics initialized [enabled=false]
2017-04-24 12:28:05,863 INFO  [qtp1986676021-15] action.Login (Login.java:25) - VALIDATE admin admin
2017-04-24 12:28:05,870 DEBUG [qtp1986676021-15] internal.TransactionImpl (TransactionImpl.java:55) - begin
2017-04-24 12:28:05,923 DEBUG [qtp1986676021-15] internal.QueryTranslatorFactoryInitiator (QueryTranslatorFactoryInitiator.java:45) - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@51ee01e8
2017-04-24 12:28:05,924 INFO  [qtp1986676021-15] internal.QueryTranslatorFactoryInitiator (QueryTranslatorFactoryInitiator.java:47) - HHH000397: Using ASTQueryTranslatorFactory
2017-04-24 12:28:06,072 DEBUG [qtp1986676021-15] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:282) - parse() - HQL: from com.example.struts2.model.Users where username = :username and password = :password
2017-04-24 12:28:06,135 DEBUG [qtp1986676021-15] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:300) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[DOT] Node: '.'
    |           |  |  |  +-[IDENT] Node: 'com'
    |           |  |  |  \-[IDENT] Node: 'example'
    |           |  |  \-[IDENT] Node: 'struts2'
    |           |  \-[IDENT] Node: 'model'
    |           \-[IDENT] Node: 'Users'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[IDENT] Node: 'username'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'username'
          \-[EQ] Node: '='
             +-[IDENT] Node: 'password'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'password'

2017-04-24 12:28:06,138 DEBUG [qtp1986676021-15] ast.ErrorCounter (ErrorCounter.java:95) - throwQueryException() : no errors
2017-04-24 12:28:06,216 DEBUG [qtp1986676021-15] antlr.HqlSqlBaseWalker (HqlSqlBaseWalker.java:124) - select << begin [level=1, statement=select]
2017-04-24 12:28:06,277 DEBUG [qtp1986676021-15] tree.FromElement (FromElement.java:147) - FromClause{level=1} : com.example.struts2.model.Users (<no alias>) -> users0_
2017-04-24 12:28:06,295 DEBUG [qtp1986676021-15] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : {synthetic-alias} -> {synthetic-alias}
2017-04-24 12:28:06,308 DEBUG [qtp1986676021-15] tree.DotNode (DotNode.java:666) - getDataType() : username -> org.hibernate.type.StringType@1b6924cb
2017-04-24 12:28:06,316 DEBUG [qtp1986676021-15] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : {synthetic-alias}.username -> users0_.username
2017-04-24 12:28:06,327 DEBUG [qtp1986676021-15] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : {synthetic-alias} -> {synthetic-alias}
2017-04-24 12:28:06,333 DEBUG [qtp1986676021-15] tree.DotNode (DotNode.java:666) - getDataType() : password -> org.hibernate.type.StringType@1b6924cb
2017-04-24 12:28:06,338 DEBUG [qtp1986676021-15] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : {synthetic-alias}.password -> users0_.password
2017-04-24 12:28:06,342 DEBUG [qtp1986676021-15] antlr.HqlSqlBaseWalker (HqlSqlBaseWalker.java:128) - select : finishing up [level=1, statement=select]
2017-04-24 12:28:06,349 DEBUG [qtp1986676021-15] ast.HqlSqlWalker (HqlSqlWalker.java:745) - processQuery() :  ( SELECT ( FromClause{level=1} users users0_ ) ( where ( and ( = ( users0_.username {synthetic-alias} username ) ? ) ( = ( users0_.password {synthetic-alias} password ) ? ) ) ) )
2017-04-24 12:28:06,366 DEBUG [qtp1986676021-15] ast.HqlSqlWalker (HqlSqlWalker.java:1021) - Derived SELECT clause created.
2017-04-24 12:28:06,393 DEBUG [qtp1986676021-15] util.JoinProcessor (JoinProcessor.java:187) - Using FROM fragment [users users0_]
2017-04-24 12:28:06,397 DEBUG [qtp1986676021-15] antlr.HqlSqlBaseWalker (HqlSqlBaseWalker.java:132) - select >> end [level=1, statement=select]
2017-04-24 12:28:06,407 DEBUG [qtp1986676021-15] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:269) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'users0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=users,tableAlias=users0_,origin=null,columns={,className=com.example.struts2.model.Users}}}
    |  \-[SQL_TOKEN] SqlFragment: 'users0_.password as password2_0_, users0_.username as username3_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[users0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users users0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=users,tableAlias=users0_,origin=null,columns={,className=com.example.struts2.model.Users}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'users0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path={synthetic-alias}.username,tableAlias=users0_,className=com.example.struts2.model.Users,classAlias=null}
          |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |  \-[IDENT] IdentNode: 'username' {originalText=username}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=username, expectedType=org.hibernate.type.StringType@1b6924cb}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'users0_.password' {propertyName=password,dereferenceType=PRIMITIVE,getPropertyPath=password,path={synthetic-alias}.password,tableAlias=users0_,className=com.example.struts2.model.Users,classAlias=null}
             |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             |  \-[IDENT] IdentNode: 'password' {originalText=password}
             \-[NAMED_PARAM] ParameterNode: '?' {name=password, expectedType=org.hibernate.type.StringType@1b6924cb}

2017-04-24 12:28:06,412 DEBUG [qtp1986676021-15] ast.ErrorCounter (ErrorCounter.java:95) - throwQueryException() : no errors
2017-04-24 12:28:06,441 DEBUG [qtp1986676021-15] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:251) - HQL: from com.example.struts2.model.Users where username = :username and password = :password
2017-04-24 12:28:06,448 DEBUG [qtp1986676021-15] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:252) - SQL: select users0_.id as id1_0_, users0_.password as password2_0_, users0_.username as username3_0_ from users users0_ where users0_.username=? and users0_.password=?
2017-04-24 12:28:06,451 DEBUG [qtp1986676021-15] ast.ErrorCounter (ErrorCounter.java:95) - throwQueryException() : no errors
2017-04-24 12:28:06,554 DEBUG [qtp1986676021-15] spi.SqlStatementLogger (SqlStatementLogger.java:92) - select users0_.id as id1_0_, users0_.password as password2_0_, users0_.username as username3_0_ from users users0_ where users0_.username=? and users0_.password=?
2017-04-24 12:28:06,627 DEBUG [qtp1986676021-15] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:384) - Result set row: 0
2017-04-24 12:28:06,646 DEBUG [qtp1986676021-15] loader.Loader (Loader.java:1527) - Result row: EntityKey[com.example.struts2.model.Users#1]
2017-04-24 12:28:06,677 DEBUG [qtp1986676021-15] internal.TwoPhaseLoad (TwoPhaseLoad.java:141) - Resolving associations for [com.example.struts2.model.Users#1]
2017-04-24 12:28:06,696 DEBUG [qtp1986676021-15] internal.TwoPhaseLoad (TwoPhaseLoad.java:281) - Done materializing entity [com.example.struts2.model.Users#1]
2017-04-24 12:28:50,803 DEBUG [main] internal.CoreLogging (CoreLogging.java:28) - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2017-04-24 12:28:50,836 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2017-04-24 12:28:50,843 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2017-04-24 12:28:50,855 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2017-04-24 12:28:51,277 INFO  [main] hibernate.Version (Version.java:45) - HHH000412: Hibernate Core {5.2.9.Final}
2017-04-24 12:28:51,282 INFO  [main] cfg.Environment (Environment.java:213) - HHH000206: hibernate.properties not found
2017-04-24 12:28:51,340 DEBUG [main] internal.JaxbCfgProcessor (JaxbCfgProcessor.java:116) - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2017-04-24 12:28:51,742 DEBUG [main] cfg.Configuration (Configuration.java:724) - Building session factory using internal StandardServiceRegistryBuilder
2017-04-24 12:28:51,756 DEBUG [main] spi.ServiceBinding (ServiceBinding.java:68) - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2017-04-24 12:28:51,756 DEBUG [main] cfg.Configuration (Configuration.java:652) - Building session factory using provided StandardServiceRegistry
2017-04-24 12:28:51,799 DEBUG [main] internal.RegionFactoryInitiator (RegionFactoryInitiator.java:75) - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2017-04-24 12:28:51,816 INFO  [main] java.JavaReflectionManager (JavaReflectionManager.java:66) - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2017-04-24 12:28:51,867 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@334ebcaa
2017-04-24 12:28:51,868 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@334ebcaa
2017-04-24 12:28:51,869 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@334ebcaa
2017-04-24 12:28:51,872 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6c1cfa53
2017-04-24 12:28:51,875 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@37d28f02
2017-04-24 12:28:51,877 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration yes_no -> org.hibernate.type.YesNoType@33f2df51
2017-04-24 12:28:51,881 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@61a91c9b
2017-04-24 12:28:51,883 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@61a91c9b
2017-04-24 12:28:51,883 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@61a91c9b
2017-04-24 12:28:51,886 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration character -> org.hibernate.type.CharacterType@462e1e64
2017-04-24 12:28:51,887 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration char -> org.hibernate.type.CharacterType@462e1e64
2017-04-24 12:28:51,888 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@462e1e64
2017-04-24 12:28:51,892 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@22c75c01
2017-04-24 12:28:51,893 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@22c75c01
2017-04-24 12:28:51,893 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@22c75c01
2017-04-24 12:28:51,896 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration integer -> org.hibernate.type.IntegerType@2f0ed952
2017-04-24 12:28:51,897 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration int -> org.hibernate.type.IntegerType@2f0ed952
2017-04-24 12:28:51,898 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2f0ed952
2017-04-24 12:28:51,902 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@4832f03b
2017-04-24 12:28:51,903 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@4832f03b
2017-04-24 12:28:51,903 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4832f03b
2017-04-24 12:28:51,907 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@e11ecfa
2017-04-24 12:28:51,908 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@e11ecfa
2017-04-24 12:28:51,909 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@e11ecfa
2017-04-24 12:28:51,912 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@43acd79e
2017-04-24 12:28:51,913 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@43acd79e
2017-04-24 12:28:51,914 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@43acd79e
2017-04-24 12:28:51,918 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@23a918c7
2017-04-24 12:28:51,919 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@23a918c7
2017-04-24 12:28:51,921 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1f67761b
2017-04-24 12:28:51,922 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1f67761b
2017-04-24 12:28:51,925 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration string -> org.hibernate.type.StringType@77ab22be
2017-04-24 12:28:51,926 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.String -> org.hibernate.type.StringType@77ab22be
2017-04-24 12:28:51,929 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6ca372ef
2017-04-24 12:28:51,932 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@280d4882
2017-04-24 12:28:51,935 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration url -> org.hibernate.type.UrlType@56b859a6
2017-04-24 12:28:51,936 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@56b859a6
2017-04-24 12:28:51,939 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Duration -> org.hibernate.type.DurationType@58015e56
2017-04-24 12:28:51,940 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@58015e56
2017-04-24 12:28:51,979 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Instant -> org.hibernate.type.InstantType@2db4ad1
2017-04-24 12:28:51,980 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2db4ad1
2017-04-24 12:28:51,985 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@6fc1020a
2017-04-24 12:28:51,986 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@6fc1020a
2017-04-24 12:28:51,991 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7dffda8b
2017-04-24 12:28:51,992 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7dffda8b
2017-04-24 12:28:51,996 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@66933239
2017-04-24 12:28:51,997 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@66933239
2017-04-24 12:28:52,001 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4f327096
2017-04-24 12:28:52,002 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4f327096
2017-04-24 12:28:52,007 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@41a374be
2017-04-24 12:28:52,008 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@41a374be
2017-04-24 12:28:52,031 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7be1ce6a
2017-04-24 12:28:52,032 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7be1ce6a
2017-04-24 12:28:52,036 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration date -> org.hibernate.type.DateType@2ddb3ae8
2017-04-24 12:28:52,037 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2ddb3ae8
2017-04-24 12:28:52,041 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration time -> org.hibernate.type.TimeType@6fbc1bb
2017-04-24 12:28:52,042 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6fbc1bb
2017-04-24 12:28:52,045 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration timestamp -> org.hibernate.type.TimestampType@48df4071
2017-04-24 12:28:52,046 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@48df4071
2017-04-24 12:28:52,047 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@48df4071
2017-04-24 12:28:52,052 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@67507df
2017-04-24 12:28:52,055 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration calendar -> org.hibernate.type.CalendarType@33feb805
2017-04-24 12:28:52,056 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@33feb805
2017-04-24 12:28:52,057 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@33feb805
2017-04-24 12:28:52,059 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@34332b8d
2017-04-24 12:28:52,062 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration locale -> org.hibernate.type.LocaleType@7cca01a8
2017-04-24 12:28:52,063 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7cca01a8
2017-04-24 12:28:52,066 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration currency -> org.hibernate.type.CurrencyType@45e9b12d
2017-04-24 12:28:52,067 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@45e9b12d
2017-04-24 12:28:52,070 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@329548d0
2017-04-24 12:28:52,071 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@329548d0
2017-04-24 12:28:52,073 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration class -> org.hibernate.type.ClassType@49d30c6f
2017-04-24 12:28:52,074 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@49d30c6f
2017-04-24 12:28:52,078 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1c7350b0
2017-04-24 12:28:52,079 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1c7350b0
2017-04-24 12:28:52,081 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@50448409
2017-04-24 12:28:52,085 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration binary -> org.hibernate.type.BinaryType@30b975ad
2017-04-24 12:28:52,086 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte[] -> org.hibernate.type.BinaryType@30b975ad
2017-04-24 12:28:52,087 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [B -> org.hibernate.type.BinaryType@30b975ad
2017-04-24 12:28:52,090 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@ea52184
2017-04-24 12:28:52,091 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@ea52184
2017-04-24 12:28:52,092 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@ea52184
2017-04-24 12:28:52,094 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration row_version -> org.hibernate.type.RowVersionType@7f608e21
2017-04-24 12:28:52,097 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration image -> org.hibernate.type.ImageType@66236a0a
2017-04-24 12:28:52,100 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration characters -> org.hibernate.type.CharArrayType@795f8317
2017-04-24 12:28:52,101 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration char[] -> org.hibernate.type.CharArrayType@795f8317
2017-04-24 12:28:52,102 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [C -> org.hibernate.type.CharArrayType@795f8317
2017-04-24 12:28:52,105 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@157ec23b
2017-04-24 12:28:52,106 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@157ec23b
2017-04-24 12:28:52,106 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@157ec23b
2017-04-24 12:28:52,109 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration text -> org.hibernate.type.TextType@47ac613b
2017-04-24 12:28:52,111 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ntext -> org.hibernate.type.NTextType@134ff8f8
2017-04-24 12:28:52,125 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration blob -> org.hibernate.type.BlobType@1f3b992
2017-04-24 12:28:52,126 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1f3b992
2017-04-24 12:28:52,134 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7beae796
2017-04-24 12:28:52,150 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration clob -> org.hibernate.type.ClobType@2eed37f4
2017-04-24 12:28:52,153 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2eed37f4
2017-04-24 12:28:52,163 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration nclob -> org.hibernate.type.NClobType@13dbed9e
2017-04-24 12:28:52,168 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@13dbed9e
2017-04-24 12:28:52,172 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1d50a7ca
2017-04-24 12:28:52,177 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3003e580
2017-04-24 12:28:52,182 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration serializable -> org.hibernate.type.SerializableType@5f174dd2
2017-04-24 12:28:52,189 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration object -> org.hibernate.type.ObjectType@326e0b8e
2017-04-24 12:28:52,190 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@326e0b8e
2017-04-24 12:28:52,191 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@34585ac9
2017-04-24 12:28:52,193 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@76a805b7
2017-04-24 12:28:52,193 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@15f35bc3
2017-04-24 12:28:52,194 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@167381c7
2017-04-24 12:28:52,195 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@608b1fd2
2017-04-24 12:28:52,195 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@56382bc9
2017-04-24 12:28:52,196 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@591a4f8e
2017-04-24 12:28:52,196 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@53ed80d3
2017-04-24 12:28:52,239 WARN  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:70) - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2017-04-24 12:28:52,247 DEBUG [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:154) - No driver class specified
2017-04-24 12:28:52,251 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:126) - HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306/strutsproject]
2017-04-24 12:28:52,255 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:132) - HHH10001001: Connection properties: {user=root, password=}
2017-04-24 12:28:52,268 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:140) - HHH10001003: Autocommit mode: false
2017-04-24 12:28:52,280 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:384) - Initializing Connection pool with 1 Connections
2017-04-24 12:28:52,284 INFO  [main] internal.PooledConnections (PooledConnections.java:41) - HHH000115: Hibernate connection pool size: 1 (min=1)
2017-04-24 12:28:52,851 DEBUG [main] internal.JdbcEnvironmentInitiator (JdbcEnvironmentInitiator.java:72) - Database ->
       name : MySQL
    version : 5.6.30-1
      major : 5
      minor : 6
2017-04-24 12:28:52,856 DEBUG [main] internal.JdbcEnvironmentInitiator (JdbcEnvironmentInitiator.java:83) - Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.9 ( Revision: ${svn.Revision} )
      major : 5
      minor : 1
2017-04-24 12:28:52,864 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:389) - JDBC version : 3.0
2017-04-24 12:28:52,898 INFO  [main] dialect.Dialect (Dialect.java:157) - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2017-04-24 12:28:53,002 DEBUG [main] spi.IdentifierHelperBuilder (IdentifierHelperBuilder.java:117) - JDBC driver metadata reported database stores quoted identifiers in more than one case
2017-04-24 12:28:53,030 DEBUG [main] spi.IdentifierHelperBuilder (IdentifierHelperBuilder.java:191) - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2017-04-24 12:28:53,069 INFO  [main] internal.LobCreatorBuilderImpl (LobCreatorBuilderImpl.java:98) - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2017-04-24 12:28:53,597 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2017-04-24 12:28:53,617 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2017-04-24 12:28:53,620 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2017-04-24 12:28:53,621 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2017-04-24 12:28:53,623 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2017-04-24 12:28:53,626 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2017-04-24 12:28:53,628 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2017-04-24 12:28:53,633 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2017-04-24 12:28:53,636 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2017-04-24 12:28:53,639 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2017-04-24 12:28:53,641 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2017-04-24 12:28:53,644 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2017-04-24 12:28:53,645 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2017-04-24 12:28:53,647 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2017-04-24 12:28:53,714 DEBUG [main] relational.Namespace (Namespace.java:47) - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2017-04-24 12:28:53,814 DEBUG [main] cfg.AnnotationBinder (AnnotationBinder.java:511) - Binding entity from annotated class: com.example.struts2.model.Users
2017-04-24 12:28:53,890 DEBUG [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2017-04-24 12:28:53,912 DEBUG [main] annotations.EntityBinder (EntityBinder.java:419) - Import with entity name users
2017-04-24 12:28:53,931 DEBUG [main] annotations.EntityBinder (EntityBinder.java:695) - Bind entity com.example.struts2.model.Users on table users
2017-04-24 12:28:54,007 DEBUG [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
2017-04-24 12:28:54,027 DEBUG [main] annotations.PropertyBinder (PropertyBinder.java:174) - MetadataSourceProcessor property id with lazy=false
2017-04-24 12:28:54,034 DEBUG [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.example.struts2.model.Users:id]
2017-04-24 12:28:54,040 DEBUG [main] annotations.SimpleValueBinder (SimpleValueBinder.java:411) - building SimpleValue for id
2017-04-24 12:28:54,050 DEBUG [main] annotations.PropertyBinder (PropertyBinder.java:265) - Building property id
2017-04-24 12:28:54,059 DEBUG [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2017-04-24 12:28:54,062 DEBUG [main] annotations.PropertyBinder (PropertyBinder.java:174) - MetadataSourceProcessor property password with lazy=false
2017-04-24 12:28:54,063 DEBUG [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.example.struts2.model.Users:password]
2017-04-24 12:28:54,064 DEBUG [main] annotations.SimpleValueBinder (SimpleValueBinder.java:411) - building SimpleValue for password
2017-04-24 12:28:54,065 DEBUG [main] annotations.PropertyBinder (PropertyBinder.java:265) - Building property password
2017-04-24 12:28:54,069 DEBUG [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=false}
2017-04-24 12:28:54,074 DEBUG [main] annotations.PropertyBinder (PropertyBinder.java:174) - MetadataSourceProcessor property username with lazy=false
2017-04-24 12:28:54,075 DEBUG [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.example.struts2.model.Users:username]
2017-04-24 12:28:54,076 DEBUG [main] annotations.SimpleValueBinder (SimpleValueBinder.java:411) - building SimpleValue for username
2017-04-24 12:28:54,077 DEBUG [main] annotations.PropertyBinder (PropertyBinder.java:265) - Building property username
2017-04-24 12:28:54,084 DEBUG [main] annotations.SimpleValueBinder (SimpleValueBinder.java:456) - Starting fillSimpleValue for id
2017-04-24 12:28:54,088 DEBUG [main] annotations.SimpleValueBinder (SimpleValueBinder.java:456) - Starting fillSimpleValue for password
2017-04-24 12:28:54,091 DEBUG [main] annotations.SimpleValueBinder (SimpleValueBinder.java:456) - Starting fillSimpleValue for username
2017-04-24 12:28:54,098 DEBUG [main] mapping.PrimaryKey (PrimaryKey.java:35) - Forcing column [id] to be non-null as it is part of the primary key for table [users]
2017-04-24 12:28:54,193 DEBUG [main] internal.SessionFactoryImpl (SessionFactoryImpl.java:199) - Building session factory
2017-04-24 12:28:54,203 DEBUG [main] cfg.Settings (Settings.java:69) - SessionFactory name : null
2017-04-24 12:28:54,205 DEBUG [main] cfg.Settings (Settings.java:70) - Automatic flush during beforeCompletion(): enabled
2017-04-24 12:28:54,207 DEBUG [main] cfg.Settings (Settings.java:71) - Automatic session close at end of transaction: disabled
2017-04-24 12:28:54,209 DEBUG [main] cfg.Settings (Settings.java:73) - Statistics: disabled
2017-04-24 12:28:54,210 DEBUG [main] cfg.Settings (Settings.java:75) - Deleted entity synthetic identifier rollback: disabled
2017-04-24 12:28:54,211 DEBUG [main] cfg.Settings (Settings.java:76) - Default entity-mode: pojo
2017-04-24 12:28:54,212 DEBUG [main] cfg.Settings (Settings.java:77) - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2017-04-24 12:28:54,215 DEBUG [main] cfg.Settings (Settings.java:78) - Allow initialization of lazy state outside session : disabled
2017-04-24 12:28:54,217 DEBUG [main] cfg.Settings (Settings.java:80) - Using BatchFetchStyle : LEGACY
2017-04-24 12:28:54,217 DEBUG [main] cfg.Settings (Settings.java:81) - Default batch fetch size: -1
2017-04-24 12:28:54,218 DEBUG [main] cfg.Settings (Settings.java:82) - Maximum outer join fetch depth: 2
2017-04-24 12:28:54,219 DEBUG [main] cfg.Settings (Settings.java:83) - Default null ordering: NONE
2017-04-24 12:28:54,220 DEBUG [main] cfg.Settings (Settings.java:84) - Order SQL updates by primary key: disabled
2017-04-24 12:28:54,221 DEBUG [main] cfg.Settings (Settings.java:85) - Order SQL inserts for batching: disabled
2017-04-24 12:28:54,222 DEBUG [main] cfg.Settings (Settings.java:87) - multi-tenancy strategy : NONE
2017-04-24 12:28:54,222 DEBUG [main] cfg.Settings (Settings.java:89) - JTA Track by Thread: enabled
2017-04-24 12:28:54,223 DEBUG [main] cfg.Settings (Settings.java:91) - Query language substitutions: {}
2017-04-24 12:28:54,224 DEBUG [main] cfg.Settings (Settings.java:92) - JPA query language strict compliance: disabled
2017-04-24 12:28:54,225 DEBUG [main] cfg.Settings (Settings.java:93) - Named query checking : enabled
2017-04-24 12:28:54,226 DEBUG [main] cfg.Settings (Settings.java:95) - Second-level cache: enabled
2017-04-24 12:28:54,227 DEBUG [main] cfg.Settings (Settings.java:96) - Second-level query cache: disabled
2017-04-24 12:28:54,227 DEBUG [main] cfg.Settings (Settings.java:97) - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@65ef48f2
2017-04-24 12:28:54,228 DEBUG [main] cfg.Settings (Settings.java:98) - Second-level cache region prefix: null
2017-04-24 12:28:54,229 DEBUG [main] cfg.Settings (Settings.java:99) - Optimize second-level cache for minimal puts: disabled
2017-04-24 12:28:54,229 DEBUG [main] cfg.Settings (Settings.java:100) - Structured second-level cache entries: disabled
2017-04-24 12:28:54,230 DEBUG [main] cfg.Settings (Settings.java:101) - Second-level cache direct-reference entries: disabled
2017-04-24 12:28:54,231 DEBUG [main] cfg.Settings (Settings.java:102) - Automatic eviction of collection cache: disabled
2017-04-24 12:28:54,232 DEBUG [main] cfg.Settings (Settings.java:104) - JDBC batch size: 15
2017-04-24 12:28:54,232 DEBUG [main] cfg.Settings (Settings.java:105) - JDBC batch updates for versioned data: enabled
2017-04-24 12:28:54,233 DEBUG [main] cfg.Settings (Settings.java:106) - Scrollable result sets: enabled
2017-04-24 12:28:54,234 DEBUG [main] cfg.Settings (Settings.java:107) - Wrap result sets: disabled
2017-04-24 12:28:54,234 DEBUG [main] cfg.Settings (Settings.java:108) - JDBC3 getGeneratedKeys(): enabled
2017-04-24 12:28:54,235 DEBUG [main] cfg.Settings (Settings.java:109) - JDBC result set fetch size: null
2017-04-24 12:28:54,236 DEBUG [main] cfg.Settings (Settings.java:110) - Connection release mode: AFTER_TRANSACTION
2017-04-24 12:28:54,239 DEBUG [main] cfg.Settings (Settings.java:111) - Generate SQL with comments: disabled
2017-04-24 12:28:54,413 DEBUG [main] internal.SessionFactoryImpl (SessionFactoryImpl.java:254) - Session factory constructed with filter configurations : {}
2017-04-24 12:28:54,415 DEBUG [main] internal.SessionFactoryImpl (SessionFactoryImpl.java:255) - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, java.vendor.url=http://java.oracle.com/, user.timezone=Asia/Jakarta, os.name=Linux, java.vm.specification.version=1.8, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, maven.home=/usr/share/maven, sun.cpu.endian=little, user.home=/root, user.language=en, java.specification.vendor=Oracle Corporation, java.home=/usr/lib/jvm/java-8-openjdk-amd64/jre, file.separator=/, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, sun.boot.class.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/classes, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_111-8u111-b14-3-b14, user.name=root, path.separator=:, securerandom.source=file:/dev/./urandom, hibernate.connection.username=root, os.version=4.8.0-kali2-amd64, java.endorsed.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/endorsed, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/strutsproject, file.encoding=UTF-8, guice.disable.misplaced.annotation.check=true, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=/tmp, java.version=1.8.0_111, user.dir=/root/Source/java/struts/struts-project, os.arch=amd64, maven.multiModuleProjectDirectory=/root/Source/java/struts/struts-project, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@47b33e07, java.library.path=/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.111-b14, classworlds.conf=/usr/share/maven/bin/m2.conf, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.pool_size=1, java.ext.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
2017-04-24 12:28:54,444 DEBUG [main] spi.JaccIntegrator (JaccIntegrator.java:80) - Skipping JACC integration as it was not enabled
2017-04-24 12:28:54,471 DEBUG [main] internal.SessionFactoryImpl (SessionFactoryImpl.java:294) - Instantiated session factory
2017-04-24 12:28:54,582 DEBUG [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [com.example.struts2.model.Users] is safe
2017-04-24 12:28:54,585 DEBUG [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.struts2.model.Users
2017-04-24 12:28:54,624 DEBUG [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [com.example.struts2.model.Users] is safe
2017-04-24 12:28:54,626 DEBUG [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.struts2.model.Users
2017-04-24 12:28:54,824 DEBUG [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3598) - Static SQL for entity: com.example.struts2.model.Users
2017-04-24 12:28:54,826 DEBUG [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3603) -  Version select: select id from users where id =?
2017-04-24 12:28:54,827 DEBUG [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3606) -  Snapshot select: select users_.id, users_.password as password2_0_, users_.username as username3_0_ from users users_ where users_.id=?
2017-04-24 12:28:54,828 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Insert 0: insert into users (password, username, id) values (?, ?, ?)
2017-04-24 12:28:54,829 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Update 0: update users set password=?, username=? where id=?
2017-04-24 12:28:54,830 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Delete 0: delete from users where id=?
2017-04-24 12:28:54,834 DEBUG [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3614) -  Identity insert: insert into users (password, username) values (?, ?)
2017-04-24 12:28:54,886 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c5df615]
2017-04-24 12:28:54,895 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:28:54,897 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:28:54,902 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:28:54,934 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:28:54,949 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:28:54,958 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [NONE]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-24 12:28:54,960 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18d47df0]
2017-04-24 12:28:54,964 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:28:54,968 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:28:54,972 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:28:54,975 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:28:54,977 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:28:54,977 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [READ]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-24 12:28:54,978 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@697a0948]
2017-04-24 12:28:54,983 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:28:54,985 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:28:54,991 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:28:54,995 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:28:54,999 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:28:55,004 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [UPGRADE]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=? for update
2017-04-24 12:28:55,005 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4776e209]
2017-04-24 12:28:55,006 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:28:55,007 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:28:55,007 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:28:55,008 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:28:55,011 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:28:55,013 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [UPGRADE_NOWAIT]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=? for update
2017-04-24 12:28:55,024 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f536481]
2017-04-24 12:28:55,026 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:28:55,030 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:28:55,031 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:28:55,034 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:28:55,040 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:28:55,041 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [UPGRADE_SKIPLOCKED]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=? for update
2017-04-24 12:28:55,042 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22a260ff]
2017-04-24 12:28:55,043 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:28:55,044 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:28:55,044 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:28:55,046 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:28:55,048 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:28:55,048 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [FORCE]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=? for update
2017-04-24 12:28:55,050 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50b734c4]
2017-04-24 12:28:55,051 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:28:55,052 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:28:55,053 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:28:55,054 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:28:55,057 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:28:55,058 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [PESSIMISTIC_READ]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=? lock in share mode
2017-04-24 12:28:55,059 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16d0e521]
2017-04-24 12:28:55,060 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:28:55,061 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:28:55,062 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:28:55,063 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:28:55,064 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:28:55,065 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [PESSIMISTIC_WRITE]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=? for update
2017-04-24 12:28:55,066 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ab4aa5e]
2017-04-24 12:28:55,067 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:28:55,068 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:28:55,069 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:28:55,070 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:28:55,071 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:28:55,072 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [PESSIMISTIC_FORCE_INCREMENT]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=? for update
2017-04-24 12:28:55,073 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a7cb3a4]
2017-04-24 12:28:55,074 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:28:55,075 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:28:55,076 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:28:55,077 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:28:55,078 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:28:55,079 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [OPTIMISTIC]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-24 12:28:55,080 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33e0c716]
2017-04-24 12:28:55,081 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:28:55,082 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:28:55,083 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:28:55,084 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:28:55,085 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:28:55,086 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [OPTIMISTIC_FORCE_INCREMENT]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-24 12:28:55,126 DEBUG [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_MERGE on entity com.example.struts2.model.Users: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-24 12:28:55,127 DEBUG [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_REFRESH on entity com.example.struts2.model.Users: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-24 12:28:55,193 DEBUG [main] spi.SchemaManagementToolCoordinator (SchemaManagementToolCoordinator.java:56) - No actions specified; doing nothing
2017-04-24 12:28:55,194 DEBUG [main] internal.JtaPlatformInitiator (JtaPlatformInitiator.java:42) - No JtaPlatform was specified, checking resolver
2017-04-24 12:28:55,197 DEBUG [main] internal.JtaPlatformResolverInitiator (JtaPlatformResolverInitiator.java:33) - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2017-04-24 12:28:55,216 DEBUG [main] internal.StandardJtaPlatformResolver (StandardJtaPlatformResolver.java:102) - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2017-04-24 12:28:55,221 DEBUG [main] spi.NamedQueryRepository (NamedQueryRepository.java:151) - Checking 0 named HQL queries
2017-04-24 12:28:55,222 DEBUG [main] spi.NamedQueryRepository (NamedQueryRepository.java:167) - Checking 0 named SQL queries
2017-04-24 12:28:55,229 DEBUG [main] internal.SessionFactoryRegistry (SessionFactoryRegistry.java:52) - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@a90e2c1
2017-04-24 12:28:55,235 DEBUG [main] internal.SessionFactoryRegistry (SessionFactoryRegistry.java:74) - Registering SessionFactory: 86988bbb-ea1d-4d97-b8a3-15c862a24904 (<unnamed>)
2017-04-24 12:28:55,236 DEBUG [main] internal.SessionFactoryRegistry (SessionFactoryRegistry.java:81) - Not binding SessionFactory to JNDI, no JNDI name configured
2017-04-24 12:29:13,926 DEBUG [qtp2096194236-14] internal.StatisticsInitiator (StatisticsInitiator.java:82) - Statistics initialized [enabled=false]
2017-04-24 12:29:14,055 INFO  [qtp2096194236-14] action.Login (Login.java:25) - VALIDATE admin admin
2017-04-24 12:29:14,070 DEBUG [qtp2096194236-14] internal.TransactionImpl (TransactionImpl.java:55) - begin
2017-04-24 12:29:14,137 DEBUG [qtp2096194236-14] internal.QueryTranslatorFactoryInitiator (QueryTranslatorFactoryInitiator.java:45) - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@7ea814ba
2017-04-24 12:29:14,142 INFO  [qtp2096194236-14] internal.QueryTranslatorFactoryInitiator (QueryTranslatorFactoryInitiator.java:47) - HHH000397: Using ASTQueryTranslatorFactory
2017-04-24 12:29:14,233 DEBUG [qtp2096194236-14] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:282) - parse() - HQL: from com.example.struts2.model.Users where username = :username and password = :password
2017-04-24 12:29:14,266 DEBUG [qtp2096194236-14] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:300) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[DOT] Node: '.'
    |           |  |  |  +-[IDENT] Node: 'com'
    |           |  |  |  \-[IDENT] Node: 'example'
    |           |  |  \-[IDENT] Node: 'struts2'
    |           |  \-[IDENT] Node: 'model'
    |           \-[IDENT] Node: 'Users'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[IDENT] Node: 'username'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'username'
          \-[EQ] Node: '='
             +-[IDENT] Node: 'password'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'password'

2017-04-24 12:29:14,270 DEBUG [qtp2096194236-14] ast.ErrorCounter (ErrorCounter.java:95) - throwQueryException() : no errors
2017-04-24 12:29:14,345 DEBUG [qtp2096194236-14] antlr.HqlSqlBaseWalker (HqlSqlBaseWalker.java:124) - select << begin [level=1, statement=select]
2017-04-24 12:29:14,405 DEBUG [qtp2096194236-14] tree.FromElement (FromElement.java:147) - FromClause{level=1} : com.example.struts2.model.Users (<no alias>) -> users0_
2017-04-24 12:29:14,416 DEBUG [qtp2096194236-14] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : {synthetic-alias} -> {synthetic-alias}
2017-04-24 12:29:14,424 DEBUG [qtp2096194236-14] tree.DotNode (DotNode.java:666) - getDataType() : username -> org.hibernate.type.StringType@77ab22be
2017-04-24 12:29:14,429 DEBUG [qtp2096194236-14] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : {synthetic-alias}.username -> users0_.username
2017-04-24 12:29:14,443 DEBUG [qtp2096194236-14] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : {synthetic-alias} -> {synthetic-alias}
2017-04-24 12:29:14,447 DEBUG [qtp2096194236-14] tree.DotNode (DotNode.java:666) - getDataType() : password -> org.hibernate.type.StringType@77ab22be
2017-04-24 12:29:14,451 DEBUG [qtp2096194236-14] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : {synthetic-alias}.password -> users0_.password
2017-04-24 12:29:14,454 DEBUG [qtp2096194236-14] antlr.HqlSqlBaseWalker (HqlSqlBaseWalker.java:128) - select : finishing up [level=1, statement=select]
2017-04-24 12:29:14,462 DEBUG [qtp2096194236-14] ast.HqlSqlWalker (HqlSqlWalker.java:745) - processQuery() :  ( SELECT ( FromClause{level=1} users users0_ ) ( where ( and ( = ( users0_.username {synthetic-alias} username ) ? ) ( = ( users0_.password {synthetic-alias} password ) ? ) ) ) )
2017-04-24 12:29:14,484 DEBUG [qtp2096194236-14] ast.HqlSqlWalker (HqlSqlWalker.java:1021) - Derived SELECT clause created.
2017-04-24 12:29:14,509 DEBUG [qtp2096194236-14] util.JoinProcessor (JoinProcessor.java:187) - Using FROM fragment [users users0_]
2017-04-24 12:29:14,510 DEBUG [qtp2096194236-14] antlr.HqlSqlBaseWalker (HqlSqlBaseWalker.java:132) - select >> end [level=1, statement=select]
2017-04-24 12:29:14,513 DEBUG [qtp2096194236-14] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:269) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'users0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=users,tableAlias=users0_,origin=null,columns={,className=com.example.struts2.model.Users}}}
    |  \-[SQL_TOKEN] SqlFragment: 'users0_.password as password2_0_, users0_.username as username3_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[users0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users users0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=users,tableAlias=users0_,origin=null,columns={,className=com.example.struts2.model.Users}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'users0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path={synthetic-alias}.username,tableAlias=users0_,className=com.example.struts2.model.Users,classAlias=null}
          |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |  \-[IDENT] IdentNode: 'username' {originalText=username}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=username, expectedType=org.hibernate.type.StringType@77ab22be}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'users0_.password' {propertyName=password,dereferenceType=PRIMITIVE,getPropertyPath=password,path={synthetic-alias}.password,tableAlias=users0_,className=com.example.struts2.model.Users,classAlias=null}
             |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             |  \-[IDENT] IdentNode: 'password' {originalText=password}
             \-[NAMED_PARAM] ParameterNode: '?' {name=password, expectedType=org.hibernate.type.StringType@77ab22be}

2017-04-24 12:29:14,514 DEBUG [qtp2096194236-14] ast.ErrorCounter (ErrorCounter.java:95) - throwQueryException() : no errors
2017-04-24 12:29:14,543 DEBUG [qtp2096194236-14] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:251) - HQL: from com.example.struts2.model.Users where username = :username and password = :password
2017-04-24 12:29:14,545 DEBUG [qtp2096194236-14] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:252) - SQL: select users0_.id as id1_0_, users0_.password as password2_0_, users0_.username as username3_0_ from users users0_ where users0_.username=? and users0_.password=?
2017-04-24 12:29:14,546 DEBUG [qtp2096194236-14] ast.ErrorCounter (ErrorCounter.java:95) - throwQueryException() : no errors
2017-04-24 12:29:14,603 DEBUG [qtp2096194236-14] spi.SqlStatementLogger (SqlStatementLogger.java:92) - select users0_.id as id1_0_, users0_.password as password2_0_, users0_.username as username3_0_ from users users0_ where users0_.username=? and users0_.password=?
2017-04-24 12:29:14,666 DEBUG [qtp2096194236-14] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:384) - Result set row: 0
2017-04-24 12:29:14,678 DEBUG [qtp2096194236-14] loader.Loader (Loader.java:1527) - Result row: EntityKey[com.example.struts2.model.Users#1]
2017-04-24 12:29:14,702 DEBUG [qtp2096194236-14] internal.TwoPhaseLoad (TwoPhaseLoad.java:141) - Resolving associations for [com.example.struts2.model.Users#1]
2017-04-24 12:29:14,709 DEBUG [qtp2096194236-14] internal.TwoPhaseLoad (TwoPhaseLoad.java:281) - Done materializing entity [com.example.struts2.model.Users#1]
2017-04-24 12:29:32,248 INFO  [qtp2096194236-15] action.Login (Login.java:25) - VALIDATE admin asd
2017-04-24 12:29:32,249 DEBUG [qtp2096194236-15] internal.TransactionImpl (TransactionImpl.java:55) - begin
2017-04-24 12:36:31,779 DEBUG [main] internal.CoreLogging (CoreLogging.java:28) - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2017-04-24 12:36:31,818 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2017-04-24 12:36:31,835 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2017-04-24 12:36:31,852 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2017-04-24 12:36:32,430 INFO  [main] hibernate.Version (Version.java:45) - HHH000412: Hibernate Core {5.2.9.Final}
2017-04-24 12:36:32,443 INFO  [main] cfg.Environment (Environment.java:213) - HHH000206: hibernate.properties not found
2017-04-24 12:36:32,496 DEBUG [main] internal.JaxbCfgProcessor (JaxbCfgProcessor.java:116) - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2017-04-24 12:36:33,049 DEBUG [main] cfg.Configuration (Configuration.java:724) - Building session factory using internal StandardServiceRegistryBuilder
2017-04-24 12:36:33,068 DEBUG [main] spi.ServiceBinding (ServiceBinding.java:68) - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2017-04-24 12:36:33,069 DEBUG [main] cfg.Configuration (Configuration.java:652) - Building session factory using provided StandardServiceRegistry
2017-04-24 12:36:33,123 DEBUG [main] internal.RegionFactoryInitiator (RegionFactoryInitiator.java:75) - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2017-04-24 12:36:33,147 INFO  [main] java.JavaReflectionManager (JavaReflectionManager.java:66) - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2017-04-24 12:36:33,210 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@696b4a95
2017-04-24 12:36:33,214 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@696b4a95
2017-04-24 12:36:33,218 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@696b4a95
2017-04-24 12:36:33,224 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6af91cc8
2017-04-24 12:36:33,229 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@107bfcb2
2017-04-24 12:36:33,235 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration yes_no -> org.hibernate.type.YesNoType@f9f3928
2017-04-24 12:36:33,245 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@1806bc4c
2017-04-24 12:36:33,248 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@1806bc4c
2017-04-24 12:36:33,258 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1806bc4c
2017-04-24 12:36:33,265 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration character -> org.hibernate.type.CharacterType@52d6d273
2017-04-24 12:36:33,269 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration char -> org.hibernate.type.CharacterType@52d6d273
2017-04-24 12:36:33,272 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@52d6d273
2017-04-24 12:36:33,284 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@5b275811
2017-04-24 12:36:33,288 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@5b275811
2017-04-24 12:36:33,292 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5b275811
2017-04-24 12:36:33,297 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration integer -> org.hibernate.type.IntegerType@559cedee
2017-04-24 12:36:33,304 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration int -> org.hibernate.type.IntegerType@559cedee
2017-04-24 12:36:33,307 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@559cedee
2017-04-24 12:36:33,314 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@37baddde
2017-04-24 12:36:33,327 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@37baddde
2017-04-24 12:36:33,333 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@37baddde
2017-04-24 12:36:33,346 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@38830ea
2017-04-24 12:36:33,351 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@38830ea
2017-04-24 12:36:33,354 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@38830ea
2017-04-24 12:36:33,358 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@6fbb4061
2017-04-24 12:36:33,359 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@6fbb4061
2017-04-24 12:36:33,360 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6fbb4061
2017-04-24 12:36:33,364 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4b4ee511
2017-04-24 12:36:33,366 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4b4ee511
2017-04-24 12:36:33,370 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3762c4fc
2017-04-24 12:36:33,371 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3762c4fc
2017-04-24 12:36:33,375 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration string -> org.hibernate.type.StringType@141d3d43
2017-04-24 12:36:33,376 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.String -> org.hibernate.type.StringType@141d3d43
2017-04-24 12:36:33,383 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6419a0e1
2017-04-24 12:36:33,386 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@68ed3f30
2017-04-24 12:36:33,390 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration url -> org.hibernate.type.UrlType@575e572f
2017-04-24 12:36:33,391 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@575e572f
2017-04-24 12:36:33,395 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Duration -> org.hibernate.type.DurationType@3456558
2017-04-24 12:36:33,396 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@3456558
2017-04-24 12:36:33,462 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Instant -> org.hibernate.type.InstantType@73ae0257
2017-04-24 12:36:33,467 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@73ae0257
2017-04-24 12:36:33,477 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@42a0501e
2017-04-24 12:36:33,480 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@42a0501e
2017-04-24 12:36:33,487 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@2b5c4f17
2017-04-24 12:36:33,488 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@2b5c4f17
2017-04-24 12:36:33,497 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@177c41d7
2017-04-24 12:36:33,500 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@177c41d7
2017-04-24 12:36:33,506 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@51c8f62c
2017-04-24 12:36:33,509 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@51c8f62c
2017-04-24 12:36:33,514 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@44fff386
2017-04-24 12:36:33,517 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@44fff386
2017-04-24 12:36:33,538 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@68a78f3c
2017-04-24 12:36:33,541 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@68a78f3c
2017-04-24 12:36:33,550 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration date -> org.hibernate.type.DateType@732f6050
2017-04-24 12:36:33,552 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@732f6050
2017-04-24 12:36:33,559 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration time -> org.hibernate.type.TimeType@5f96f6a2
2017-04-24 12:36:33,562 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5f96f6a2
2017-04-24 12:36:33,569 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration timestamp -> org.hibernate.type.TimestampType@341b13a8
2017-04-24 12:36:33,572 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@341b13a8
2017-04-24 12:36:33,575 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@341b13a8
2017-04-24 12:36:33,587 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5f14761c
2017-04-24 12:36:33,593 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration calendar -> org.hibernate.type.CalendarType@724b939e
2017-04-24 12:36:33,595 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@724b939e
2017-04-24 12:36:33,604 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@724b939e
2017-04-24 12:36:33,609 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@52b3bf03
2017-04-24 12:36:33,617 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration locale -> org.hibernate.type.LocaleType@5626d18c
2017-04-24 12:36:33,618 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5626d18c
2017-04-24 12:36:33,622 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration currency -> org.hibernate.type.CurrencyType@45f756e6
2017-04-24 12:36:33,623 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@45f756e6
2017-04-24 12:36:33,627 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@656f62dc
2017-04-24 12:36:33,629 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@656f62dc
2017-04-24 12:36:33,635 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration class -> org.hibernate.type.ClassType@5a8c93
2017-04-24 12:36:33,636 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5a8c93
2017-04-24 12:36:33,641 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5634a861
2017-04-24 12:36:33,643 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5634a861
2017-04-24 12:36:33,645 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@43bdaa1b
2017-04-24 12:36:33,650 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration binary -> org.hibernate.type.BinaryType@7f9fc8bd
2017-04-24 12:36:33,651 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte[] -> org.hibernate.type.BinaryType@7f9fc8bd
2017-04-24 12:36:33,652 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [B -> org.hibernate.type.BinaryType@7f9fc8bd
2017-04-24 12:36:33,655 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1a500561
2017-04-24 12:36:33,658 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1a500561
2017-04-24 12:36:33,659 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1a500561
2017-04-24 12:36:33,662 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration row_version -> org.hibernate.type.RowVersionType@4086d8fb
2017-04-24 12:36:33,664 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration image -> org.hibernate.type.ImageType@7c781c42
2017-04-24 12:36:33,668 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration characters -> org.hibernate.type.CharArrayType@c386958
2017-04-24 12:36:33,670 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration char[] -> org.hibernate.type.CharArrayType@c386958
2017-04-24 12:36:33,672 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [C -> org.hibernate.type.CharArrayType@c386958
2017-04-24 12:36:33,676 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3166f664
2017-04-24 12:36:33,677 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3166f664
2017-04-24 12:36:33,678 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3166f664
2017-04-24 12:36:33,681 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration text -> org.hibernate.type.TextType@44a085e5
2017-04-24 12:36:33,685 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ntext -> org.hibernate.type.NTextType@2152ab30
2017-04-24 12:36:33,696 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration blob -> org.hibernate.type.BlobType@6749fe50
2017-04-24 12:36:33,698 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6749fe50
2017-04-24 12:36:33,700 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@ae73c80
2017-04-24 12:36:33,713 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration clob -> org.hibernate.type.ClobType@5562c2c9
2017-04-24 12:36:33,718 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5562c2c9
2017-04-24 12:36:33,728 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration nclob -> org.hibernate.type.NClobType@51ab1ee3
2017-04-24 12:36:33,733 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@51ab1ee3
2017-04-24 12:36:33,738 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@28757abd
2017-04-24 12:36:33,743 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@138aa3cc
2017-04-24 12:36:33,751 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration serializable -> org.hibernate.type.SerializableType@ceddaf8
2017-04-24 12:36:33,761 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration object -> org.hibernate.type.ObjectType@76a805b7
2017-04-24 12:36:33,766 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@76a805b7
2017-04-24 12:36:33,774 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@608b1fd2
2017-04-24 12:36:33,778 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@56382bc9
2017-04-24 12:36:33,781 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@591a4f8e
2017-04-24 12:36:33,785 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@53ed80d3
2017-04-24 12:36:33,786 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6ba060f3
2017-04-24 12:36:33,789 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7c51782d
2017-04-24 12:36:33,790 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@77bc2e16
2017-04-24 12:36:33,790 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@48e8c32a
2017-04-24 12:36:33,829 WARN  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:70) - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2017-04-24 12:36:33,836 DEBUG [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:154) - No driver class specified
2017-04-24 12:36:33,840 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:126) - HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306/strutsproject]
2017-04-24 12:36:33,844 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:132) - HHH10001001: Connection properties: {user=root, password=}
2017-04-24 12:36:33,858 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:140) - HHH10001003: Autocommit mode: false
2017-04-24 12:36:33,872 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:384) - Initializing Connection pool with 1 Connections
2017-04-24 12:36:33,876 INFO  [main] internal.PooledConnections (PooledConnections.java:41) - HHH000115: Hibernate connection pool size: 1 (min=1)
2017-04-24 12:36:34,502 DEBUG [main] internal.JdbcEnvironmentInitiator (JdbcEnvironmentInitiator.java:72) - Database ->
       name : MySQL
    version : 5.6.30-1
      major : 5
      minor : 6
2017-04-24 12:36:34,504 DEBUG [main] internal.JdbcEnvironmentInitiator (JdbcEnvironmentInitiator.java:83) - Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.9 ( Revision: ${svn.Revision} )
      major : 5
      minor : 1
2017-04-24 12:36:34,509 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:389) - JDBC version : 3.0
2017-04-24 12:36:34,566 INFO  [main] dialect.Dialect (Dialect.java:157) - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2017-04-24 12:36:34,688 DEBUG [main] spi.IdentifierHelperBuilder (IdentifierHelperBuilder.java:117) - JDBC driver metadata reported database stores quoted identifiers in more than one case
2017-04-24 12:36:34,697 DEBUG [main] spi.IdentifierHelperBuilder (IdentifierHelperBuilder.java:191) - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2017-04-24 12:36:34,721 INFO  [main] internal.LobCreatorBuilderImpl (LobCreatorBuilderImpl.java:98) - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2017-04-24 12:36:34,798 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2017-04-24 12:36:34,803 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2017-04-24 12:36:34,807 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2017-04-24 12:36:34,808 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2017-04-24 12:36:34,811 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2017-04-24 12:36:34,817 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2017-04-24 12:36:34,820 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2017-04-24 12:36:34,824 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2017-04-24 12:36:34,827 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2017-04-24 12:36:34,830 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2017-04-24 12:36:34,833 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2017-04-24 12:36:34,835 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2017-04-24 12:36:34,836 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2017-04-24 12:36:34,838 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2017-04-24 12:36:35,343 DEBUG [main] relational.Namespace (Namespace.java:47) - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2017-04-24 12:36:35,421 DEBUG [main] cfg.AnnotationBinder (AnnotationBinder.java:511) - Binding entity from annotated class: com.example.struts2.model.Users
2017-04-24 12:36:35,487 DEBUG [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2017-04-24 12:36:35,511 DEBUG [main] annotations.EntityBinder (EntityBinder.java:419) - Import with entity name users
2017-04-24 12:36:35,530 DEBUG [main] annotations.EntityBinder (EntityBinder.java:695) - Bind entity com.example.struts2.model.Users on table users
2017-04-24 12:36:35,613 DEBUG [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
2017-04-24 12:36:35,626 DEBUG [main] annotations.PropertyBinder (PropertyBinder.java:174) - MetadataSourceProcessor property id with lazy=false
2017-04-24 12:36:35,634 DEBUG [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.example.struts2.model.Users:id]
2017-04-24 12:36:35,640 DEBUG [main] annotations.SimpleValueBinder (SimpleValueBinder.java:411) - building SimpleValue for id
2017-04-24 12:36:35,650 DEBUG [main] annotations.PropertyBinder (PropertyBinder.java:265) - Building property id
2017-04-24 12:36:35,658 DEBUG [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2017-04-24 12:36:35,659 DEBUG [main] annotations.PropertyBinder (PropertyBinder.java:174) - MetadataSourceProcessor property password with lazy=false
2017-04-24 12:36:35,660 DEBUG [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.example.struts2.model.Users:password]
2017-04-24 12:36:35,661 DEBUG [main] annotations.SimpleValueBinder (SimpleValueBinder.java:411) - building SimpleValue for password
2017-04-24 12:36:35,662 DEBUG [main] annotations.PropertyBinder (PropertyBinder.java:265) - Building property password
2017-04-24 12:36:35,668 DEBUG [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=false}
2017-04-24 12:36:35,676 DEBUG [main] annotations.PropertyBinder (PropertyBinder.java:174) - MetadataSourceProcessor property username with lazy=false
2017-04-24 12:36:35,677 DEBUG [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.example.struts2.model.Users:username]
2017-04-24 12:36:35,678 DEBUG [main] annotations.SimpleValueBinder (SimpleValueBinder.java:411) - building SimpleValue for username
2017-04-24 12:36:35,679 DEBUG [main] annotations.PropertyBinder (PropertyBinder.java:265) - Building property username
2017-04-24 12:36:35,686 DEBUG [main] annotations.SimpleValueBinder (SimpleValueBinder.java:456) - Starting fillSimpleValue for id
2017-04-24 12:36:35,687 DEBUG [main] annotations.SimpleValueBinder (SimpleValueBinder.java:456) - Starting fillSimpleValue for password
2017-04-24 12:36:35,688 DEBUG [main] annotations.SimpleValueBinder (SimpleValueBinder.java:456) - Starting fillSimpleValue for username
2017-04-24 12:36:35,692 DEBUG [main] mapping.PrimaryKey (PrimaryKey.java:35) - Forcing column [id] to be non-null as it is part of the primary key for table [users]
2017-04-24 12:36:35,794 DEBUG [main] internal.SessionFactoryImpl (SessionFactoryImpl.java:199) - Building session factory
2017-04-24 12:36:35,799 DEBUG [main] cfg.Settings (Settings.java:69) - SessionFactory name : null
2017-04-24 12:36:35,802 DEBUG [main] cfg.Settings (Settings.java:70) - Automatic flush during beforeCompletion(): enabled
2017-04-24 12:36:35,804 DEBUG [main] cfg.Settings (Settings.java:71) - Automatic session close at end of transaction: disabled
2017-04-24 12:36:35,804 DEBUG [main] cfg.Settings (Settings.java:73) - Statistics: disabled
2017-04-24 12:36:35,805 DEBUG [main] cfg.Settings (Settings.java:75) - Deleted entity synthetic identifier rollback: disabled
2017-04-24 12:36:35,807 DEBUG [main] cfg.Settings (Settings.java:76) - Default entity-mode: pojo
2017-04-24 12:36:35,808 DEBUG [main] cfg.Settings (Settings.java:77) - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2017-04-24 12:36:35,809 DEBUG [main] cfg.Settings (Settings.java:78) - Allow initialization of lazy state outside session : disabled
2017-04-24 12:36:35,809 DEBUG [main] cfg.Settings (Settings.java:80) - Using BatchFetchStyle : LEGACY
2017-04-24 12:36:35,810 DEBUG [main] cfg.Settings (Settings.java:81) - Default batch fetch size: -1
2017-04-24 12:36:35,813 DEBUG [main] cfg.Settings (Settings.java:82) - Maximum outer join fetch depth: 2
2017-04-24 12:36:35,818 DEBUG [main] cfg.Settings (Settings.java:83) - Default null ordering: NONE
2017-04-24 12:36:35,819 DEBUG [main] cfg.Settings (Settings.java:84) - Order SQL updates by primary key: disabled
2017-04-24 12:36:35,820 DEBUG [main] cfg.Settings (Settings.java:85) - Order SQL inserts for batching: disabled
2017-04-24 12:36:35,820 DEBUG [main] cfg.Settings (Settings.java:87) - multi-tenancy strategy : NONE
2017-04-24 12:36:35,820 DEBUG [main] cfg.Settings (Settings.java:89) - JTA Track by Thread: enabled
2017-04-24 12:36:35,823 DEBUG [main] cfg.Settings (Settings.java:91) - Query language substitutions: {}
2017-04-24 12:36:35,827 DEBUG [main] cfg.Settings (Settings.java:92) - JPA query language strict compliance: disabled
2017-04-24 12:36:35,828 DEBUG [main] cfg.Settings (Settings.java:93) - Named query checking : enabled
2017-04-24 12:36:35,830 DEBUG [main] cfg.Settings (Settings.java:95) - Second-level cache: enabled
2017-04-24 12:36:35,835 DEBUG [main] cfg.Settings (Settings.java:96) - Second-level query cache: disabled
2017-04-24 12:36:35,836 DEBUG [main] cfg.Settings (Settings.java:97) - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@22bf9122
2017-04-24 12:36:35,837 DEBUG [main] cfg.Settings (Settings.java:98) - Second-level cache region prefix: null
2017-04-24 12:36:35,837 DEBUG [main] cfg.Settings (Settings.java:99) - Optimize second-level cache for minimal puts: disabled
2017-04-24 12:36:35,838 DEBUG [main] cfg.Settings (Settings.java:100) - Structured second-level cache entries: disabled
2017-04-24 12:36:35,838 DEBUG [main] cfg.Settings (Settings.java:101) - Second-level cache direct-reference entries: disabled
2017-04-24 12:36:35,838 DEBUG [main] cfg.Settings (Settings.java:102) - Automatic eviction of collection cache: disabled
2017-04-24 12:36:35,840 DEBUG [main] cfg.Settings (Settings.java:104) - JDBC batch size: 15
2017-04-24 12:36:35,841 DEBUG [main] cfg.Settings (Settings.java:105) - JDBC batch updates for versioned data: enabled
2017-04-24 12:36:35,841 DEBUG [main] cfg.Settings (Settings.java:106) - Scrollable result sets: enabled
2017-04-24 12:36:35,842 DEBUG [main] cfg.Settings (Settings.java:107) - Wrap result sets: disabled
2017-04-24 12:36:35,842 DEBUG [main] cfg.Settings (Settings.java:108) - JDBC3 getGeneratedKeys(): enabled
2017-04-24 12:36:35,843 DEBUG [main] cfg.Settings (Settings.java:109) - JDBC result set fetch size: null
2017-04-24 12:36:35,844 DEBUG [main] cfg.Settings (Settings.java:110) - Connection release mode: AFTER_TRANSACTION
2017-04-24 12:36:35,844 DEBUG [main] cfg.Settings (Settings.java:111) - Generate SQL with comments: disabled
2017-04-24 12:36:36,048 DEBUG [main] internal.SessionFactoryImpl (SessionFactoryImpl.java:254) - Session factory constructed with filter configurations : {}
2017-04-24 12:36:36,049 DEBUG [main] internal.SessionFactoryImpl (SessionFactoryImpl.java:255) - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, java.vendor.url=http://java.oracle.com/, user.timezone=Asia/Jakarta, os.name=Linux, java.vm.specification.version=1.8, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, maven.home=/usr/share/maven, sun.cpu.endian=little, user.home=/root, user.language=en, java.specification.vendor=Oracle Corporation, java.home=/usr/lib/jvm/java-8-openjdk-amd64/jre, file.separator=/, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, sun.boot.class.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/classes, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_111-8u111-b14-3-b14, user.name=root, path.separator=:, securerandom.source=file:/dev/./urandom, hibernate.connection.username=root, os.version=4.8.0-kali2-amd64, java.endorsed.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/endorsed, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/strutsproject, file.encoding=UTF-8, guice.disable.misplaced.annotation.check=true, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=/tmp, java.version=1.8.0_111, user.dir=/root/Source/java/struts/struts-project, os.arch=amd64, maven.multiModuleProjectDirectory=/root/Source/java/struts/struts-project, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@4d705112, java.library.path=/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.111-b14, classworlds.conf=/usr/share/maven/bin/m2.conf, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.pool_size=1, java.ext.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
2017-04-24 12:36:36,079 DEBUG [main] spi.JaccIntegrator (JaccIntegrator.java:80) - Skipping JACC integration as it was not enabled
2017-04-24 12:36:36,103 DEBUG [main] internal.SessionFactoryImpl (SessionFactoryImpl.java:294) - Instantiated session factory
2017-04-24 12:36:36,242 DEBUG [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [com.example.struts2.model.Users] is safe
2017-04-24 12:36:36,246 DEBUG [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.struts2.model.Users
2017-04-24 12:36:36,302 DEBUG [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [com.example.struts2.model.Users] is safe
2017-04-24 12:36:36,303 DEBUG [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.struts2.model.Users
2017-04-24 12:36:36,459 DEBUG [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3598) - Static SQL for entity: com.example.struts2.model.Users
2017-04-24 12:36:36,460 DEBUG [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3603) -  Version select: select id from users where id =?
2017-04-24 12:36:36,461 DEBUG [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3606) -  Snapshot select: select users_.id, users_.password as password2_0_, users_.username as username3_0_ from users users_ where users_.id=?
2017-04-24 12:36:36,461 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Insert 0: insert into users (password, username, id) values (?, ?, ?)
2017-04-24 12:36:36,462 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Update 0: update users set password=?, username=? where id=?
2017-04-24 12:36:36,463 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Delete 0: delete from users where id=?
2017-04-24 12:36:36,463 DEBUG [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3614) -  Identity insert: insert into users (password, username) values (?, ?)
2017-04-24 12:36:36,533 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a21f43f]
2017-04-24 12:36:36,545 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:36:36,546 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:36:36,551 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:36:36,584 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:36:36,600 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:36:36,606 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [NONE]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-24 12:36:36,607 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4776e209]
2017-04-24 12:36:36,608 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:36:36,610 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:36:36,611 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:36:36,612 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:36:36,614 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:36:36,615 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [READ]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-24 12:36:36,616 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f536481]
2017-04-24 12:36:36,616 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:36:36,621 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:36:36,622 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:36:36,623 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:36:36,628 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:36:36,633 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [UPGRADE]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=? for update
2017-04-24 12:36:36,636 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22a260ff]
2017-04-24 12:36:36,637 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:36:36,638 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:36:36,639 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:36:36,640 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:36:36,643 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:36:36,644 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [UPGRADE_NOWAIT]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=? for update
2017-04-24 12:36:36,645 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50b734c4]
2017-04-24 12:36:36,646 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:36:36,651 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:36:36,652 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:36:36,653 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:36:36,655 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:36:36,656 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [UPGRADE_SKIPLOCKED]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=? for update
2017-04-24 12:36:36,656 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16d0e521]
2017-04-24 12:36:36,657 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:36:36,658 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:36:36,658 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:36:36,659 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:36:36,660 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:36:36,661 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [FORCE]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=? for update
2017-04-24 12:36:36,662 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ab4aa5e]
2017-04-24 12:36:36,663 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:36:36,666 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:36:36,668 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:36:36,669 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:36:36,670 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:36:36,671 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [PESSIMISTIC_READ]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=? lock in share mode
2017-04-24 12:36:36,671 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a7cb3a4]
2017-04-24 12:36:36,672 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:36:36,673 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:36:36,673 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:36:36,675 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:36:36,676 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:36:36,677 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [PESSIMISTIC_WRITE]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=? for update
2017-04-24 12:36:36,677 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33e0c716]
2017-04-24 12:36:36,678 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:36:36,679 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:36:36,679 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:36:36,682 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:36:36,684 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:36:36,685 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [PESSIMISTIC_FORCE_INCREMENT]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=? for update
2017-04-24 12:36:36,685 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6274f21c]
2017-04-24 12:36:36,687 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:36:36,688 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:36:36,688 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:36:36,689 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:36:36,690 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:36:36,691 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [OPTIMISTIC]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-24 12:36:36,692 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@237add]
2017-04-24 12:36:36,693 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:36:36,693 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:36:36,694 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:36:36,695 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:36:36,697 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:36:36,699 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [OPTIMISTIC_FORCE_INCREMENT]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-24 12:36:36,746 DEBUG [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_MERGE on entity com.example.struts2.model.Users: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-24 12:36:36,751 DEBUG [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_REFRESH on entity com.example.struts2.model.Users: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-24 12:36:36,823 DEBUG [main] spi.SchemaManagementToolCoordinator (SchemaManagementToolCoordinator.java:56) - No actions specified; doing nothing
2017-04-24 12:36:36,825 DEBUG [main] internal.JtaPlatformInitiator (JtaPlatformInitiator.java:42) - No JtaPlatform was specified, checking resolver
2017-04-24 12:36:36,832 DEBUG [main] internal.JtaPlatformResolverInitiator (JtaPlatformResolverInitiator.java:33) - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2017-04-24 12:36:36,852 DEBUG [main] internal.StandardJtaPlatformResolver (StandardJtaPlatformResolver.java:102) - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2017-04-24 12:36:36,859 DEBUG [main] spi.NamedQueryRepository (NamedQueryRepository.java:151) - Checking 0 named HQL queries
2017-04-24 12:36:36,861 DEBUG [main] spi.NamedQueryRepository (NamedQueryRepository.java:167) - Checking 0 named SQL queries
2017-04-24 12:36:36,872 DEBUG [main] internal.SessionFactoryRegistry (SessionFactoryRegistry.java:52) - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@268c030f
2017-04-24 12:36:36,884 DEBUG [main] internal.SessionFactoryRegistry (SessionFactoryRegistry.java:74) - Registering SessionFactory: e7f93b39-206b-42a1-b142-73a513955deb (<unnamed>)
2017-04-24 12:36:36,887 DEBUG [main] internal.SessionFactoryRegistry (SessionFactoryRegistry.java:81) - Not binding SessionFactory to JNDI, no JNDI name configured
2017-04-24 12:37:04,501 DEBUG [pool-2-thread-1] internal.PooledConnections (PooledConnections.java:51) - Connection pool now considered primed; min-size will be maintained
2017-04-24 12:37:37,406 INFO  [qtp350413251-18] action.Login (Login.java:25) - VALIDATE admin aad
2017-04-24 12:37:37,675 DEBUG [qtp350413251-18] internal.StatisticsInitiator (StatisticsInitiator.java:82) - Statistics initialized [enabled=false]
2017-04-24 12:37:37,698 DEBUG [qtp350413251-18] internal.TransactionImpl (TransactionImpl.java:55) - begin
2017-04-24 12:37:37,759 DEBUG [qtp350413251-18] internal.QueryTranslatorFactoryInitiator (QueryTranslatorFactoryInitiator.java:45) - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@7985ed63
2017-04-24 12:37:37,767 INFO  [qtp350413251-18] internal.QueryTranslatorFactoryInitiator (QueryTranslatorFactoryInitiator.java:47) - HHH000397: Using ASTQueryTranslatorFactory
2017-04-24 12:37:37,858 DEBUG [qtp350413251-18] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:282) - parse() - HQL: from com.example.struts2.model.Users where username = :username and password = :password
2017-04-24 12:37:37,894 DEBUG [qtp350413251-18] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:300) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[DOT] Node: '.'
    |           |  |  |  +-[IDENT] Node: 'com'
    |           |  |  |  \-[IDENT] Node: 'example'
    |           |  |  \-[IDENT] Node: 'struts2'
    |           |  \-[IDENT] Node: 'model'
    |           \-[IDENT] Node: 'Users'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[IDENT] Node: 'username'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'username'
          \-[EQ] Node: '='
             +-[IDENT] Node: 'password'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'password'

2017-04-24 12:37:37,898 DEBUG [qtp350413251-18] ast.ErrorCounter (ErrorCounter.java:95) - throwQueryException() : no errors
2017-04-24 12:37:37,972 DEBUG [qtp350413251-18] antlr.HqlSqlBaseWalker (HqlSqlBaseWalker.java:124) - select << begin [level=1, statement=select]
2017-04-24 12:37:38,054 DEBUG [qtp350413251-18] tree.FromElement (FromElement.java:147) - FromClause{level=1} : com.example.struts2.model.Users (<no alias>) -> users0_
2017-04-24 12:37:38,063 DEBUG [qtp350413251-18] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : {synthetic-alias} -> {synthetic-alias}
2017-04-24 12:37:38,074 DEBUG [qtp350413251-18] tree.DotNode (DotNode.java:666) - getDataType() : username -> org.hibernate.type.StringType@141d3d43
2017-04-24 12:37:38,079 DEBUG [qtp350413251-18] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : {synthetic-alias}.username -> users0_.username
2017-04-24 12:37:38,088 DEBUG [qtp350413251-18] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : {synthetic-alias} -> {synthetic-alias}
2017-04-24 12:37:38,092 DEBUG [qtp350413251-18] tree.DotNode (DotNode.java:666) - getDataType() : password -> org.hibernate.type.StringType@141d3d43
2017-04-24 12:37:38,096 DEBUG [qtp350413251-18] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : {synthetic-alias}.password -> users0_.password
2017-04-24 12:37:38,106 DEBUG [qtp350413251-18] antlr.HqlSqlBaseWalker (HqlSqlBaseWalker.java:128) - select : finishing up [level=1, statement=select]
2017-04-24 12:37:38,112 DEBUG [qtp350413251-18] ast.HqlSqlWalker (HqlSqlWalker.java:745) - processQuery() :  ( SELECT ( FromClause{level=1} users users0_ ) ( where ( and ( = ( users0_.username {synthetic-alias} username ) ? ) ( = ( users0_.password {synthetic-alias} password ) ? ) ) ) )
2017-04-24 12:37:38,139 DEBUG [qtp350413251-18] ast.HqlSqlWalker (HqlSqlWalker.java:1021) - Derived SELECT clause created.
2017-04-24 12:37:38,158 DEBUG [qtp350413251-18] util.JoinProcessor (JoinProcessor.java:187) - Using FROM fragment [users users0_]
2017-04-24 12:37:38,171 DEBUG [qtp350413251-18] antlr.HqlSqlBaseWalker (HqlSqlBaseWalker.java:132) - select >> end [level=1, statement=select]
2017-04-24 12:37:38,176 DEBUG [qtp350413251-18] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:269) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'users0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=users,tableAlias=users0_,origin=null,columns={,className=com.example.struts2.model.Users}}}
    |  \-[SQL_TOKEN] SqlFragment: 'users0_.password as password2_0_, users0_.username as username3_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[users0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users users0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=users,tableAlias=users0_,origin=null,columns={,className=com.example.struts2.model.Users}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'users0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path={synthetic-alias}.username,tableAlias=users0_,className=com.example.struts2.model.Users,classAlias=null}
          |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |  \-[IDENT] IdentNode: 'username' {originalText=username}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=username, expectedType=org.hibernate.type.StringType@141d3d43}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'users0_.password' {propertyName=password,dereferenceType=PRIMITIVE,getPropertyPath=password,path={synthetic-alias}.password,tableAlias=users0_,className=com.example.struts2.model.Users,classAlias=null}
             |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             |  \-[IDENT] IdentNode: 'password' {originalText=password}
             \-[NAMED_PARAM] ParameterNode: '?' {name=password, expectedType=org.hibernate.type.StringType@141d3d43}

2017-04-24 12:37:38,180 DEBUG [qtp350413251-18] ast.ErrorCounter (ErrorCounter.java:95) - throwQueryException() : no errors
2017-04-24 12:37:38,208 DEBUG [qtp350413251-18] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:251) - HQL: from com.example.struts2.model.Users where username = :username and password = :password
2017-04-24 12:37:38,212 DEBUG [qtp350413251-18] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:252) - SQL: select users0_.id as id1_0_, users0_.password as password2_0_, users0_.username as username3_0_ from users users0_ where users0_.username=? and users0_.password=?
2017-04-24 12:37:38,216 DEBUG [qtp350413251-18] ast.ErrorCounter (ErrorCounter.java:95) - throwQueryException() : no errors
2017-04-24 12:37:38,282 DEBUG [qtp350413251-18] spi.SqlStatementLogger (SqlStatementLogger.java:92) - select users0_.id as id1_0_, users0_.password as password2_0_, users0_.username as username3_0_ from users users0_ where users0_.username=? and users0_.password=?
2017-04-24 12:39:49,796 DEBUG [main] internal.CoreLogging (CoreLogging.java:28) - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2017-04-24 12:39:49,869 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2017-04-24 12:39:49,878 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2017-04-24 12:39:49,898 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2017-04-24 12:39:50,571 INFO  [main] hibernate.Version (Version.java:45) - HHH000412: Hibernate Core {5.2.9.Final}
2017-04-24 12:39:50,577 INFO  [main] cfg.Environment (Environment.java:213) - HHH000206: hibernate.properties not found
2017-04-24 12:39:50,645 DEBUG [main] internal.JaxbCfgProcessor (JaxbCfgProcessor.java:116) - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2017-04-24 12:39:51,169 DEBUG [main] cfg.Configuration (Configuration.java:724) - Building session factory using internal StandardServiceRegistryBuilder
2017-04-24 12:39:51,185 DEBUG [main] spi.ServiceBinding (ServiceBinding.java:68) - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2017-04-24 12:39:51,186 DEBUG [main] cfg.Configuration (Configuration.java:652) - Building session factory using provided StandardServiceRegistry
2017-04-24 12:39:51,244 DEBUG [main] internal.RegionFactoryInitiator (RegionFactoryInitiator.java:75) - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2017-04-24 12:39:51,272 INFO  [main] java.JavaReflectionManager (JavaReflectionManager.java:66) - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2017-04-24 12:39:51,340 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@334ebcaa
2017-04-24 12:39:51,341 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@334ebcaa
2017-04-24 12:39:51,341 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@334ebcaa
2017-04-24 12:39:51,345 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6c1cfa53
2017-04-24 12:39:51,364 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@37d28f02
2017-04-24 12:39:51,368 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration yes_no -> org.hibernate.type.YesNoType@33f2df51
2017-04-24 12:39:51,374 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@61a91c9b
2017-04-24 12:39:51,375 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@61a91c9b
2017-04-24 12:39:51,380 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@61a91c9b
2017-04-24 12:39:51,395 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration character -> org.hibernate.type.CharacterType@462e1e64
2017-04-24 12:39:51,396 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration char -> org.hibernate.type.CharacterType@462e1e64
2017-04-24 12:39:51,397 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@462e1e64
2017-04-24 12:39:51,403 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@22c75c01
2017-04-24 12:39:51,404 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@22c75c01
2017-04-24 12:39:51,404 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@22c75c01
2017-04-24 12:39:51,424 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration integer -> org.hibernate.type.IntegerType@2f0ed952
2017-04-24 12:39:51,425 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration int -> org.hibernate.type.IntegerType@2f0ed952
2017-04-24 12:39:51,425 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2f0ed952
2017-04-24 12:39:51,429 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@4832f03b
2017-04-24 12:39:51,430 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@4832f03b
2017-04-24 12:39:51,439 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4832f03b
2017-04-24 12:39:51,444 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@e11ecfa
2017-04-24 12:39:51,445 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@e11ecfa
2017-04-24 12:39:51,455 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@e11ecfa
2017-04-24 12:39:51,459 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@43acd79e
2017-04-24 12:39:51,460 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@43acd79e
2017-04-24 12:39:51,461 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@43acd79e
2017-04-24 12:39:51,476 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@23a918c7
2017-04-24 12:39:51,477 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@23a918c7
2017-04-24 12:39:51,480 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1f67761b
2017-04-24 12:39:51,481 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1f67761b
2017-04-24 12:39:51,486 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration string -> org.hibernate.type.StringType@77ab22be
2017-04-24 12:39:51,487 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.String -> org.hibernate.type.StringType@77ab22be
2017-04-24 12:39:51,490 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6ca372ef
2017-04-24 12:39:51,493 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@280d4882
2017-04-24 12:39:51,496 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration url -> org.hibernate.type.UrlType@56b859a6
2017-04-24 12:39:51,497 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@56b859a6
2017-04-24 12:39:51,502 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Duration -> org.hibernate.type.DurationType@58015e56
2017-04-24 12:39:51,503 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@58015e56
2017-04-24 12:39:51,551 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Instant -> org.hibernate.type.InstantType@2db4ad1
2017-04-24 12:39:51,552 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2db4ad1
2017-04-24 12:39:51,556 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@6fc1020a
2017-04-24 12:39:51,558 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@6fc1020a
2017-04-24 12:39:51,563 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7dffda8b
2017-04-24 12:39:51,564 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7dffda8b
2017-04-24 12:39:51,570 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@66933239
2017-04-24 12:39:51,571 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@66933239
2017-04-24 12:39:51,576 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4f327096
2017-04-24 12:39:51,577 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4f327096
2017-04-24 12:39:51,581 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@41a374be
2017-04-24 12:39:51,584 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@41a374be
2017-04-24 12:39:51,596 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7be1ce6a
2017-04-24 12:39:51,597 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7be1ce6a
2017-04-24 12:39:51,603 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration date -> org.hibernate.type.DateType@2ddb3ae8
2017-04-24 12:39:51,604 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2ddb3ae8
2017-04-24 12:39:51,609 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration time -> org.hibernate.type.TimeType@6fbc1bb
2017-04-24 12:39:51,610 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6fbc1bb
2017-04-24 12:39:51,614 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration timestamp -> org.hibernate.type.TimestampType@48df4071
2017-04-24 12:39:51,615 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@48df4071
2017-04-24 12:39:51,617 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@48df4071
2017-04-24 12:39:51,623 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@67507df
2017-04-24 12:39:51,628 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration calendar -> org.hibernate.type.CalendarType@33feb805
2017-04-24 12:39:51,629 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@33feb805
2017-04-24 12:39:51,629 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@33feb805
2017-04-24 12:39:51,632 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@34332b8d
2017-04-24 12:39:51,637 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration locale -> org.hibernate.type.LocaleType@7cca01a8
2017-04-24 12:39:51,638 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7cca01a8
2017-04-24 12:39:51,641 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration currency -> org.hibernate.type.CurrencyType@45e9b12d
2017-04-24 12:39:51,642 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@45e9b12d
2017-04-24 12:39:51,644 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@329548d0
2017-04-24 12:39:51,645 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@329548d0
2017-04-24 12:39:51,648 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration class -> org.hibernate.type.ClassType@49d30c6f
2017-04-24 12:39:51,649 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@49d30c6f
2017-04-24 12:39:51,658 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1c7350b0
2017-04-24 12:39:51,662 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1c7350b0
2017-04-24 12:39:51,668 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@50448409
2017-04-24 12:39:51,675 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration binary -> org.hibernate.type.BinaryType@30b975ad
2017-04-24 12:39:51,678 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte[] -> org.hibernate.type.BinaryType@30b975ad
2017-04-24 12:39:51,682 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [B -> org.hibernate.type.BinaryType@30b975ad
2017-04-24 12:39:51,688 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@ea52184
2017-04-24 12:39:51,693 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@ea52184
2017-04-24 12:39:51,696 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@ea52184
2017-04-24 12:39:51,704 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration row_version -> org.hibernate.type.RowVersionType@7f608e21
2017-04-24 12:39:51,710 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration image -> org.hibernate.type.ImageType@66236a0a
2017-04-24 12:39:51,719 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration characters -> org.hibernate.type.CharArrayType@795f8317
2017-04-24 12:39:51,722 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration char[] -> org.hibernate.type.CharArrayType@795f8317
2017-04-24 12:39:51,725 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [C -> org.hibernate.type.CharArrayType@795f8317
2017-04-24 12:39:51,731 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@157ec23b
2017-04-24 12:39:51,736 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@157ec23b
2017-04-24 12:39:51,739 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@157ec23b
2017-04-24 12:39:51,746 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration text -> org.hibernate.type.TextType@47ac613b
2017-04-24 12:39:51,753 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ntext -> org.hibernate.type.NTextType@134ff8f8
2017-04-24 12:39:51,772 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration blob -> org.hibernate.type.BlobType@1f3b992
2017-04-24 12:39:51,775 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1f3b992
2017-04-24 12:39:51,781 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7beae796
2017-04-24 12:39:51,795 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration clob -> org.hibernate.type.ClobType@2eed37f4
2017-04-24 12:39:51,799 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2eed37f4
2017-04-24 12:39:51,809 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration nclob -> org.hibernate.type.NClobType@13dbed9e
2017-04-24 12:39:51,813 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@13dbed9e
2017-04-24 12:39:51,818 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1d50a7ca
2017-04-24 12:39:51,823 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3003e580
2017-04-24 12:39:51,837 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration serializable -> org.hibernate.type.SerializableType@5f174dd2
2017-04-24 12:39:51,847 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration object -> org.hibernate.type.ObjectType@326e0b8e
2017-04-24 12:39:51,849 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@326e0b8e
2017-04-24 12:39:51,855 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@34585ac9
2017-04-24 12:39:51,858 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@76a805b7
2017-04-24 12:39:51,862 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@15f35bc3
2017-04-24 12:39:51,867 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@167381c7
2017-04-24 12:39:51,868 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@608b1fd2
2017-04-24 12:39:51,869 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@56382bc9
2017-04-24 12:39:51,879 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@591a4f8e
2017-04-24 12:39:51,880 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@53ed80d3
2017-04-24 12:39:51,918 WARN  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:70) - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2017-04-24 12:39:51,923 DEBUG [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:154) - No driver class specified
2017-04-24 12:39:51,927 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:126) - HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306/strutsproject]
2017-04-24 12:39:51,933 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:132) - HHH10001001: Connection properties: {user=root, password=}
2017-04-24 12:39:51,944 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:140) - HHH10001003: Autocommit mode: false
2017-04-24 12:39:51,959 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:384) - Initializing Connection pool with 1 Connections
2017-04-24 12:39:51,963 INFO  [main] internal.PooledConnections (PooledConnections.java:41) - HHH000115: Hibernate connection pool size: 1 (min=1)
2017-04-24 12:39:52,542 DEBUG [main] internal.JdbcEnvironmentInitiator (JdbcEnvironmentInitiator.java:72) - Database ->
       name : MySQL
    version : 5.6.30-1
      major : 5
      minor : 6
2017-04-24 12:39:52,545 DEBUG [main] internal.JdbcEnvironmentInitiator (JdbcEnvironmentInitiator.java:83) - Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.9 ( Revision: ${svn.Revision} )
      major : 5
      minor : 1
2017-04-24 12:39:52,552 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:389) - JDBC version : 3.0
2017-04-24 12:39:52,587 INFO  [main] dialect.Dialect (Dialect.java:157) - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2017-04-24 12:39:52,705 DEBUG [main] spi.IdentifierHelperBuilder (IdentifierHelperBuilder.java:117) - JDBC driver metadata reported database stores quoted identifiers in more than one case
2017-04-24 12:39:52,717 DEBUG [main] spi.IdentifierHelperBuilder (IdentifierHelperBuilder.java:191) - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2017-04-24 12:39:52,753 INFO  [main] internal.LobCreatorBuilderImpl (LobCreatorBuilderImpl.java:98) - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2017-04-24 12:39:52,862 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2017-04-24 12:39:52,864 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2017-04-24 12:39:52,869 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2017-04-24 12:39:52,870 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2017-04-24 12:39:52,871 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2017-04-24 12:39:52,875 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2017-04-24 12:39:52,877 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2017-04-24 12:39:52,880 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2017-04-24 12:39:52,884 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2017-04-24 12:39:52,887 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2017-04-24 12:39:52,890 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2017-04-24 12:39:52,892 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2017-04-24 12:39:52,893 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2017-04-24 12:39:52,896 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2017-04-24 12:39:53,406 DEBUG [main] relational.Namespace (Namespace.java:47) - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2017-04-24 12:39:53,493 DEBUG [main] cfg.AnnotationBinder (AnnotationBinder.java:511) - Binding entity from annotated class: com.example.struts2.model.Users
2017-04-24 12:39:53,567 DEBUG [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2017-04-24 12:39:53,598 DEBUG [main] annotations.EntityBinder (EntityBinder.java:419) - Import with entity name users
2017-04-24 12:39:53,620 DEBUG [main] annotations.EntityBinder (EntityBinder.java:695) - Bind entity com.example.struts2.model.Users on table users
2017-04-24 12:39:53,707 DEBUG [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
2017-04-24 12:39:53,722 DEBUG [main] annotations.PropertyBinder (PropertyBinder.java:174) - MetadataSourceProcessor property id with lazy=false
2017-04-24 12:39:53,734 DEBUG [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.example.struts2.model.Users:id]
2017-04-24 12:39:53,742 DEBUG [main] annotations.SimpleValueBinder (SimpleValueBinder.java:411) - building SimpleValue for id
2017-04-24 12:39:53,753 DEBUG [main] annotations.PropertyBinder (PropertyBinder.java:265) - Building property id
2017-04-24 12:39:53,769 DEBUG [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2017-04-24 12:39:53,773 DEBUG [main] annotations.PropertyBinder (PropertyBinder.java:174) - MetadataSourceProcessor property password with lazy=false
2017-04-24 12:39:53,776 DEBUG [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.example.struts2.model.Users:password]
2017-04-24 12:39:53,780 DEBUG [main] annotations.SimpleValueBinder (SimpleValueBinder.java:411) - building SimpleValue for password
2017-04-24 12:39:53,783 DEBUG [main] annotations.PropertyBinder (PropertyBinder.java:265) - Building property password
2017-04-24 12:39:53,790 DEBUG [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=false}
2017-04-24 12:39:53,795 DEBUG [main] annotations.PropertyBinder (PropertyBinder.java:174) - MetadataSourceProcessor property username with lazy=false
2017-04-24 12:39:53,799 DEBUG [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.example.struts2.model.Users:username]
2017-04-24 12:39:53,801 DEBUG [main] annotations.SimpleValueBinder (SimpleValueBinder.java:411) - building SimpleValue for username
2017-04-24 12:39:53,802 DEBUG [main] annotations.PropertyBinder (PropertyBinder.java:265) - Building property username
2017-04-24 12:39:53,810 DEBUG [main] annotations.SimpleValueBinder (SimpleValueBinder.java:456) - Starting fillSimpleValue for id
2017-04-24 12:39:53,813 DEBUG [main] annotations.SimpleValueBinder (SimpleValueBinder.java:456) - Starting fillSimpleValue for password
2017-04-24 12:39:53,816 DEBUG [main] annotations.SimpleValueBinder (SimpleValueBinder.java:456) - Starting fillSimpleValue for username
2017-04-24 12:39:53,824 DEBUG [main] mapping.PrimaryKey (PrimaryKey.java:35) - Forcing column [id] to be non-null as it is part of the primary key for table [users]
2017-04-24 12:39:53,935 DEBUG [main] internal.SessionFactoryImpl (SessionFactoryImpl.java:199) - Building session factory
2017-04-24 12:39:53,940 DEBUG [main] cfg.Settings (Settings.java:69) - SessionFactory name : null
2017-04-24 12:39:53,945 DEBUG [main] cfg.Settings (Settings.java:70) - Automatic flush during beforeCompletion(): enabled
2017-04-24 12:39:53,956 DEBUG [main] cfg.Settings (Settings.java:71) - Automatic session close at end of transaction: disabled
2017-04-24 12:39:53,960 DEBUG [main] cfg.Settings (Settings.java:73) - Statistics: disabled
2017-04-24 12:39:53,962 DEBUG [main] cfg.Settings (Settings.java:75) - Deleted entity synthetic identifier rollback: disabled
2017-04-24 12:39:53,963 DEBUG [main] cfg.Settings (Settings.java:76) - Default entity-mode: pojo
2017-04-24 12:39:53,964 DEBUG [main] cfg.Settings (Settings.java:77) - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2017-04-24 12:39:53,972 DEBUG [main] cfg.Settings (Settings.java:78) - Allow initialization of lazy state outside session : disabled
2017-04-24 12:39:53,973 DEBUG [main] cfg.Settings (Settings.java:80) - Using BatchFetchStyle : LEGACY
2017-04-24 12:39:53,974 DEBUG [main] cfg.Settings (Settings.java:81) - Default batch fetch size: -1
2017-04-24 12:39:53,978 DEBUG [main] cfg.Settings (Settings.java:82) - Maximum outer join fetch depth: 2
2017-04-24 12:39:53,983 DEBUG [main] cfg.Settings (Settings.java:83) - Default null ordering: NONE
2017-04-24 12:39:53,985 DEBUG [main] cfg.Settings (Settings.java:84) - Order SQL updates by primary key: disabled
2017-04-24 12:39:53,985 DEBUG [main] cfg.Settings (Settings.java:85) - Order SQL inserts for batching: disabled
2017-04-24 12:39:53,986 DEBUG [main] cfg.Settings (Settings.java:87) - multi-tenancy strategy : NONE
2017-04-24 12:39:53,986 DEBUG [main] cfg.Settings (Settings.java:89) - JTA Track by Thread: enabled
2017-04-24 12:39:53,987 DEBUG [main] cfg.Settings (Settings.java:91) - Query language substitutions: {}
2017-04-24 12:39:53,987 DEBUG [main] cfg.Settings (Settings.java:92) - JPA query language strict compliance: disabled
2017-04-24 12:39:53,988 DEBUG [main] cfg.Settings (Settings.java:93) - Named query checking : enabled
2017-04-24 12:39:53,988 DEBUG [main] cfg.Settings (Settings.java:95) - Second-level cache: enabled
2017-04-24 12:39:53,988 DEBUG [main] cfg.Settings (Settings.java:96) - Second-level query cache: disabled
2017-04-24 12:39:53,989 DEBUG [main] cfg.Settings (Settings.java:97) - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@65ef48f2
2017-04-24 12:39:53,993 DEBUG [main] cfg.Settings (Settings.java:98) - Second-level cache region prefix: null
2017-04-24 12:39:53,997 DEBUG [main] cfg.Settings (Settings.java:99) - Optimize second-level cache for minimal puts: disabled
2017-04-24 12:39:54,000 DEBUG [main] cfg.Settings (Settings.java:100) - Structured second-level cache entries: disabled
2017-04-24 12:39:54,004 DEBUG [main] cfg.Settings (Settings.java:101) - Second-level cache direct-reference entries: disabled
2017-04-24 12:39:54,006 DEBUG [main] cfg.Settings (Settings.java:102) - Automatic eviction of collection cache: disabled
2017-04-24 12:39:54,010 DEBUG [main] cfg.Settings (Settings.java:104) - JDBC batch size: 15
2017-04-24 12:39:54,010 DEBUG [main] cfg.Settings (Settings.java:105) - JDBC batch updates for versioned data: enabled
2017-04-24 12:39:54,011 DEBUG [main] cfg.Settings (Settings.java:106) - Scrollable result sets: enabled
2017-04-24 12:39:54,011 DEBUG [main] cfg.Settings (Settings.java:107) - Wrap result sets: disabled
2017-04-24 12:39:54,012 DEBUG [main] cfg.Settings (Settings.java:108) - JDBC3 getGeneratedKeys(): enabled
2017-04-24 12:39:54,012 DEBUG [main] cfg.Settings (Settings.java:109) - JDBC result set fetch size: null
2017-04-24 12:39:54,013 DEBUG [main] cfg.Settings (Settings.java:110) - Connection release mode: AFTER_TRANSACTION
2017-04-24 12:39:54,013 DEBUG [main] cfg.Settings (Settings.java:111) - Generate SQL with comments: disabled
2017-04-24 12:39:54,218 DEBUG [main] internal.SessionFactoryImpl (SessionFactoryImpl.java:254) - Session factory constructed with filter configurations : {}
2017-04-24 12:39:54,221 DEBUG [main] internal.SessionFactoryImpl (SessionFactoryImpl.java:255) - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, java.vendor.url=http://java.oracle.com/, user.timezone=Asia/Jakarta, os.name=Linux, java.vm.specification.version=1.8, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, maven.home=/usr/share/maven, sun.cpu.endian=little, user.home=/root, user.language=en, java.specification.vendor=Oracle Corporation, java.home=/usr/lib/jvm/java-8-openjdk-amd64/jre, file.separator=/, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, sun.boot.class.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/classes, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_111-8u111-b14-3-b14, user.name=root, path.separator=:, securerandom.source=file:/dev/./urandom, hibernate.connection.username=root, os.version=4.8.0-kali2-amd64, java.endorsed.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/endorsed, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/strutsproject, file.encoding=UTF-8, guice.disable.misplaced.annotation.check=true, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=/tmp, java.version=1.8.0_111, user.dir=/root/Source/java/struts/struts-project, os.arch=amd64, maven.multiModuleProjectDirectory=/root/Source/java/struts/struts-project, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@47b33e07, java.library.path=/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.111-b14, classworlds.conf=/usr/share/maven/bin/m2.conf, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.pool_size=1, java.ext.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
2017-04-24 12:39:54,255 DEBUG [main] spi.JaccIntegrator (JaccIntegrator.java:80) - Skipping JACC integration as it was not enabled
2017-04-24 12:39:54,288 DEBUG [main] internal.SessionFactoryImpl (SessionFactoryImpl.java:294) - Instantiated session factory
2017-04-24 12:39:54,455 DEBUG [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [com.example.struts2.model.Users] is safe
2017-04-24 12:39:54,460 DEBUG [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.struts2.model.Users
2017-04-24 12:39:54,505 DEBUG [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [com.example.struts2.model.Users] is safe
2017-04-24 12:39:54,511 DEBUG [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.struts2.model.Users
2017-04-24 12:39:54,705 DEBUG [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3598) - Static SQL for entity: com.example.struts2.model.Users
2017-04-24 12:39:54,708 DEBUG [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3603) -  Version select: select id from users where id =?
2017-04-24 12:39:54,714 DEBUG [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3606) -  Snapshot select: select users_.id, users_.password as password2_0_, users_.username as username3_0_ from users users_ where users_.id=?
2017-04-24 12:39:54,717 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Insert 0: insert into users (password, username, id) values (?, ?, ?)
2017-04-24 12:39:54,719 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Update 0: update users set password=?, username=? where id=?
2017-04-24 12:39:54,719 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Delete 0: delete from users where id=?
2017-04-24 12:39:54,720 DEBUG [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3614) -  Identity insert: insert into users (password, username) values (?, ?)
2017-04-24 12:39:54,787 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c5df615]
2017-04-24 12:39:54,795 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:39:54,798 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:39:54,803 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:39:54,842 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:39:54,859 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:39:54,873 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [NONE]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-24 12:39:54,876 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18d47df0]
2017-04-24 12:39:54,880 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:39:54,883 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:39:54,887 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:39:54,890 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:39:54,891 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:39:54,892 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [READ]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-24 12:39:54,892 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@697a0948]
2017-04-24 12:39:54,893 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:39:54,894 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:39:54,894 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:39:54,901 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:39:54,905 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:39:54,907 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [UPGRADE]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=? for update
2017-04-24 12:39:54,910 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4776e209]
2017-04-24 12:39:54,913 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:39:54,916 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:39:54,921 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:39:54,923 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:39:54,927 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:39:54,933 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [UPGRADE_NOWAIT]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=? for update
2017-04-24 12:39:54,943 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f536481]
2017-04-24 12:39:54,944 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:39:54,945 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:39:54,945 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:39:54,946 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:39:54,965 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:39:54,969 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [UPGRADE_SKIPLOCKED]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=? for update
2017-04-24 12:39:54,972 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22a260ff]
2017-04-24 12:39:54,975 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:39:54,978 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:39:54,979 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:39:54,982 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:39:54,987 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:39:54,989 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [FORCE]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=? for update
2017-04-24 12:39:54,990 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50b734c4]
2017-04-24 12:39:54,995 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:39:55,002 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:39:55,003 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:39:55,004 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:39:55,016 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:39:55,020 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [PESSIMISTIC_READ]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=? lock in share mode
2017-04-24 12:39:55,021 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16d0e521]
2017-04-24 12:39:55,028 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:39:55,031 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:39:55,034 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:39:55,035 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:39:55,036 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:39:55,037 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [PESSIMISTIC_WRITE]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=? for update
2017-04-24 12:39:55,041 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ab4aa5e]
2017-04-24 12:39:55,045 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:39:55,047 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:39:55,051 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:39:55,055 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:39:55,060 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:39:55,062 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [PESSIMISTIC_FORCE_INCREMENT]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=? for update
2017-04-24 12:39:55,063 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a7cb3a4]
2017-04-24 12:39:55,066 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:39:55,070 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:39:55,072 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:39:55,078 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:39:55,080 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:39:55,081 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [OPTIMISTIC]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-24 12:39:55,083 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33e0c716]
2017-04-24 12:39:55,084 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 12:39:55,085 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 12:39:55,086 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 12:39:55,088 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 12:39:55,091 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 12:39:55,092 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [OPTIMISTIC_FORCE_INCREMENT]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-24 12:39:55,134 DEBUG [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_MERGE on entity com.example.struts2.model.Users: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-24 12:39:55,136 DEBUG [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_REFRESH on entity com.example.struts2.model.Users: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-24 12:39:55,202 DEBUG [main] spi.SchemaManagementToolCoordinator (SchemaManagementToolCoordinator.java:56) - No actions specified; doing nothing
2017-04-24 12:39:55,203 DEBUG [main] internal.JtaPlatformInitiator (JtaPlatformInitiator.java:42) - No JtaPlatform was specified, checking resolver
2017-04-24 12:39:55,205 DEBUG [main] internal.JtaPlatformResolverInitiator (JtaPlatformResolverInitiator.java:33) - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2017-04-24 12:39:55,224 DEBUG [main] internal.StandardJtaPlatformResolver (StandardJtaPlatformResolver.java:102) - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2017-04-24 12:39:55,228 DEBUG [main] spi.NamedQueryRepository (NamedQueryRepository.java:151) - Checking 0 named HQL queries
2017-04-24 12:39:55,229 DEBUG [main] spi.NamedQueryRepository (NamedQueryRepository.java:167) - Checking 0 named SQL queries
2017-04-24 12:39:55,236 DEBUG [main] internal.SessionFactoryRegistry (SessionFactoryRegistry.java:52) - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@a90e2c1
2017-04-24 12:39:55,241 DEBUG [main] internal.SessionFactoryRegistry (SessionFactoryRegistry.java:74) - Registering SessionFactory: 7d523b2f-94e6-4d6a-8af1-fbbe8cb7e2f8 (<unnamed>)
2017-04-24 12:39:55,242 DEBUG [main] internal.SessionFactoryRegistry (SessionFactoryRegistry.java:81) - Not binding SessionFactory to JNDI, no JNDI name configured
2017-04-24 12:40:22,541 DEBUG [pool-2-thread-1] internal.PooledConnections (PooledConnections.java:51) - Connection pool now considered primed; min-size will be maintained
2017-04-24 12:51:42,236 INFO  [qtp2096194236-17] action.Login (Login.java:25) - VALIDATE admin ad
2017-04-24 12:51:42,625 DEBUG [qtp2096194236-17] internal.StatisticsInitiator (StatisticsInitiator.java:82) - Statistics initialized [enabled=false]
2017-04-24 12:51:42,666 DEBUG [qtp2096194236-17] internal.TransactionImpl (TransactionImpl.java:55) - begin
2017-04-24 12:51:42,742 DEBUG [qtp2096194236-17] internal.QueryTranslatorFactoryInitiator (QueryTranslatorFactoryInitiator.java:45) - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@6e93a5
2017-04-24 12:51:42,746 INFO  [qtp2096194236-17] internal.QueryTranslatorFactoryInitiator (QueryTranslatorFactoryInitiator.java:47) - HHH000397: Using ASTQueryTranslatorFactory
2017-04-24 12:51:42,869 DEBUG [qtp2096194236-17] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:282) - parse() - HQL: from com.example.struts2.model.Users where username = :username and password = :password
2017-04-24 12:51:42,931 DEBUG [qtp2096194236-17] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:300) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[DOT] Node: '.'
    |           |  |  |  +-[IDENT] Node: 'com'
    |           |  |  |  \-[IDENT] Node: 'example'
    |           |  |  \-[IDENT] Node: 'struts2'
    |           |  \-[IDENT] Node: 'model'
    |           \-[IDENT] Node: 'Users'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[IDENT] Node: 'username'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'username'
          \-[EQ] Node: '='
             +-[IDENT] Node: 'password'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'password'

2017-04-24 12:51:42,934 DEBUG [qtp2096194236-17] ast.ErrorCounter (ErrorCounter.java:95) - throwQueryException() : no errors
2017-04-24 12:51:43,060 DEBUG [qtp2096194236-17] antlr.HqlSqlBaseWalker (HqlSqlBaseWalker.java:124) - select << begin [level=1, statement=select]
2017-04-24 12:51:43,125 DEBUG [qtp2096194236-17] tree.FromElement (FromElement.java:147) - FromClause{level=1} : com.example.struts2.model.Users (<no alias>) -> users0_
2017-04-24 12:51:43,142 DEBUG [qtp2096194236-17] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : {synthetic-alias} -> {synthetic-alias}
2017-04-24 12:51:43,149 DEBUG [qtp2096194236-17] tree.DotNode (DotNode.java:666) - getDataType() : username -> org.hibernate.type.StringType@77ab22be
2017-04-24 12:51:43,156 DEBUG [qtp2096194236-17] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : {synthetic-alias}.username -> users0_.username
2017-04-24 12:51:43,169 DEBUG [qtp2096194236-17] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : {synthetic-alias} -> {synthetic-alias}
2017-04-24 12:51:43,174 DEBUG [qtp2096194236-17] tree.DotNode (DotNode.java:666) - getDataType() : password -> org.hibernate.type.StringType@77ab22be
2017-04-24 12:51:43,180 DEBUG [qtp2096194236-17] tree.FromReferenceNode (FromReferenceNode.java:60) - Resolved : {synthetic-alias}.password -> users0_.password
2017-04-24 12:51:43,184 DEBUG [qtp2096194236-17] antlr.HqlSqlBaseWalker (HqlSqlBaseWalker.java:128) - select : finishing up [level=1, statement=select]
2017-04-24 12:51:43,186 DEBUG [qtp2096194236-17] ast.HqlSqlWalker (HqlSqlWalker.java:745) - processQuery() :  ( SELECT ( FromClause{level=1} users users0_ ) ( where ( and ( = ( users0_.username {synthetic-alias} username ) ? ) ( = ( users0_.password {synthetic-alias} password ) ? ) ) ) )
2017-04-24 12:51:43,203 DEBUG [qtp2096194236-17] ast.HqlSqlWalker (HqlSqlWalker.java:1021) - Derived SELECT clause created.
2017-04-24 12:51:43,222 DEBUG [qtp2096194236-17] util.JoinProcessor (JoinProcessor.java:187) - Using FROM fragment [users users0_]
2017-04-24 12:51:43,227 DEBUG [qtp2096194236-17] antlr.HqlSqlBaseWalker (HqlSqlBaseWalker.java:132) - select >> end [level=1, statement=select]
2017-04-24 12:51:43,232 DEBUG [qtp2096194236-17] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:269) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'users0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=users,tableAlias=users0_,origin=null,columns={,className=com.example.struts2.model.Users}}}
    |  \-[SQL_TOKEN] SqlFragment: 'users0_.password as password2_0_, users0_.username as username3_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[users0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users users0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=users,tableAlias=users0_,origin=null,columns={,className=com.example.struts2.model.Users}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'users0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path={synthetic-alias}.username,tableAlias=users0_,className=com.example.struts2.model.Users,classAlias=null}
          |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |  \-[IDENT] IdentNode: 'username' {originalText=username}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=username, expectedType=org.hibernate.type.StringType@77ab22be}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'users0_.password' {propertyName=password,dereferenceType=PRIMITIVE,getPropertyPath=password,path={synthetic-alias}.password,tableAlias=users0_,className=com.example.struts2.model.Users,classAlias=null}
             |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             |  \-[IDENT] IdentNode: 'password' {originalText=password}
             \-[NAMED_PARAM] ParameterNode: '?' {name=password, expectedType=org.hibernate.type.StringType@77ab22be}

2017-04-24 12:51:43,233 DEBUG [qtp2096194236-17] ast.ErrorCounter (ErrorCounter.java:95) - throwQueryException() : no errors
2017-04-24 12:51:43,257 DEBUG [qtp2096194236-17] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:251) - HQL: from com.example.struts2.model.Users where username = :username and password = :password
2017-04-24 12:51:43,259 DEBUG [qtp2096194236-17] ast.QueryTranslatorImpl (QueryTranslatorImpl.java:252) - SQL: select users0_.id as id1_0_, users0_.password as password2_0_, users0_.username as username3_0_ from users users0_ where users0_.username=? and users0_.password=?
2017-04-24 12:51:43,261 DEBUG [qtp2096194236-17] ast.ErrorCounter (ErrorCounter.java:95) - throwQueryException() : no errors
2017-04-24 12:51:43,327 DEBUG [qtp2096194236-17] spi.SqlStatementLogger (SqlStatementLogger.java:92) - select users0_.id as id1_0_, users0_.password as password2_0_, users0_.username as username3_0_ from users users0_ where users0_.username=? and users0_.password=?
2017-04-24 12:51:47,479 INFO  [qtp2096194236-18] action.Login (Login.java:25) - VALIDATE admin admin
2017-04-24 12:51:47,482 DEBUG [qtp2096194236-18] internal.TransactionImpl (TransactionImpl.java:55) - begin
2017-04-24 12:51:47,497 DEBUG [qtp2096194236-18] spi.SqlStatementLogger (SqlStatementLogger.java:92) - select users0_.id as id1_0_, users0_.password as password2_0_, users0_.username as username3_0_ from users users0_ where users0_.username=? and users0_.password=?
2017-04-24 12:51:47,503 DEBUG [qtp2096194236-18] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:384) - Result set row: 0
2017-04-24 12:51:47,535 DEBUG [qtp2096194236-18] loader.Loader (Loader.java:1527) - Result row: EntityKey[com.example.struts2.model.Users#1]
2017-04-24 12:51:47,562 DEBUG [qtp2096194236-18] internal.TwoPhaseLoad (TwoPhaseLoad.java:141) - Resolving associations for [com.example.struts2.model.Users#1]
2017-04-24 12:51:47,571 DEBUG [qtp2096194236-18] internal.TwoPhaseLoad (TwoPhaseLoad.java:281) - Done materializing entity [com.example.struts2.model.Users#1]
2017-04-24 12:51:47,575 DEBUG [qtp2096194236-18] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:132) - Processing flush-time cascades
2017-04-24 12:51:47,592 DEBUG [qtp2096194236-18] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:174) - Dirty checking collections
2017-04-24 12:51:47,599 DEBUG [qtp2096194236-18] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:106) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2017-04-24 12:51:47,601 DEBUG [qtp2096194236-18] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:113) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2017-04-24 12:51:47,611 DEBUG [qtp2096194236-18] util.EntityPrinter (EntityPrinter.java:102) - Listing entities:
2017-04-24 12:51:47,615 DEBUG [qtp2096194236-18] util.EntityPrinter (EntityPrinter.java:109) - com.example.struts2.model.Users{password=admin, id=1, username=admin}
