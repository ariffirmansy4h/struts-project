2017-04-19 15:41:10,505 INFO  [qtp648972298-20] action.Login (Login.java:17) - VALIDATE admin admin
2017-04-19 15:44:56,035 INFO  [Scanner-0] config.ConfigurationManager (ConfigurationManager.java:213) - Detected container provider [Struts XML configuration provider (struts.xml)] needs to be reloaded. Reloading all providers.
2017-04-19 15:45:16,208 INFO  [Scanner-0] config.ConfigurationManager (ConfigurationManager.java:213) - Detected container provider [Struts XML configuration provider (struts.xml)] needs to be reloaded. Reloading all providers.
2017-04-19 15:47:36,820 INFO  [Scanner-0] config.ConfigurationManager (ConfigurationManager.java:213) - Detected container provider [Struts XML configuration provider (struts.xml)] needs to be reloaded. Reloading all providers.
2017-04-19 15:48:07,119 INFO  [Scanner-0] config.ConfigurationManager (ConfigurationManager.java:213) - Detected container provider [Struts XML configuration provider (struts.xml)] needs to be reloaded. Reloading all providers.
2017-04-19 15:48:15,371 ERROR [Scanner-0] dispatcher.Dispatcher (Dispatcher.java:498) - Dispatcher initialization failed
com.opensymphony.xwork2.config.ConfigurationException: Unable to load configuration.
	at com.opensymphony.xwork2.config.ConfigurationManager.getConfiguration(ConfigurationManager.java:70) ~[struts2-core-2.5.8.jar:2.5.8]
	at org.apache.struts2.dispatcher.Dispatcher.getContainer(Dispatcher.java:906) ~[struts2-core-2.5.8.jar:2.5.8]
	at org.apache.struts2.dispatcher.Dispatcher.init_PreloadConfiguration(Dispatcher.java:445) ~[struts2-core-2.5.8.jar:2.5.8]
	at org.apache.struts2.dispatcher.Dispatcher.init(Dispatcher.java:486) [struts2-core-2.5.8.jar:2.5.8]
	at org.apache.struts2.dispatcher.InitOperations.initDispatcher(InitOperations.java:75) [struts2-core-2.5.8.jar:2.5.8]
	at org.apache.struts2.dispatcher.filter.StrutsPrepareAndExecuteFilter.init(StrutsPrepareAndExecuteFilter.java:63) [struts2-core-2.5.8.jar:2.5.8]
	at org.eclipse.jetty.servlet.FilterHolder.doStart(FilterHolder.java:118) [jetty-servlet-8.1.16.v20140903.jar:8.1.16.v20140903]
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64) [jetty-util-8.1.16.v20140903.jar:8.1.16.v20140903]
	at org.eclipse.jetty.servlet.ServletHandler.initialize(ServletHandler.java:768) [jetty-servlet-8.1.16.v20140903.jar:8.1.16.v20140903]
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:265) [jetty-servlet-8.1.16.v20140903.jar:8.1.16.v20140903]
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1242) [jetty-webapp-8.1.16.v20140903.jar:8.1.16.v20140903]
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:717) [jetty-server-8.1.16.v20140903.jar:8.1.16.v20140903]
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:494) [jetty-webapp-8.1.16.v20140903.jar:8.1.16.v20140903]
	at org.mortbay.jetty.plugin.JettyWebAppContext.doStart(JettyWebAppContext.java:298) [jetty-maven-plugin-8.1.16.v20140903.jar:8.1.16.v20140903]
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:64) [jetty-util-8.1.16.v20140903.jar:8.1.16.v20140903]
	at org.mortbay.jetty.plugin.JettyRunMojo.restartWebApp(JettyRunMojo.java:435) [jetty-maven-plugin-8.1.16.v20140903.jar:8.1.16.v20140903]
	at org.mortbay.jetty.plugin.JettyRunMojo$1.filesChanged(JettyRunMojo.java:394) [jetty-maven-plugin-8.1.16.v20140903.jar:8.1.16.v20140903]
	at org.eclipse.jetty.util.Scanner.reportBulkChanges(Scanner.java:691) [jetty-util-8.1.16.v20140903.jar:8.1.16.v20140903]
	at org.eclipse.jetty.util.Scanner.reportDifferences(Scanner.java:551) [jetty-util-8.1.16.v20140903.jar:8.1.16.v20140903]
	at org.eclipse.jetty.util.Scanner.scan(Scanner.java:403) [jetty-util-8.1.16.v20140903.jar:8.1.16.v20140903]
	at org.eclipse.jetty.util.Scanner$1.run(Scanner.java:353) [jetty-util-8.1.16.v20140903.jar:8.1.16.v20140903]
	at java.util.TimerThread.mainLoop(Timer.java:555) [?:1.8.0_111]
	at java.util.TimerThread.run(Timer.java:505) [?:1.8.0_111]
Caused by: com.opensymphony.xwork2.config.ConfigurationException: Action class [com.example.struts2.action.Login] not found
	at com.opensymphony.xwork2.config.providers.XmlConfigurationProvider.verifyAction(XmlConfigurationProvider.java:505) ~[struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.config.providers.XmlConfigurationProvider.addAction(XmlConfigurationProvider.java:454) ~[struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.config.providers.XmlConfigurationProvider.addPackage(XmlConfigurationProvider.java:569) ~[struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.config.providers.XmlConfigurationProvider.loadPackages(XmlConfigurationProvider.java:323) ~[struts2-core-2.5.8.jar:2.5.8]
	at org.apache.struts2.config.StrutsXmlConfigurationProvider.loadPackages(StrutsXmlConfigurationProvider.java:108) ~[struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.config.impl.DefaultConfiguration.reloadContainer(DefaultConfiguration.java:189) ~[struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.config.ConfigurationManager.getConfiguration(ConfigurationManager.java:67) ~[struts2-core-2.5.8.jar:2.5.8]
	... 22 more
2017-04-19 15:57:12,525 INFO  [Scanner-0] config.ConfigurationManager (ConfigurationManager.java:213) - Detected container provider [Struts XML configuration provider (struts.xml)] needs to be reloaded. Reloading all providers.
2017-04-19 18:17:03,528 DEBUG [main] internal.CoreLogging (CoreLogging.java:28) - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2017-04-19 18:17:03,584 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2017-04-19 18:17:03,591 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2017-04-19 18:17:03,603 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2017-04-19 18:17:04,230 INFO  [main] hibernate.Version (Version.java:45) - HHH000412: Hibernate Core {5.2.9.Final}
2017-04-19 18:17:04,239 INFO  [main] cfg.Environment (Environment.java:213) - HHH000206: hibernate.properties not found
2017-04-19 18:17:04,319 DEBUG [main] internal.JaxbCfgProcessor (JaxbCfgProcessor.java:116) - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2017-04-19 18:23:36,021 DEBUG [main] internal.CoreLogging (CoreLogging.java:28) - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2017-04-19 18:23:36,086 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2017-04-19 18:23:36,103 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2017-04-19 18:23:36,119 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2017-04-19 18:23:36,904 INFO  [main] hibernate.Version (Version.java:45) - HHH000412: Hibernate Core {5.2.9.Final}
2017-04-19 18:23:36,910 INFO  [main] cfg.Environment (Environment.java:213) - HHH000206: hibernate.properties not found
2017-04-19 18:23:37,033 DEBUG [main] internal.JaxbCfgProcessor (JaxbCfgProcessor.java:116) - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2017-04-19 18:30:01,530 DEBUG [main] internal.CoreLogging (CoreLogging.java:28) - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2017-04-19 18:30:01,711 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2017-04-19 18:30:01,718 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2017-04-19 18:30:01,736 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2017-04-19 18:30:02,254 INFO  [main] hibernate.Version (Version.java:45) - HHH000412: Hibernate Core {5.2.9.Final}
2017-04-19 18:30:02,267 INFO  [main] cfg.Environment (Environment.java:213) - HHH000206: hibernate.properties not found
2017-04-19 18:30:02,358 DEBUG [main] internal.JaxbCfgProcessor (JaxbCfgProcessor.java:116) - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2017-04-19 18:36:15,174 DEBUG [Scanner-0] internal.CoreLogging (CoreLogging.java:28) - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2017-04-19 18:36:15,238 DEBUG [Scanner-0] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2017-04-19 18:36:15,252 DEBUG [Scanner-0] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2017-04-19 18:36:15,268 DEBUG [Scanner-0] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2017-04-19 18:36:15,542 INFO  [Scanner-0] hibernate.Version (Version.java:45) - HHH000412: Hibernate Core {5.2.9.Final}
2017-04-19 18:36:15,552 INFO  [Scanner-0] cfg.Environment (Environment.java:213) - HHH000206: hibernate.properties not found
2017-04-19 18:36:15,619 DEBUG [Scanner-0] internal.JaxbCfgProcessor (JaxbCfgProcessor.java:116) - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2017-04-19 18:51:50,263 DEBUG [main] internal.CoreLogging (CoreLogging.java:28) - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2017-04-19 18:51:50,331 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2017-04-19 18:51:50,339 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2017-04-19 18:51:50,357 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2017-04-19 18:51:51,449 INFO  [main] hibernate.Version (Version.java:45) - HHH000412: Hibernate Core {5.2.9.Final}
2017-04-19 18:51:51,455 INFO  [main] cfg.Environment (Environment.java:213) - HHH000206: hibernate.properties not found
2017-04-19 18:51:51,602 DEBUG [main] internal.JaxbCfgProcessor (JaxbCfgProcessor.java:116) - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2017-04-19 18:54:48,958 DEBUG [main] internal.CoreLogging (CoreLogging.java:28) - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2017-04-19 18:54:49,099 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2017-04-19 18:54:49,118 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2017-04-19 18:54:49,198 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2017-04-19 18:54:50,151 INFO  [main] hibernate.Version (Version.java:45) - HHH000412: Hibernate Core {5.2.9.Final}
2017-04-19 18:54:50,159 INFO  [main] cfg.Environment (Environment.java:213) - HHH000206: hibernate.properties not found
2017-04-19 18:54:50,359 DEBUG [main] internal.JaxbCfgProcessor (JaxbCfgProcessor.java:116) - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2017-04-19 19:02:08,196 DEBUG [main] internal.CoreLogging (CoreLogging.java:28) - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2017-04-19 19:02:08,265 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2017-04-19 19:02:08,271 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2017-04-19 19:02:08,287 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2017-04-19 19:02:08,887 INFO  [main] hibernate.Version (Version.java:45) - HHH000412: Hibernate Core {5.2.9.Final}
2017-04-19 19:02:08,896 INFO  [main] cfg.Environment (Environment.java:213) - HHH000206: hibernate.properties not found
2017-04-19 19:02:08,973 DEBUG [main] internal.JaxbCfgProcessor (JaxbCfgProcessor.java:116) - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2017-04-19 19:06:40,756 DEBUG [main] internal.CoreLogging (CoreLogging.java:28) - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2017-04-19 19:06:40,998 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2017-04-19 19:06:41,007 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2017-04-19 19:06:41,065 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2017-04-19 19:06:41,669 INFO  [main] hibernate.Version (Version.java:45) - HHH000412: Hibernate Core {5.2.9.Final}
2017-04-19 19:06:41,680 INFO  [main] cfg.Environment (Environment.java:213) - HHH000206: hibernate.properties not found
2017-04-19 19:06:41,880 DEBUG [main] internal.JaxbCfgProcessor (JaxbCfgProcessor.java:116) - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2017-04-19 19:07:22,496 INFO  [qtp557342904-19] action.Login (Login.java:23) - VALIDATE admin admin
2017-04-19 19:18:16,576 DEBUG [main] internal.CoreLogging (CoreLogging.java:28) - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2017-04-19 19:18:16,623 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2017-04-19 19:18:16,628 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2017-04-19 19:18:16,637 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2017-04-19 19:18:16,893 INFO  [main] hibernate.Version (Version.java:45) - HHH000412: Hibernate Core {5.2.9.Final}
2017-04-19 19:18:16,899 INFO  [main] cfg.Environment (Environment.java:213) - HHH000206: hibernate.properties not found
2017-04-19 19:18:16,977 DEBUG [main] internal.JaxbCfgProcessor (JaxbCfgProcessor.java:116) - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2017-04-19 19:19:54,546 INFO  [qtp1185502159-17] action.Login (Login.java:23) - VALIDATE admin admin
2017-04-19 19:25:48,462 DEBUG [main] internal.CoreLogging (CoreLogging.java:28) - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2017-04-19 19:25:48,530 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2017-04-19 19:25:48,535 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2017-04-19 19:25:48,544 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2017-04-19 19:25:49,120 INFO  [main] hibernate.Version (Version.java:45) - HHH000412: Hibernate Core {5.2.9.Final}
2017-04-19 19:25:49,127 INFO  [main] cfg.Environment (Environment.java:213) - HHH000206: hibernate.properties not found
2017-04-19 19:25:49,214 DEBUG [main] internal.JaxbCfgProcessor (JaxbCfgProcessor.java:116) - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2017-04-19 19:25:51,158 DEBUG [main] cfg.Configuration (Configuration.java:724) - Building session factory using internal StandardServiceRegistryBuilder
2017-04-19 19:25:51,176 DEBUG [main] spi.ServiceBinding (ServiceBinding.java:68) - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2017-04-19 19:25:51,177 DEBUG [main] cfg.Configuration (Configuration.java:652) - Building session factory using provided StandardServiceRegistry
2017-04-19 19:25:51,233 DEBUG [main] internal.RegionFactoryInitiator (RegionFactoryInitiator.java:75) - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2017-04-19 19:25:51,264 INFO  [main] java.JavaReflectionManager (JavaReflectionManager.java:66) - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2017-04-19 19:25:51,334 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@11eed657
2017-04-19 19:25:51,336 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@11eed657
2017-04-19 19:25:51,343 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@11eed657
2017-04-19 19:25:51,362 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@65eb76cd
2017-04-19 19:25:51,370 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6c1cfa53
2017-04-19 19:25:51,379 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration yes_no -> org.hibernate.type.YesNoType@61bcbcce
2017-04-19 19:25:51,401 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@33f2df51
2017-04-19 19:25:51,410 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@33f2df51
2017-04-19 19:25:51,414 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@33f2df51
2017-04-19 19:25:51,431 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration character -> org.hibernate.type.CharacterType@404eca05
2017-04-19 19:25:51,436 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration char -> org.hibernate.type.CharacterType@404eca05
2017-04-19 19:25:51,438 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@404eca05
2017-04-19 19:25:51,456 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@462e1e64
2017-04-19 19:25:51,461 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@462e1e64
2017-04-19 19:25:51,463 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@462e1e64
2017-04-19 19:25:51,475 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration integer -> org.hibernate.type.IntegerType@4667c4c1
2017-04-19 19:25:51,479 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration int -> org.hibernate.type.IntegerType@4667c4c1
2017-04-19 19:25:51,482 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4667c4c1
2017-04-19 19:25:51,490 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@2f0ed952
2017-04-19 19:25:51,493 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@2f0ed952
2017-04-19 19:25:51,496 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2f0ed952
2017-04-19 19:25:51,502 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@5a8816cc
2017-04-19 19:25:51,506 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@5a8816cc
2017-04-19 19:25:51,509 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5a8816cc
2017-04-19 19:25:51,518 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@e11ecfa
2017-04-19 19:25:51,522 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@e11ecfa
2017-04-19 19:25:51,525 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@e11ecfa
2017-04-19 19:25:51,540 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@38f77cd9
2017-04-19 19:25:51,550 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@38f77cd9
2017-04-19 19:25:51,555 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5984feef
2017-04-19 19:25:51,565 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5984feef
2017-04-19 19:25:51,579 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration string -> org.hibernate.type.StringType@204abeff
2017-04-19 19:25:51,584 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.String -> org.hibernate.type.StringType@204abeff
2017-04-19 19:25:51,596 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1391af3b
2017-04-19 19:25:51,600 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3a8d467e
2017-04-19 19:25:51,603 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration url -> org.hibernate.type.UrlType@135a8c6f
2017-04-19 19:25:51,612 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@135a8c6f
2017-04-19 19:25:51,647 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Duration -> org.hibernate.type.DurationType@2ae62bb6
2017-04-19 19:25:51,648 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@2ae62bb6
2017-04-19 19:25:51,772 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Instant -> org.hibernate.type.InstantType@28ee7bee
2017-04-19 19:25:51,777 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@28ee7bee
2017-04-19 19:25:51,782 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4462efe1
2017-04-19 19:25:51,783 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4462efe1
2017-04-19 19:25:51,790 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6fc1020a
2017-04-19 19:25:51,794 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6fc1020a
2017-04-19 19:25:51,799 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7dffda8b
2017-04-19 19:25:51,801 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7dffda8b
2017-04-19 19:25:51,813 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6ca8fcf3
2017-04-19 19:25:51,814 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6ca8fcf3
2017-04-19 19:25:51,818 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@6801b414
2017-04-19 19:25:51,819 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@6801b414
2017-04-19 19:25:51,838 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@436bd4df
2017-04-19 19:25:51,840 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@436bd4df
2017-04-19 19:25:51,848 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration date -> org.hibernate.type.DateType@7be1ce6a
2017-04-19 19:25:51,849 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7be1ce6a
2017-04-19 19:25:51,854 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration time -> org.hibernate.type.TimeType@17ba57f0
2017-04-19 19:25:51,855 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@17ba57f0
2017-04-19 19:25:51,859 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration timestamp -> org.hibernate.type.TimestampType@7d70638
2017-04-19 19:25:51,860 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7d70638
2017-04-19 19:25:51,861 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7d70638
2017-04-19 19:25:51,867 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@30c4e352
2017-04-19 19:25:51,871 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration calendar -> org.hibernate.type.CalendarType@290e8cab
2017-04-19 19:25:51,872 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@290e8cab
2017-04-19 19:25:51,872 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@290e8cab
2017-04-19 19:25:51,875 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@341b13a8
2017-04-19 19:25:51,878 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration locale -> org.hibernate.type.LocaleType@37854b34
2017-04-19 19:25:51,879 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@37854b34
2017-04-19 19:25:51,882 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration currency -> org.hibernate.type.CurrencyType@7ff19c33
2017-04-19 19:25:51,883 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7ff19c33
2017-04-19 19:25:51,886 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@7a4d582c
2017-04-19 19:25:51,887 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7a4d582c
2017-04-19 19:25:51,889 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration class -> org.hibernate.type.ClassType@4d1ff6b1
2017-04-19 19:25:51,891 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4d1ff6b1
2017-04-19 19:25:51,898 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4fdca00a
2017-04-19 19:25:51,899 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4fdca00a
2017-04-19 19:25:51,901 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3bed3315
2017-04-19 19:25:51,905 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration binary -> org.hibernate.type.BinaryType@55651434
2017-04-19 19:25:51,906 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte[] -> org.hibernate.type.BinaryType@55651434
2017-04-19 19:25:51,906 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [B -> org.hibernate.type.BinaryType@55651434
2017-04-19 19:25:51,910 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@37ad042b
2017-04-19 19:25:51,911 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@37ad042b
2017-04-19 19:25:51,911 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@37ad042b
2017-04-19 19:25:51,915 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration row_version -> org.hibernate.type.RowVersionType@470d183
2017-04-19 19:25:51,917 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration image -> org.hibernate.type.ImageType@3ddeaa5f
2017-04-19 19:25:51,921 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration characters -> org.hibernate.type.CharArrayType@3bec5821
2017-04-19 19:25:51,922 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration char[] -> org.hibernate.type.CharArrayType@3bec5821
2017-04-19 19:25:51,922 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [C -> org.hibernate.type.CharArrayType@3bec5821
2017-04-19 19:25:51,925 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@176555c
2017-04-19 19:25:51,926 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@176555c
2017-04-19 19:25:51,927 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@176555c
2017-04-19 19:25:51,929 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration text -> org.hibernate.type.TextType@97a145b
2017-04-19 19:25:51,933 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ntext -> org.hibernate.type.NTextType@526a9908
2017-04-19 19:25:51,943 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration blob -> org.hibernate.type.BlobType@766a49c7
2017-04-19 19:25:51,944 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@766a49c7
2017-04-19 19:25:51,945 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6bccd036
2017-04-19 19:25:51,959 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration clob -> org.hibernate.type.ClobType@1b2df3aa
2017-04-19 19:25:51,959 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1b2df3aa
2017-04-19 19:25:51,968 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration nclob -> org.hibernate.type.NClobType@443faa85
2017-04-19 19:25:51,969 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@443faa85
2017-04-19 19:25:51,970 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5dc0ff7d
2017-04-19 19:25:51,972 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@493ac8d3
2017-04-19 19:25:51,976 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration serializable -> org.hibernate.type.SerializableType@3003e580
2017-04-19 19:25:51,983 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration object -> org.hibernate.type.ObjectType@1d6d1d42
2017-04-19 19:25:51,984 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1d6d1d42
2017-04-19 19:25:51,986 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2f894ad9
2017-04-19 19:25:51,987 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5afbd567
2017-04-19 19:25:51,987 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6993c8df
2017-04-19 19:25:51,988 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@57545c3f
2017-04-19 19:25:51,988 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@326e0b8e
2017-04-19 19:25:51,989 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@36baa049
2017-04-19 19:25:51,990 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@41184371
2017-04-19 19:25:51,990 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@34585ac9
2017-04-19 19:25:52,018 WARN  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:70) - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2017-04-19 19:25:52,088 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:126) - HHH10001005: using driver [com.microsoft.sqlserver.jdbc.SQLServerDriver] at URL [jdbc:sqlserver://localhost:1433;database=strutsproject]
2017-04-19 19:25:52,091 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:132) - HHH10001001: Connection properties: {user=SA, password=SQLServ3r}
2017-04-19 19:25:52,093 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:140) - HHH10001003: Autocommit mode: false
2017-04-19 19:25:52,114 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:384) - Initializing Connection pool with 1 Connections
2017-04-19 19:25:52,116 INFO  [main] internal.PooledConnections (PooledConnections.java:41) - HHH000115: Hibernate connection pool size: 1 (min=1)
2017-04-19 19:25:52,824 DEBUG [main] internal.JdbcEnvironmentInitiator (JdbcEnvironmentInitiator.java:72) - Database ->
       name : Microsoft SQL Server
    version : 14.00.405
      major : 14
      minor : 0
2017-04-19 19:25:52,825 DEBUG [main] internal.JdbcEnvironmentInitiator (JdbcEnvironmentInitiator.java:83) - Driver ->
       name : Microsoft JDBC Driver 4.0 for SQL Server
    version : 4.0.2206.100
      major : 4
      minor : 0
2017-04-19 19:25:52,826 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:389) - JDBC version : 4.0
2017-04-19 19:25:52,907 INFO  [main] dialect.Dialect (Dialect.java:157) - HHH000400: Using dialect: org.hibernate.dialect.SQLServer2008Dialect
2017-04-19 19:25:57,058 DEBUG [main] spi.IdentifierHelperBuilder (IdentifierHelperBuilder.java:191) - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2017-04-19 19:25:57,793 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2017-04-19 19:25:57,798 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2017-04-19 19:25:57,802 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2017-04-19 19:25:57,804 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2017-04-19 19:25:57,810 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2017-04-19 19:25:57,815 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2017-04-19 19:25:57,819 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2017-04-19 19:25:57,824 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2017-04-19 19:25:57,830 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2017-04-19 19:25:57,835 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2017-04-19 19:25:57,839 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2017-04-19 19:25:57,843 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2017-04-19 19:25:57,846 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2017-04-19 19:25:57,851 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2017-04-19 19:25:57,923 DEBUG [main] relational.Namespace (Namespace.java:47) - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2017-04-19 19:25:57,995 DEBUG [main] cfg.AnnotationBinder (AnnotationBinder.java:511) - Binding entity from annotated class: com.example.struts2.model.Users
2017-04-19 19:25:58,072 DEBUG [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2017-04-19 19:25:58,091 DEBUG [main] annotations.EntityBinder (EntityBinder.java:419) - Import with entity name users
2017-04-19 19:25:58,118 DEBUG [main] annotations.EntityBinder (EntityBinder.java:695) - Bind entity com.example.struts2.model.Users on table users
2017-04-19 19:25:58,205 DEBUG [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
2017-04-19 19:25:58,218 DEBUG [main] annotations.PropertyBinder (PropertyBinder.java:174) - MetadataSourceProcessor property id with lazy=false
2017-04-19 19:25:58,227 DEBUG [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.example.struts2.model.Users:id]
2017-04-19 19:25:58,236 DEBUG [main] annotations.SimpleValueBinder (SimpleValueBinder.java:411) - building SimpleValue for id
2017-04-19 19:25:58,246 DEBUG [main] annotations.PropertyBinder (PropertyBinder.java:265) - Building property id
2017-04-19 19:25:58,258 DEBUG [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2017-04-19 19:25:58,262 DEBUG [main] annotations.PropertyBinder (PropertyBinder.java:174) - MetadataSourceProcessor property password with lazy=false
2017-04-19 19:25:58,265 DEBUG [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.example.struts2.model.Users:password]
2017-04-19 19:25:58,268 DEBUG [main] annotations.SimpleValueBinder (SimpleValueBinder.java:411) - building SimpleValue for password
2017-04-19 19:25:58,272 DEBUG [main] annotations.PropertyBinder (PropertyBinder.java:265) - Building property password
2017-04-19 19:25:58,280 DEBUG [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=false}
2017-04-19 19:25:58,282 DEBUG [main] annotations.PropertyBinder (PropertyBinder.java:174) - MetadataSourceProcessor property username with lazy=false
2017-04-19 19:25:58,284 DEBUG [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.example.struts2.model.Users:username]
2017-04-19 19:25:58,285 DEBUG [main] annotations.SimpleValueBinder (SimpleValueBinder.java:411) - building SimpleValue for username
2017-04-19 19:25:58,291 DEBUG [main] annotations.PropertyBinder (PropertyBinder.java:265) - Building property username
2017-04-19 19:25:58,298 DEBUG [main] annotations.SimpleValueBinder (SimpleValueBinder.java:456) - Starting fillSimpleValue for id
2017-04-19 19:25:58,302 DEBUG [main] annotations.SimpleValueBinder (SimpleValueBinder.java:456) - Starting fillSimpleValue for password
2017-04-19 19:25:58,305 DEBUG [main] annotations.SimpleValueBinder (SimpleValueBinder.java:456) - Starting fillSimpleValue for username
2017-04-19 19:25:58,313 DEBUG [main] mapping.PrimaryKey (PrimaryKey.java:35) - Forcing column [id] to be non-null as it is part of the primary key for table [users]
2017-04-19 19:25:58,410 DEBUG [main] internal.SessionFactoryImpl (SessionFactoryImpl.java:199) - Building session factory
2017-04-19 19:25:58,417 DEBUG [main] cfg.Settings (Settings.java:69) - SessionFactory name : null
2017-04-19 19:25:58,421 DEBUG [main] cfg.Settings (Settings.java:70) - Automatic flush during beforeCompletion(): enabled
2017-04-19 19:25:58,424 DEBUG [main] cfg.Settings (Settings.java:71) - Automatic session close at end of transaction: disabled
2017-04-19 19:25:58,427 DEBUG [main] cfg.Settings (Settings.java:73) - Statistics: disabled
2017-04-19 19:25:58,431 DEBUG [main] cfg.Settings (Settings.java:75) - Deleted entity synthetic identifier rollback: disabled
2017-04-19 19:25:58,432 DEBUG [main] cfg.Settings (Settings.java:76) - Default entity-mode: pojo
2017-04-19 19:25:58,432 DEBUG [main] cfg.Settings (Settings.java:77) - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2017-04-19 19:25:58,433 DEBUG [main] cfg.Settings (Settings.java:78) - Allow initialization of lazy state outside session : disabled
2017-04-19 19:25:58,437 DEBUG [main] cfg.Settings (Settings.java:80) - Using BatchFetchStyle : LEGACY
2017-04-19 19:25:58,438 DEBUG [main] cfg.Settings (Settings.java:81) - Default batch fetch size: -1
2017-04-19 19:25:58,439 DEBUG [main] cfg.Settings (Settings.java:82) - Maximum outer join fetch depth: null
2017-04-19 19:25:58,444 DEBUG [main] cfg.Settings (Settings.java:83) - Default null ordering: NONE
2017-04-19 19:25:58,444 DEBUG [main] cfg.Settings (Settings.java:84) - Order SQL updates by primary key: disabled
2017-04-19 19:25:58,445 DEBUG [main] cfg.Settings (Settings.java:85) - Order SQL inserts for batching: disabled
2017-04-19 19:25:58,445 DEBUG [main] cfg.Settings (Settings.java:87) - multi-tenancy strategy : NONE
2017-04-19 19:25:58,449 DEBUG [main] cfg.Settings (Settings.java:89) - JTA Track by Thread: enabled
2017-04-19 19:25:58,451 DEBUG [main] cfg.Settings (Settings.java:91) - Query language substitutions: {}
2017-04-19 19:25:58,455 DEBUG [main] cfg.Settings (Settings.java:92) - JPA query language strict compliance: disabled
2017-04-19 19:25:58,458 DEBUG [main] cfg.Settings (Settings.java:93) - Named query checking : enabled
2017-04-19 19:25:58,460 DEBUG [main] cfg.Settings (Settings.java:95) - Second-level cache: enabled
2017-04-19 19:25:58,463 DEBUG [main] cfg.Settings (Settings.java:96) - Second-level query cache: disabled
2017-04-19 19:25:58,464 DEBUG [main] cfg.Settings (Settings.java:97) - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@6fe595dc
2017-04-19 19:25:58,467 DEBUG [main] cfg.Settings (Settings.java:98) - Second-level cache region prefix: null
2017-04-19 19:25:58,468 DEBUG [main] cfg.Settings (Settings.java:99) - Optimize second-level cache for minimal puts: disabled
2017-04-19 19:25:58,468 DEBUG [main] cfg.Settings (Settings.java:100) - Structured second-level cache entries: disabled
2017-04-19 19:25:58,469 DEBUG [main] cfg.Settings (Settings.java:101) - Second-level cache direct-reference entries: disabled
2017-04-19 19:25:58,469 DEBUG [main] cfg.Settings (Settings.java:102) - Automatic eviction of collection cache: disabled
2017-04-19 19:25:58,470 DEBUG [main] cfg.Settings (Settings.java:104) - JDBC batch size: 0
2017-04-19 19:25:58,470 DEBUG [main] cfg.Settings (Settings.java:105) - JDBC batch updates for versioned data: enabled
2017-04-19 19:25:58,471 DEBUG [main] cfg.Settings (Settings.java:106) - Scrollable result sets: enabled
2017-04-19 19:25:58,471 DEBUG [main] cfg.Settings (Settings.java:107) - Wrap result sets: disabled
2017-04-19 19:25:58,472 DEBUG [main] cfg.Settings (Settings.java:108) - JDBC3 getGeneratedKeys(): enabled
2017-04-19 19:25:58,472 DEBUG [main] cfg.Settings (Settings.java:109) - JDBC result set fetch size: null
2017-04-19 19:25:58,473 DEBUG [main] cfg.Settings (Settings.java:110) - Connection release mode: AFTER_TRANSACTION
2017-04-19 19:25:58,476 DEBUG [main] cfg.Settings (Settings.java:111) - Generate SQL with comments: disabled
2017-04-19 19:25:58,659 DEBUG [main] internal.SessionFactoryImpl (SessionFactoryImpl.java:254) - Session factory constructed with filter configurations : {}
2017-04-19 19:25:58,661 DEBUG [main] internal.SessionFactoryImpl (SessionFactoryImpl.java:255) - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.SQLServer2008Dialect, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, java.vendor.url=http://java.oracle.com/, user.timezone=Asia/Jakarta, os.name=Linux, java.vm.specification.version=1.8, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, maven.home=/usr/share/maven, sun.cpu.endian=little, user.home=/root, user.language=en, java.specification.vendor=Oracle Corporation, java.home=/usr/lib/jvm/java-8-openjdk-amd64/jre, file.separator=/, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, sun.boot.class.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/classes, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_111-8u111-b14-3-b14, user.name=root, path.separator=:, securerandom.source=file:/dev/./urandom, hibernate.connection.username=SA, os.version=4.8.0-kali2-amd64, java.endorsed.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/endorsed, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:sqlserver://localhost:1433;database=strutsproject, file.encoding=UTF-8, guice.disable.misplaced.annotation.check=true, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.microsoft.sqlserver.jdbc.SQLServerDriver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=/tmp, java.version=1.8.0_111, user.dir=/root/Source/java/struts/struts-project, os.arch=amd64, maven.multiModuleProjectDirectory=/root/Source/java/struts/struts-project, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@69f2cb04, java.library.path=/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.111-b14, classworlds.conf=/usr/share/maven/bin/m2.conf, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.pool_size=1, java.ext.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
2017-04-19 19:25:58,706 DEBUG [main] spi.JaccIntegrator (JaccIntegrator.java:80) - Skipping JACC integration as it was not enabled
2017-04-19 19:25:58,777 DEBUG [main] internal.SessionFactoryImpl (SessionFactoryImpl.java:294) - Instantiated session factory
2017-04-19 19:25:58,914 DEBUG [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [com.example.struts2.model.Users] is safe
2017-04-19 19:25:58,920 DEBUG [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.struts2.model.Users
2017-04-19 19:25:58,988 DEBUG [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [com.example.struts2.model.Users] is safe
2017-04-19 19:25:58,991 DEBUG [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.struts2.model.Users
2017-04-19 19:25:59,231 DEBUG [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3598) - Static SQL for entity: com.example.struts2.model.Users
2017-04-19 19:25:59,234 DEBUG [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3603) -  Version select: select id from users where id =?
2017-04-19 19:25:59,237 DEBUG [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3606) -  Snapshot select: select users_.id, users_.password as password2_0_, users_.username as username3_0_ from users users_ where users_.id=?
2017-04-19 19:25:59,241 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Insert 0: insert into users (password, username, id) values (?, ?, ?)
2017-04-19 19:25:59,244 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Update 0: update users set password=?, username=? where id=?
2017-04-19 19:25:59,245 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Delete 0: delete from users where id=?
2017-04-19 19:25:59,302 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@195113de]
2017-04-19 19:25:59,308 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-19 19:25:59,312 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-19 19:25:59,316 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-19 19:25:59,350 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-19 19:25:59,367 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-19 19:25:59,377 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [NONE]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-19 19:25:59,381 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@790d8fdd]
2017-04-19 19:25:59,384 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-19 19:25:59,386 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-19 19:25:59,391 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-19 19:25:59,394 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-19 19:25:59,402 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-19 19:25:59,403 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [READ]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-19 19:25:59,404 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3dbd7107]
2017-04-19 19:25:59,408 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-19 19:25:59,412 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-19 19:25:59,413 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-19 19:25:59,414 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-19 19:25:59,416 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-19 19:25:59,416 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [UPGRADE]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ with (updlock, rowlock) where users0_.id=?
2017-04-19 19:25:59,419 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f8a02cf]
2017-04-19 19:25:59,423 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-19 19:25:59,426 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-19 19:25:59,430 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-19 19:25:59,433 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-19 19:25:59,438 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-19 19:25:59,439 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [UPGRADE_NOWAIT]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ with (updlock, rowlock, nowait) where users0_.id=?
2017-04-19 19:25:59,440 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70b6db83]
2017-04-19 19:25:59,441 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-19 19:25:59,442 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-19 19:25:59,449 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-19 19:25:59,460 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-19 19:25:59,468 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-19 19:25:59,473 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [UPGRADE_SKIPLOCKED]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ with (updlock, rowlock, readpast) where users0_.id=?
2017-04-19 19:25:59,477 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@559af296]
2017-04-19 19:25:59,478 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-19 19:25:59,479 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-19 19:25:59,479 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-19 19:25:59,480 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-19 19:25:59,484 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-19 19:25:59,487 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [FORCE]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-19 19:25:59,491 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18709cb2]
2017-04-19 19:25:59,494 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-19 19:25:59,497 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-19 19:25:59,499 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-19 19:25:59,500 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-19 19:25:59,505 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-19 19:25:59,509 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [PESSIMISTIC_READ]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ with (holdlock, rowlock) where users0_.id=?
2017-04-19 19:25:59,516 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@89caf47]
2017-04-19 19:25:59,518 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-19 19:25:59,519 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-19 19:25:59,519 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-19 19:25:59,520 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-19 19:25:59,522 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-19 19:25:59,523 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [PESSIMISTIC_WRITE]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ with (updlock, rowlock) where users0_.id=?
2017-04-19 19:25:59,524 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b877a54]
2017-04-19 19:25:59,525 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-19 19:25:59,525 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-19 19:25:59,526 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-19 19:25:59,527 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-19 19:25:59,529 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-19 19:25:59,530 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [PESSIMISTIC_FORCE_INCREMENT]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-19 19:25:59,531 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b87760e]
2017-04-19 19:25:59,535 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-19 19:25:59,536 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-19 19:25:59,537 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-19 19:25:59,538 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-19 19:25:59,539 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-19 19:25:59,540 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [OPTIMISTIC]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-19 19:25:59,541 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b24ea2a]
2017-04-19 19:25:59,543 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-19 19:25:59,543 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-19 19:25:59,544 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-19 19:25:59,545 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-19 19:25:59,547 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-19 19:25:59,547 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [OPTIMISTIC_FORCE_INCREMENT]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-19 19:25:59,594 DEBUG [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_MERGE on entity com.example.struts2.model.Users: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-19 19:25:59,595 DEBUG [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_REFRESH on entity com.example.struts2.model.Users: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-19 19:25:59,673 DEBUG [main] spi.SchemaManagementToolCoordinator (SchemaManagementToolCoordinator.java:56) - No actions specified; doing nothing
2017-04-19 19:25:59,674 DEBUG [main] internal.JtaPlatformInitiator (JtaPlatformInitiator.java:42) - No JtaPlatform was specified, checking resolver
2017-04-19 19:25:59,676 DEBUG [main] internal.JtaPlatformResolverInitiator (JtaPlatformResolverInitiator.java:33) - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2017-04-19 19:25:59,695 DEBUG [main] internal.StandardJtaPlatformResolver (StandardJtaPlatformResolver.java:102) - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2017-04-19 19:25:59,700 DEBUG [main] spi.NamedQueryRepository (NamedQueryRepository.java:151) - Checking 0 named HQL queries
2017-04-19 19:25:59,701 DEBUG [main] spi.NamedQueryRepository (NamedQueryRepository.java:167) - Checking 0 named SQL queries
2017-04-19 19:25:59,708 DEBUG [main] internal.SessionFactoryRegistry (SessionFactoryRegistry.java:52) - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6dcab9d9
2017-04-19 19:25:59,714 DEBUG [main] internal.SessionFactoryRegistry (SessionFactoryRegistry.java:74) - Registering SessionFactory: 40eb5c1b-5e61-441f-9ae2-76008b166b4a (<unnamed>)
2017-04-19 19:25:59,715 DEBUG [main] internal.SessionFactoryRegistry (SessionFactoryRegistry.java:81) - Not binding SessionFactory to JNDI, no JNDI name configured
2017-04-19 19:26:22,115 INFO  [qtp1245439653-17] action.Login (Login.java:23) - VALIDATE admin admin
2017-04-19 19:26:22,391 DEBUG [qtp1245439653-17] internal.StatisticsInitiator (StatisticsInitiator.java:82) - Statistics initialized [enabled=false]
2017-04-19 19:26:22,422 DEBUG [qtp1245439653-17] internal.TransactionImpl (TransactionImpl.java:55) - begin
2017-04-19 19:26:22,443 DEBUG [qtp1245439653-17] internal.AbstractSaveEventListener (AbstractSaveEventListener.java:118) - Generated identifier: 0, using strategy: org.hibernate.id.Assigned
2017-04-19 19:26:22,501 DEBUG [qtp1245439653-17] internal.TransactionImpl (TransactionImpl.java:66) - committing
2017-04-19 19:26:22,514 DEBUG [qtp1245439653-17] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:132) - Processing flush-time cascades
2017-04-19 19:26:22,524 DEBUG [qtp1245439653-17] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:174) - Dirty checking collections
2017-04-19 19:26:22,533 DEBUG [qtp1245439653-17] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:106) - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2017-04-19 19:26:22,537 DEBUG [qtp1245439653-17] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:113) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2017-04-19 19:26:22,551 DEBUG [qtp1245439653-17] util.EntityPrinter (EntityPrinter.java:102) - Listing entities:
2017-04-19 19:26:22,557 DEBUG [qtp1245439653-17] util.EntityPrinter (EntityPrinter.java:109) - com.example.struts2.model.Users{password=admin, id=0, username=admin}
2017-04-19 19:26:22,598 DEBUG [qtp1245439653-17] spi.SqlStatementLogger (SqlStatementLogger.java:92) - insert into users (password, username, id) values (?, ?, ?)
2017-04-19 19:26:23,144 DEBUG [qtp1245439653-17] spi.SqlExceptionHelper (SqlExceptionHelper.java:124) - could not execute statement [n/a]
com.microsoft.sqlserver.jdbc.SQLServerException: Cannot insert explicit value for identity column in table 'users' when IDENTITY_INSERT is set to OFF.
	at com.microsoft.sqlserver.jdbc.SQLServerException.makeFromDatabaseError(SQLServerException.java:216) ~[sqljdbc4-4.0.jar:?]
	at com.microsoft.sqlserver.jdbc.SQLServerStatement.getNextResult(SQLServerStatement.java:1515) ~[sqljdbc4-4.0.jar:?]
	at com.microsoft.sqlserver.jdbc.SQLServerPreparedStatement.doExecutePreparedStatement(SQLServerPreparedStatement.java:404) ~[sqljdbc4-4.0.jar:?]
	at com.microsoft.sqlserver.jdbc.SQLServerPreparedStatement$PrepStmtExecCmd.doExecute(SQLServerPreparedStatement.java:350) ~[sqljdbc4-4.0.jar:?]
	at com.microsoft.sqlserver.jdbc.TDSCommand.execute(IOBuffer.java:5696) ~[sqljdbc4-4.0.jar:?]
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.executeCommand(SQLServerConnection.java:1715) ~[sqljdbc4-4.0.jar:?]
	at com.microsoft.sqlserver.jdbc.SQLServerStatement.executeCommand(SQLServerStatement.java:180) ~[sqljdbc4-4.0.jar:?]
	at com.microsoft.sqlserver.jdbc.SQLServerStatement.executeStatement(SQLServerStatement.java:155) ~[sqljdbc4-4.0.jar:?]
	at com.microsoft.sqlserver.jdbc.SQLServerPreparedStatement.executeUpdate(SQLServerPreparedStatement.java:314) ~[sqljdbc4-4.0.jar:?]
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:205) [hibernate-core-5.2.9.Final.jar:5.2.9.Final]
	at org.hibernate.engine.jdbc.batch.internal.NonBatchingBatch.addToBatch(NonBatchingBatch.java:45) [hibernate-core-5.2.9.Final.jar:5.2.9.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3003) [hibernate-core-5.2.9.Final.jar:5.2.9.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3503) [hibernate-core-5.2.9.Final.jar:5.2.9.Final]
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:89) [hibernate-core-5.2.9.Final.jar:5.2.9.Final]
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:586) [hibernate-core-5.2.9.Final.jar:5.2.9.Final]
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:460) [hibernate-core-5.2.9.Final.jar:5.2.9.Final]
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:337) [hibernate-core-5.2.9.Final.jar:5.2.9.Final]
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:39) [hibernate-core-5.2.9.Final.jar:5.2.9.Final]
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1428) [hibernate-core-5.2.9.Final.jar:5.2.9.Final]
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:484) [hibernate-core-5.2.9.Final.jar:5.2.9.Final]
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3190) [hibernate-core-5.2.9.Final.jar:5.2.9.Final]
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2404) [hibernate-core-5.2.9.Final.jar:5.2.9.Final]
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:467) [hibernate-core-5.2.9.Final.jar:5.2.9.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:146) [hibernate-core-5.2.9.Final.jar:5.2.9.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$100(JdbcResourceLocalTransactionCoordinatorImpl.java:38) [hibernate-core-5.2.9.Final.jar:5.2.9.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:220) [hibernate-core-5.2.9.Final.jar:5.2.9.Final]
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:68) [hibernate-core-5.2.9.Final.jar:5.2.9.Final]
	at com.example.struts2.action.Login.validate(Login.java:40) [classes/:?]
	at com.opensymphony.xwork2.validator.ValidationInterceptor.doBeforeInvocation(ValidationInterceptor.java:247) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.validator.ValidationInterceptor.doIntercept(ValidationInterceptor.java:259) [struts2-core-2.5.8.jar:2.5.8]
	at org.apache.struts2.interceptor.validation.AnnotationValidationInterceptor.doIntercept(AnnotationValidationInterceptor.java:69) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:97) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.ConversionErrorInterceptor.doIntercept(ConversionErrorInterceptor.java:139) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:97) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.ParametersInterceptor.doIntercept(ParametersInterceptor.java:133) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:97) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.ParametersInterceptor.doIntercept(ParametersInterceptor.java:133) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:97) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.StaticParametersInterceptor.intercept(StaticParametersInterceptor.java:192) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at org.apache.struts2.interceptor.MultiselectInterceptor.intercept(MultiselectInterceptor.java:69) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at org.apache.struts2.interceptor.DateTextFieldInterceptor.intercept(DateTextFieldInterceptor.java:121) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at org.apache.struts2.interceptor.CheckboxInterceptor.intercept(CheckboxInterceptor.java:88) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at org.apache.struts2.interceptor.FileUploadInterceptor.intercept(FileUploadInterceptor.java:248) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.ModelDrivenInterceptor.intercept(ModelDrivenInterceptor.java:99) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.ScopedModelDrivenInterceptor.intercept(ScopedModelDrivenInterceptor.java:139) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.ChainingInterceptor.intercept(ChainingInterceptor.java:155) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.PrepareInterceptor.doIntercept(PrepareInterceptor.java:174) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:97) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at org.apache.struts2.interceptor.I18nInterceptor.intercept(I18nInterceptor.java:163) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at org.apache.struts2.interceptor.ServletConfigInterceptor.intercept(ServletConfigInterceptor.java:171) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.AliasInterceptor.intercept(AliasInterceptor.java:195) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.ExceptionMappingInterceptor.intercept(ExceptionMappingInterceptor.java:193) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at org.apache.struts2.factory.StrutsActionProxy.execute(StrutsActionProxy.java:54) [struts2-core-2.5.8.jar:2.5.8]
	at org.apache.struts2.dispatcher.Dispatcher.serviceAction(Dispatcher.java:564) [struts2-core-2.5.8.jar:2.5.8]
	at org.apache.struts2.dispatcher.ExecuteOperations.executeAction(ExecuteOperations.java:81) [struts2-core-2.5.8.jar:2.5.8]
	at org.apache.struts2.dispatcher.filter.StrutsPrepareAndExecuteFilter.doFilter(StrutsPrepareAndExecuteFilter.java:143) [struts2-core-2.5.8.jar:2.5.8]
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652) [jetty-servlet-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585) [jetty-servlet-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143) [jetty-server-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:550) [jetty-security-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:223) [jetty-server-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1128) [jetty-server-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515) [jetty-servlet-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185) [jetty-server-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1062) [jetty-server-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141) [jetty-server-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:215) [jetty-server-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:110) [jetty-server-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:113) [jetty-server-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.server.Server.handle(Server.java:507) [jetty-server-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:284) [jetty-server-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:237) [jetty-server-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:240) [jetty-io-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:93) [jetty-io-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:53) [jetty-io-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceRun.produceAndRun(ExecuteProduceRun.java:191) [jetty-util-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceRun.run(ExecuteProduceRun.java:126) [jetty-util-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:641) [jetty-util-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:559) [jetty-util-9.3.0.M2.jar:9.3.0.M2]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_111]
2017-04-19 19:26:23,242 WARN  [qtp1245439653-17] spi.SqlExceptionHelper (SqlExceptionHelper.java:129) - SQL Error: 544, SQLState: S0001
2017-04-19 19:26:23,246 ERROR [qtp1245439653-17] spi.SqlExceptionHelper (SqlExceptionHelper.java:131) - Cannot insert explicit value for identity column in table 'users' when IDENTITY_INSERT is set to OFF.
2017-04-19 19:26:23,308 INFO  [qtp1245439653-17] internal.AbstractBatchImpl (AbstractBatchImpl.java:193) - HHH000010: On release of batch it still contained JDBC statements
2017-04-19 19:26:23,339 DEBUG [qtp1245439653-17] internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl (JdbcResourceLocalTransactionCoordinatorImpl.java:255) - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:255) [hibernate-core-5.2.9.Final.jar:5.2.9.Final]
	at org.hibernate.engine.transaction.internal.TransactionImpl.setRollbackOnly(TransactionImpl.java:143) [hibernate-core-5.2.9.Final.jar:5.2.9.Final]
	at org.hibernate.Transaction.markRollbackOnly(Transaction.java:68) [hibernate-core-5.2.9.Final.jar:5.2.9.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.markForRollbackOnly(AbstractSharedSessionContract.java:352) [hibernate-core-5.2.9.Final.jar:5.2.9.Final]
	at org.hibernate.internal.ExceptionConverterImpl.handlePersistenceException(ExceptionConverterImpl.java:271) [hibernate-core-5.2.9.Final.jar:5.2.9.Final]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:148) [hibernate-core-5.2.9.Final.jar:5.2.9.Final]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:155) [hibernate-core-5.2.9.Final.jar:5.2.9.Final]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:162) [hibernate-core-5.2.9.Final.jar:5.2.9.Final]
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1434) [hibernate-core-5.2.9.Final.jar:5.2.9.Final]
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:484) [hibernate-core-5.2.9.Final.jar:5.2.9.Final]
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3190) [hibernate-core-5.2.9.Final.jar:5.2.9.Final]
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2404) [hibernate-core-5.2.9.Final.jar:5.2.9.Final]
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:467) [hibernate-core-5.2.9.Final.jar:5.2.9.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:146) [hibernate-core-5.2.9.Final.jar:5.2.9.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$100(JdbcResourceLocalTransactionCoordinatorImpl.java:38) [hibernate-core-5.2.9.Final.jar:5.2.9.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:220) [hibernate-core-5.2.9.Final.jar:5.2.9.Final]
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:68) [hibernate-core-5.2.9.Final.jar:5.2.9.Final]
	at com.example.struts2.action.Login.validate(Login.java:40) [classes/:?]
	at com.opensymphony.xwork2.validator.ValidationInterceptor.doBeforeInvocation(ValidationInterceptor.java:247) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.validator.ValidationInterceptor.doIntercept(ValidationInterceptor.java:259) [struts2-core-2.5.8.jar:2.5.8]
	at org.apache.struts2.interceptor.validation.AnnotationValidationInterceptor.doIntercept(AnnotationValidationInterceptor.java:69) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:97) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.ConversionErrorInterceptor.doIntercept(ConversionErrorInterceptor.java:139) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:97) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.ParametersInterceptor.doIntercept(ParametersInterceptor.java:133) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:97) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.ParametersInterceptor.doIntercept(ParametersInterceptor.java:133) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:97) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.StaticParametersInterceptor.intercept(StaticParametersInterceptor.java:192) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at org.apache.struts2.interceptor.MultiselectInterceptor.intercept(MultiselectInterceptor.java:69) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at org.apache.struts2.interceptor.DateTextFieldInterceptor.intercept(DateTextFieldInterceptor.java:121) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at org.apache.struts2.interceptor.CheckboxInterceptor.intercept(CheckboxInterceptor.java:88) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at org.apache.struts2.interceptor.FileUploadInterceptor.intercept(FileUploadInterceptor.java:248) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.ModelDrivenInterceptor.intercept(ModelDrivenInterceptor.java:99) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.ScopedModelDrivenInterceptor.intercept(ScopedModelDrivenInterceptor.java:139) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.ChainingInterceptor.intercept(ChainingInterceptor.java:155) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.PrepareInterceptor.doIntercept(PrepareInterceptor.java:174) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:97) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at org.apache.struts2.interceptor.I18nInterceptor.intercept(I18nInterceptor.java:163) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at org.apache.struts2.interceptor.ServletConfigInterceptor.intercept(ServletConfigInterceptor.java:171) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.AliasInterceptor.intercept(AliasInterceptor.java:195) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.ExceptionMappingInterceptor.intercept(ExceptionMappingInterceptor.java:193) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at org.apache.struts2.factory.StrutsActionProxy.execute(StrutsActionProxy.java:54) [struts2-core-2.5.8.jar:2.5.8]
	at org.apache.struts2.dispatcher.Dispatcher.serviceAction(Dispatcher.java:564) [struts2-core-2.5.8.jar:2.5.8]
	at org.apache.struts2.dispatcher.ExecuteOperations.executeAction(ExecuteOperations.java:81) [struts2-core-2.5.8.jar:2.5.8]
	at org.apache.struts2.dispatcher.filter.StrutsPrepareAndExecuteFilter.doFilter(StrutsPrepareAndExecuteFilter.java:143) [struts2-core-2.5.8.jar:2.5.8]
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652) [jetty-servlet-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585) [jetty-servlet-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143) [jetty-server-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:550) [jetty-security-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:223) [jetty-server-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1128) [jetty-server-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515) [jetty-servlet-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185) [jetty-server-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1062) [jetty-server-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141) [jetty-server-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:215) [jetty-server-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:110) [jetty-server-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:113) [jetty-server-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.server.Server.handle(Server.java:507) [jetty-server-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:284) [jetty-server-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:237) [jetty-server-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:240) [jetty-io-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:93) [jetty-io-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:53) [jetty-io-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceRun.produceAndRun(ExecuteProduceRun.java:191) [jetty-util-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceRun.run(ExecuteProduceRun.java:126) [jetty-util-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:641) [jetty-util-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:559) [jetty-util-9.3.0.M2.jar:9.3.0.M2]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_111]
2017-04-19 19:26:23,360 ERROR [qtp1245439653-17] internal.ExceptionMapperStandardImpl (ExceptionMapperStandardImpl.java:39) - HHH000346: Error during managed flush [org.hibernate.exception.SQLGrammarException: could not execute statement]
2017-04-19 19:26:23,368 DEBUG [qtp1245439653-17] internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl (JdbcResourceLocalTransactionCoordinatorImpl.java:255) - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:255) [hibernate-core-5.2.9.Final.jar:5.2.9.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:155) [hibernate-core-5.2.9.Final.jar:5.2.9.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$100(JdbcResourceLocalTransactionCoordinatorImpl.java:38) [hibernate-core-5.2.9.Final.jar:5.2.9.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:220) [hibernate-core-5.2.9.Final.jar:5.2.9.Final]
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:68) [hibernate-core-5.2.9.Final.jar:5.2.9.Final]
	at com.example.struts2.action.Login.validate(Login.java:40) [classes/:?]
	at com.opensymphony.xwork2.validator.ValidationInterceptor.doBeforeInvocation(ValidationInterceptor.java:247) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.validator.ValidationInterceptor.doIntercept(ValidationInterceptor.java:259) [struts2-core-2.5.8.jar:2.5.8]
	at org.apache.struts2.interceptor.validation.AnnotationValidationInterceptor.doIntercept(AnnotationValidationInterceptor.java:69) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:97) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.ConversionErrorInterceptor.doIntercept(ConversionErrorInterceptor.java:139) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:97) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.ParametersInterceptor.doIntercept(ParametersInterceptor.java:133) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:97) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.ParametersInterceptor.doIntercept(ParametersInterceptor.java:133) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:97) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.StaticParametersInterceptor.intercept(StaticParametersInterceptor.java:192) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at org.apache.struts2.interceptor.MultiselectInterceptor.intercept(MultiselectInterceptor.java:69) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at org.apache.struts2.interceptor.DateTextFieldInterceptor.intercept(DateTextFieldInterceptor.java:121) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at org.apache.struts2.interceptor.CheckboxInterceptor.intercept(CheckboxInterceptor.java:88) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at org.apache.struts2.interceptor.FileUploadInterceptor.intercept(FileUploadInterceptor.java:248) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.ModelDrivenInterceptor.intercept(ModelDrivenInterceptor.java:99) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.ScopedModelDrivenInterceptor.intercept(ScopedModelDrivenInterceptor.java:139) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.ChainingInterceptor.intercept(ChainingInterceptor.java:155) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.PrepareInterceptor.doIntercept(PrepareInterceptor.java:174) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:97) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at org.apache.struts2.interceptor.I18nInterceptor.intercept(I18nInterceptor.java:163) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at org.apache.struts2.interceptor.ServletConfigInterceptor.intercept(ServletConfigInterceptor.java:171) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.AliasInterceptor.intercept(AliasInterceptor.java:195) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.interceptor.ExceptionMappingInterceptor.intercept(ExceptionMappingInterceptor.java:193) [struts2-core-2.5.8.jar:2.5.8]
	at com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:240) [struts2-core-2.5.8.jar:2.5.8]
	at org.apache.struts2.factory.StrutsActionProxy.execute(StrutsActionProxy.java:54) [struts2-core-2.5.8.jar:2.5.8]
	at org.apache.struts2.dispatcher.Dispatcher.serviceAction(Dispatcher.java:564) [struts2-core-2.5.8.jar:2.5.8]
	at org.apache.struts2.dispatcher.ExecuteOperations.executeAction(ExecuteOperations.java:81) [struts2-core-2.5.8.jar:2.5.8]
	at org.apache.struts2.dispatcher.filter.StrutsPrepareAndExecuteFilter.doFilter(StrutsPrepareAndExecuteFilter.java:143) [struts2-core-2.5.8.jar:2.5.8]
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652) [jetty-servlet-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585) [jetty-servlet-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143) [jetty-server-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:550) [jetty-security-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:223) [jetty-server-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1128) [jetty-server-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515) [jetty-servlet-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185) [jetty-server-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1062) [jetty-server-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141) [jetty-server-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:215) [jetty-server-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:110) [jetty-server-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:113) [jetty-server-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.server.Server.handle(Server.java:507) [jetty-server-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:284) [jetty-server-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:237) [jetty-server-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:240) [jetty-io-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:93) [jetty-io-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:53) [jetty-io-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceRun.produceAndRun(ExecuteProduceRun.java:191) [jetty-util-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceRun.run(ExecuteProduceRun.java:126) [jetty-util-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:641) [jetty-util-9.3.0.M2.jar:9.3.0.M2]
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:559) [jetty-util-9.3.0.M2.jar:9.3.0.M2]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_111]
2017-04-19 19:26:23,386 DEBUG [qtp1245439653-17] internal.LogicalConnectionManagedImpl (LogicalConnectionManagedImpl.java:154) - Initiating JDBC connection release from afterTransaction
2017-04-19 19:26:23,399 DEBUG [qtp1245439653-17] internal.LogicalConnectionManagedImpl (LogicalConnectionManagedImpl.java:154) - Initiating JDBC connection release from afterTransaction
2017-04-19 19:26:52,804 DEBUG [pool-3-thread-1] internal.PooledConnections (PooledConnections.java:51) - Connection pool now considered primed; min-size will be maintained
2017-04-19 19:29:30,768 DEBUG [main] internal.CoreLogging (CoreLogging.java:28) - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2017-04-19 19:29:30,805 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2017-04-19 19:29:30,812 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2017-04-19 19:29:30,824 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2017-04-19 19:29:31,411 INFO  [main] hibernate.Version (Version.java:45) - HHH000412: Hibernate Core {5.2.9.Final}
2017-04-19 19:29:31,419 INFO  [main] cfg.Environment (Environment.java:213) - HHH000206: hibernate.properties not found
2017-04-19 19:29:31,477 DEBUG [main] internal.JaxbCfgProcessor (JaxbCfgProcessor.java:116) - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2017-04-19 19:29:32,000 DEBUG [main] cfg.Configuration (Configuration.java:724) - Building session factory using internal StandardServiceRegistryBuilder
2017-04-19 19:29:32,019 DEBUG [main] spi.ServiceBinding (ServiceBinding.java:68) - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2017-04-19 19:29:32,030 DEBUG [main] cfg.Configuration (Configuration.java:652) - Building session factory using provided StandardServiceRegistry
2017-04-19 19:29:32,090 DEBUG [main] internal.RegionFactoryInitiator (RegionFactoryInitiator.java:75) - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2017-04-19 19:29:32,116 INFO  [main] java.JavaReflectionManager (JavaReflectionManager.java:66) - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2017-04-19 19:29:32,183 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@12a14b74
2017-04-19 19:29:32,187 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@12a14b74
2017-04-19 19:29:32,191 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@12a14b74
2017-04-19 19:29:32,196 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2aa7399c
2017-04-19 19:29:32,203 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6415f61e
2017-04-19 19:29:32,208 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration yes_no -> org.hibernate.type.YesNoType@6468a7b6
2017-04-19 19:29:32,216 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@6af91cc8
2017-04-19 19:29:32,220 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@6af91cc8
2017-04-19 19:29:32,224 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6af91cc8
2017-04-19 19:29:32,231 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration character -> org.hibernate.type.CharacterType@6056232d
2017-04-19 19:29:32,235 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration char -> org.hibernate.type.CharacterType@6056232d
2017-04-19 19:29:32,242 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6056232d
2017-04-19 19:29:32,250 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@58b91d57
2017-04-19 19:29:32,254 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@58b91d57
2017-04-19 19:29:32,257 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@58b91d57
2017-04-19 19:29:32,267 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration integer -> org.hibernate.type.IntegerType@1806bc4c
2017-04-19 19:29:32,271 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration int -> org.hibernate.type.IntegerType@1806bc4c
2017-04-19 19:29:32,274 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1806bc4c
2017-04-19 19:29:32,281 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@2f9a4401
2017-04-19 19:29:32,285 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@2f9a4401
2017-04-19 19:29:32,288 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2f9a4401
2017-04-19 19:29:32,298 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@c017175
2017-04-19 19:29:32,302 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@c017175
2017-04-19 19:29:32,305 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@c017175
2017-04-19 19:29:32,312 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@68565bc7
2017-04-19 19:29:32,315 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@68565bc7
2017-04-19 19:29:32,319 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@68565bc7
2017-04-19 19:29:32,326 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2ff7a73
2017-04-19 19:29:32,329 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2ff7a73
2017-04-19 19:29:32,333 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1e1b061
2017-04-19 19:29:32,334 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1e1b061
2017-04-19 19:29:32,337 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration string -> org.hibernate.type.StringType@60c73e58
2017-04-19 19:29:32,338 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.String -> org.hibernate.type.StringType@60c73e58
2017-04-19 19:29:32,340 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4483d35
2017-04-19 19:29:32,343 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2f4ba1ae
2017-04-19 19:29:32,346 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration url -> org.hibernate.type.UrlType@1b6924cb
2017-04-19 19:29:32,347 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1b6924cb
2017-04-19 19:29:32,355 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Duration -> org.hibernate.type.DurationType@6ed043d3
2017-04-19 19:29:32,356 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@6ed043d3
2017-04-19 19:29:32,403 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Instant -> org.hibernate.type.InstantType@6342ff7f
2017-04-19 19:29:32,405 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6342ff7f
2017-04-19 19:29:32,409 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7da31a40
2017-04-19 19:29:32,410 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7da31a40
2017-04-19 19:29:32,415 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7c3e4b1a
2017-04-19 19:29:32,416 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7c3e4b1a
2017-04-19 19:29:32,421 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5762658b
2017-04-19 19:29:32,422 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5762658b
2017-04-19 19:29:32,426 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6e4599c0
2017-04-19 19:29:32,428 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6e4599c0
2017-04-19 19:29:32,432 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@2b5c4f17
2017-04-19 19:29:32,433 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@2b5c4f17
2017-04-19 19:29:32,445 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1fc713c9
2017-04-19 19:29:32,446 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1fc713c9
2017-04-19 19:29:32,450 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration date -> org.hibernate.type.DateType@6848a051
2017-04-19 19:29:32,451 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6848a051
2017-04-19 19:29:32,456 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration time -> org.hibernate.type.TimeType@2b0b7e5a
2017-04-19 19:29:32,457 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2b0b7e5a
2017-04-19 19:29:32,463 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration timestamp -> org.hibernate.type.TimestampType@68a78f3c
2017-04-19 19:29:32,467 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@68a78f3c
2017-04-19 19:29:32,468 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@68a78f3c
2017-04-19 19:29:32,476 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2ddb3ae8
2017-04-19 19:29:32,483 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration calendar -> org.hibernate.type.CalendarType@6fbc1bb
2017-04-19 19:29:32,487 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6fbc1bb
2017-04-19 19:29:32,490 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6fbc1bb
2017-04-19 19:29:32,497 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@73809e7
2017-04-19 19:29:32,503 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration locale -> org.hibernate.type.LocaleType@67507df
2017-04-19 19:29:32,507 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@67507df
2017-04-19 19:29:32,515 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration currency -> org.hibernate.type.CurrencyType@33feb805
2017-04-19 19:29:32,520 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@33feb805
2017-04-19 19:29:32,526 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6f8aba08
2017-04-19 19:29:32,530 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6f8aba08
2017-04-19 19:29:32,538 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration class -> org.hibernate.type.ClassType@35c9a231
2017-04-19 19:29:32,542 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@35c9a231
2017-04-19 19:29:32,549 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3003827c
2017-04-19 19:29:32,553 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3003827c
2017-04-19 19:29:32,559 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@656f62dc
2017-04-19 19:29:32,567 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration binary -> org.hibernate.type.BinaryType@5a8c93
2017-04-19 19:29:32,571 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte[] -> org.hibernate.type.BinaryType@5a8c93
2017-04-19 19:29:32,575 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [B -> org.hibernate.type.BinaryType@5a8c93
2017-04-19 19:29:32,581 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1c7350b0
2017-04-19 19:29:32,585 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1c7350b0
2017-04-19 19:29:32,586 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1c7350b0
2017-04-19 19:29:32,589 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration row_version -> org.hibernate.type.RowVersionType@2b0dc227
2017-04-19 19:29:32,592 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration image -> org.hibernate.type.ImageType@2a334bac
2017-04-19 19:29:32,595 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration characters -> org.hibernate.type.CharArrayType@3c854752
2017-04-19 19:29:32,596 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration char[] -> org.hibernate.type.CharArrayType@3c854752
2017-04-19 19:29:32,596 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [C -> org.hibernate.type.CharArrayType@3c854752
2017-04-19 19:29:32,600 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@210d2a6c
2017-04-19 19:29:32,600 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@210d2a6c
2017-04-19 19:29:32,601 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@210d2a6c
2017-04-19 19:29:32,603 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration text -> org.hibernate.type.TextType@77c10a5f
2017-04-19 19:29:32,606 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ntext -> org.hibernate.type.NTextType@355c94be
2017-04-19 19:29:32,616 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration blob -> org.hibernate.type.BlobType@57fbc06f
2017-04-19 19:29:32,617 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@57fbc06f
2017-04-19 19:29:32,624 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7c52fc81
2017-04-19 19:29:32,638 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration clob -> org.hibernate.type.ClobType@361abd01
2017-04-19 19:29:32,641 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@361abd01
2017-04-19 19:29:32,654 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration nclob -> org.hibernate.type.NClobType@7c011174
2017-04-19 19:29:32,657 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7c011174
2017-04-19 19:29:32,661 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@40f35e52
2017-04-19 19:29:32,666 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@443faa85
2017-04-19 19:29:32,674 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration serializable -> org.hibernate.type.SerializableType@13dbed9e
2017-04-19 19:29:32,685 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration object -> org.hibernate.type.ObjectType@45aca496
2017-04-19 19:29:32,687 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@45aca496
2017-04-19 19:29:32,699 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3d90eeb3
2017-04-19 19:29:32,702 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1db87583
2017-04-19 19:29:32,706 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7fb53256
2017-04-19 19:29:32,709 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1d6d1d42
2017-04-19 19:29:32,713 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@27329d2a
2017-04-19 19:29:32,715 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7978e022
2017-04-19 19:29:32,716 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2f894ad9
2017-04-19 19:29:32,719 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5afbd567
2017-04-19 19:29:32,758 WARN  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:70) - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2017-04-19 19:29:32,820 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:126) - HHH10001005: using driver [com.microsoft.sqlserver.jdbc.SQLServerDriver] at URL [jdbc:sqlserver://localhost:1433;database=strutsproject]
2017-04-19 19:29:32,826 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:132) - HHH10001001: Connection properties: {user=SA, password=SQLServ3r}
2017-04-19 19:29:32,830 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:140) - HHH10001003: Autocommit mode: false
2017-04-19 19:29:32,851 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:384) - Initializing Connection pool with 1 Connections
2017-04-19 19:29:32,854 INFO  [main] internal.PooledConnections (PooledConnections.java:41) - HHH000115: Hibernate connection pool size: 1 (min=1)
2017-04-19 19:29:33,773 DEBUG [main] internal.JdbcEnvironmentInitiator (JdbcEnvironmentInitiator.java:72) - Database ->
       name : Microsoft SQL Server
    version : 14.00.405
      major : 14
      minor : 0
2017-04-19 19:29:33,774 DEBUG [main] internal.JdbcEnvironmentInitiator (JdbcEnvironmentInitiator.java:83) - Driver ->
       name : Microsoft JDBC Driver 4.0 for SQL Server
    version : 4.0.2206.100
      major : 4
      minor : 0
2017-04-19 19:29:33,775 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:389) - JDBC version : 4.0
2017-04-19 19:29:33,825 INFO  [main] dialect.Dialect (Dialect.java:157) - HHH000400: Using dialect: org.hibernate.dialect.SQLServer2008Dialect
2017-04-19 19:29:34,491 DEBUG [main] spi.IdentifierHelperBuilder (IdentifierHelperBuilder.java:191) - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2017-04-19 19:29:34,624 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2017-04-19 19:29:34,628 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2017-04-19 19:29:34,633 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2017-04-19 19:29:34,636 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2017-04-19 19:29:34,640 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2017-04-19 19:29:34,647 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2017-04-19 19:29:34,652 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2017-04-19 19:29:34,657 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2017-04-19 19:29:34,664 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2017-04-19 19:29:34,668 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2017-04-19 19:29:34,672 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2017-04-19 19:29:34,676 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2017-04-19 19:29:34,681 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2017-04-19 19:29:34,687 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2017-04-19 19:29:34,765 DEBUG [main] relational.Namespace (Namespace.java:47) - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2017-04-19 19:29:34,838 DEBUG [main] cfg.AnnotationBinder (AnnotationBinder.java:511) - Binding entity from annotated class: com.example.struts2.model.Users
2017-04-19 19:29:34,915 DEBUG [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2017-04-19 19:29:34,937 DEBUG [main] annotations.EntityBinder (EntityBinder.java:419) - Import with entity name users
2017-04-19 19:29:34,959 DEBUG [main] annotations.EntityBinder (EntityBinder.java:695) - Bind entity com.example.struts2.model.Users on table users
2017-04-19 19:29:56,683 INFO  [qtp1007664442-24] action.Login (Login.java:23) - VALIDATE admin admin
2017-04-19 19:30:03,731 DEBUG [pool-3-thread-1] internal.PooledConnections (PooledConnections.java:51) - Connection pool now considered primed; min-size will be maintained
2017-04-19 19:31:20,540 DEBUG [main] internal.CoreLogging (CoreLogging.java:28) - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2017-04-19 19:31:20,580 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2017-04-19 19:31:20,588 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2017-04-19 19:31:20,600 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2017-04-19 19:31:20,971 INFO  [main] hibernate.Version (Version.java:45) - HHH000412: Hibernate Core {5.2.9.Final}
2017-04-19 19:31:20,980 INFO  [main] cfg.Environment (Environment.java:213) - HHH000206: hibernate.properties not found
2017-04-19 19:31:21,050 DEBUG [main] internal.JaxbCfgProcessor (JaxbCfgProcessor.java:116) - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2017-04-19 19:31:21,443 DEBUG [main] cfg.Configuration (Configuration.java:724) - Building session factory using internal StandardServiceRegistryBuilder
2017-04-19 19:31:21,461 DEBUG [main] spi.ServiceBinding (ServiceBinding.java:68) - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2017-04-19 19:31:21,464 DEBUG [main] cfg.Configuration (Configuration.java:652) - Building session factory using provided StandardServiceRegistry
2017-04-19 19:31:21,512 DEBUG [main] internal.RegionFactoryInitiator (RegionFactoryInitiator.java:75) - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2017-04-19 19:31:21,534 INFO  [main] java.JavaReflectionManager (JavaReflectionManager.java:66) - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2017-04-19 19:31:21,590 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@68ee3b6d
2017-04-19 19:31:21,594 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@68ee3b6d
2017-04-19 19:31:21,599 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@68ee3b6d
2017-04-19 19:31:21,605 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@11eed657
2017-04-19 19:31:21,611 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@334ebcaa
2017-04-19 19:31:21,615 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration yes_no -> org.hibernate.type.YesNoType@2f860823
2017-04-19 19:31:21,625 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@6232ffdb
2017-04-19 19:31:21,629 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@6232ffdb
2017-04-19 19:31:21,632 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6232ffdb
2017-04-19 19:31:21,638 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration character -> org.hibernate.type.CharacterType@33f2df51
2017-04-19 19:31:21,642 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration char -> org.hibernate.type.CharacterType@33f2df51
2017-04-19 19:31:21,646 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@33f2df51
2017-04-19 19:31:21,653 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@61a91c9b
2017-04-19 19:31:21,657 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@61a91c9b
2017-04-19 19:31:21,661 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@61a91c9b
2017-04-19 19:31:21,667 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration integer -> org.hibernate.type.IntegerType@462e1e64
2017-04-19 19:31:21,671 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration int -> org.hibernate.type.IntegerType@462e1e64
2017-04-19 19:31:21,675 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@462e1e64
2017-04-19 19:31:21,682 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@22c75c01
2017-04-19 19:31:21,686 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@22c75c01
2017-04-19 19:31:21,689 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@22c75c01
2017-04-19 19:31:21,696 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@559cedee
2017-04-19 19:31:21,700 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@559cedee
2017-04-19 19:31:21,704 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@559cedee
2017-04-19 19:31:21,711 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@37baddde
2017-04-19 19:31:21,715 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@37baddde
2017-04-19 19:31:21,719 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@37baddde
2017-04-19 19:31:21,728 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@38830ea
2017-04-19 19:31:21,731 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@38830ea
2017-04-19 19:31:21,737 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@38f77cd9
2017-04-19 19:31:21,741 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@38f77cd9
2017-04-19 19:31:21,747 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration string -> org.hibernate.type.StringType@5984feef
2017-04-19 19:31:21,751 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.String -> org.hibernate.type.StringType@5984feef
2017-04-19 19:31:21,757 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@204abeff
2017-04-19 19:31:21,762 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1391af3b
2017-04-19 19:31:21,768 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration url -> org.hibernate.type.UrlType@3a8d467e
2017-04-19 19:31:21,772 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@3a8d467e
2017-04-19 19:31:21,779 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Duration -> org.hibernate.type.DurationType@135a8c6f
2017-04-19 19:31:21,782 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@135a8c6f
2017-04-19 19:31:21,830 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Instant -> org.hibernate.type.InstantType@403c3a01
2017-04-19 19:31:21,834 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@403c3a01
2017-04-19 19:31:21,842 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@28ee7bee
2017-04-19 19:31:21,845 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@28ee7bee
2017-04-19 19:31:21,854 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@2db4ad1
2017-04-19 19:31:21,857 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@2db4ad1
2017-04-19 19:31:21,863 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2629d5dc
2017-04-19 19:31:21,864 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2629d5dc
2017-04-19 19:31:21,871 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7dffda8b
2017-04-19 19:31:21,874 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7dffda8b
2017-04-19 19:31:21,881 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@6ca8fcf3
2017-04-19 19:31:21,887 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@6ca8fcf3
2017-04-19 19:31:21,902 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7301eebe
2017-04-19 19:31:21,906 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7301eebe
2017-04-19 19:31:21,913 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration date -> org.hibernate.type.DateType@149b0577
2017-04-19 19:31:21,917 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@149b0577
2017-04-19 19:31:21,924 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration time -> org.hibernate.type.TimeType@7be1ce6a
2017-04-19 19:31:21,928 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7be1ce6a
2017-04-19 19:31:21,934 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration timestamp -> org.hibernate.type.TimestampType@17ba57f0
2017-04-19 19:31:21,938 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@17ba57f0
2017-04-19 19:31:21,942 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@17ba57f0
2017-04-19 19:31:21,951 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@79518e00
2017-04-19 19:31:21,957 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration calendar -> org.hibernate.type.CalendarType@30c4e352
2017-04-19 19:31:21,961 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@30c4e352
2017-04-19 19:31:21,966 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@30c4e352
2017-04-19 19:31:21,971 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5f96f6a2
2017-04-19 19:31:21,977 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration locale -> org.hibernate.type.LocaleType@341b13a8
2017-04-19 19:31:21,980 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@341b13a8
2017-04-19 19:31:21,986 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration currency -> org.hibernate.type.CurrencyType@37854b34
2017-04-19 19:31:21,990 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@37854b34
2017-04-19 19:31:21,996 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@7ff19c33
2017-04-19 19:31:22,001 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7ff19c33
2017-04-19 19:31:22,007 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration class -> org.hibernate.type.ClassType@7a4d582c
2017-04-19 19:31:22,011 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7a4d582c
2017-04-19 19:31:22,018 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@29b40b3
2017-04-19 19:31:22,031 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@29b40b3
2017-04-19 19:31:22,038 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@49d30c6f
2017-04-19 19:31:22,048 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration binary -> org.hibernate.type.BinaryType@3bed3315
2017-04-19 19:31:22,052 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte[] -> org.hibernate.type.BinaryType@3bed3315
2017-04-19 19:31:22,056 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [B -> org.hibernate.type.BinaryType@3bed3315
2017-04-19 19:31:22,062 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@55651434
2017-04-19 19:31:22,066 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@55651434
2017-04-19 19:31:22,070 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@55651434
2017-04-19 19:31:22,076 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration row_version -> org.hibernate.type.RowVersionType@37ad042b
2017-04-19 19:31:22,081 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration image -> org.hibernate.type.ImageType@470d183
2017-04-19 19:31:22,087 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration characters -> org.hibernate.type.CharArrayType@3ddeaa5f
2017-04-19 19:31:22,091 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration char[] -> org.hibernate.type.CharArrayType@3ddeaa5f
2017-04-19 19:31:22,094 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [C -> org.hibernate.type.CharArrayType@3ddeaa5f
2017-04-19 19:31:22,100 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3bec5821
2017-04-19 19:31:22,104 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3bec5821
2017-04-19 19:31:22,108 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3bec5821
2017-04-19 19:31:22,115 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration text -> org.hibernate.type.TextType@176555c
2017-04-19 19:31:22,121 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ntext -> org.hibernate.type.NTextType@97a145b
2017-04-19 19:31:22,134 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration blob -> org.hibernate.type.BlobType@51a18b21
2017-04-19 19:31:22,137 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@51a18b21
2017-04-19 19:31:22,142 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7523a3dc
2017-04-19 19:31:22,156 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration clob -> org.hibernate.type.ClobType@575b5f7d
2017-04-19 19:31:22,160 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@575b5f7d
2017-04-19 19:31:22,170 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration nclob -> org.hibernate.type.NClobType@794366a5
2017-04-19 19:31:22,174 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@794366a5
2017-04-19 19:31:22,178 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@340d6d89
2017-04-19 19:31:22,183 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1ee47d9e
2017-04-19 19:31:22,189 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration serializable -> org.hibernate.type.SerializableType@67531e3a
2017-04-19 19:31:22,200 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration object -> org.hibernate.type.ObjectType@697173d9
2017-04-19 19:31:22,204 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@697173d9
2017-04-19 19:31:22,208 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1db87583
2017-04-19 19:31:22,212 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7fb53256
2017-04-19 19:31:22,215 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1d6d1d42
2017-04-19 19:31:22,216 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@27329d2a
2017-04-19 19:31:22,220 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7978e022
2017-04-19 19:31:22,221 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2f894ad9
2017-04-19 19:31:22,222 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5afbd567
2017-04-19 19:31:22,223 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6993c8df
2017-04-19 19:31:22,251 WARN  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:70) - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2017-04-19 19:31:22,338 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:126) - HHH10001005: using driver [com.microsoft.sqlserver.jdbc.SQLServerDriver] at URL [jdbc:sqlserver://localhost:1433;database=strutsproject]
2017-04-19 19:31:22,342 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:132) - HHH10001001: Connection properties: {user=SA, password=SQLServ3r}
2017-04-19 19:31:22,343 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:140) - HHH10001003: Autocommit mode: false
2017-04-19 19:31:22,362 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:384) - Initializing Connection pool with 1 Connections
2017-04-19 19:31:22,363 INFO  [main] internal.PooledConnections (PooledConnections.java:41) - HHH000115: Hibernate connection pool size: 1 (min=1)
2017-04-19 19:31:22,809 DEBUG [main] internal.JdbcEnvironmentInitiator (JdbcEnvironmentInitiator.java:72) - Database ->
       name : Microsoft SQL Server
    version : 14.00.405
      major : 14
      minor : 0
2017-04-19 19:31:22,813 DEBUG [main] internal.JdbcEnvironmentInitiator (JdbcEnvironmentInitiator.java:83) - Driver ->
       name : Microsoft JDBC Driver 4.0 for SQL Server
    version : 4.0.2206.100
      major : 4
      minor : 0
2017-04-19 19:31:22,817 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:389) - JDBC version : 4.0
2017-04-19 19:31:22,851 INFO  [main] dialect.Dialect (Dialect.java:157) - HHH000400: Using dialect: org.hibernate.dialect.SQLServer2008Dialect
2017-04-19 19:31:23,091 DEBUG [main] spi.IdentifierHelperBuilder (IdentifierHelperBuilder.java:191) - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2017-04-19 19:31:23,225 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2017-04-19 19:31:23,230 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2017-04-19 19:31:23,235 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2017-04-19 19:31:23,239 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2017-04-19 19:31:23,244 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2017-04-19 19:31:23,249 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2017-04-19 19:31:23,254 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2017-04-19 19:31:23,260 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2017-04-19 19:31:23,266 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2017-04-19 19:31:23,271 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2017-04-19 19:31:23,276 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2017-04-19 19:31:23,281 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2017-04-19 19:31:23,287 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2017-04-19 19:31:23,292 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2017-04-19 19:31:23,767 DEBUG [main] relational.Namespace (Namespace.java:47) - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2017-04-19 19:31:23,832 DEBUG [main] cfg.AnnotationBinder (AnnotationBinder.java:511) - Binding entity from annotated class: com.example.struts2.model.Users
2017-04-19 19:31:23,890 DEBUG [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2017-04-19 19:31:23,905 DEBUG [main] annotations.EntityBinder (EntityBinder.java:419) - Import with entity name users
2017-04-19 19:31:23,923 DEBUG [main] annotations.EntityBinder (EntityBinder.java:695) - Bind entity com.example.struts2.model.Users on table users
2017-04-19 19:31:52,792 DEBUG [pool-3-thread-1] internal.PooledConnections (PooledConnections.java:51) - Connection pool now considered primed; min-size will be maintained
2017-04-19 19:32:25,229 DEBUG [Scanner-0] internal.CoreLogging (CoreLogging.java:28) - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2017-04-19 19:32:25,528 DEBUG [Scanner-0] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2017-04-19 19:32:25,532 DEBUG [Scanner-0] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2017-04-19 19:32:25,539 DEBUG [Scanner-0] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2017-04-19 19:32:25,830 INFO  [Scanner-0] hibernate.Version (Version.java:45) - HHH000412: Hibernate Core {5.2.9.Final}
2017-04-19 19:32:25,838 INFO  [Scanner-0] cfg.Environment (Environment.java:213) - HHH000206: hibernate.properties not found
2017-04-19 19:32:25,895 DEBUG [Scanner-0] internal.JaxbCfgProcessor (JaxbCfgProcessor.java:116) - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2017-04-19 19:32:26,438 DEBUG [Scanner-0] cfg.Configuration (Configuration.java:724) - Building session factory using internal StandardServiceRegistryBuilder
2017-04-19 19:32:26,457 DEBUG [Scanner-0] spi.ServiceBinding (ServiceBinding.java:68) - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2017-04-19 19:32:26,460 DEBUG [Scanner-0] cfg.Configuration (Configuration.java:652) - Building session factory using provided StandardServiceRegistry
2017-04-19 19:32:26,643 DEBUG [Scanner-0] internal.RegionFactoryInitiator (RegionFactoryInitiator.java:75) - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2017-04-19 19:32:26,680 INFO  [Scanner-0] java.JavaReflectionManager (JavaReflectionManager.java:66) - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2017-04-19 19:32:26,817 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@1f35ee15
2017-04-19 19:32:26,836 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@1f35ee15
2017-04-19 19:32:26,846 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1f35ee15
2017-04-19 19:32:26,850 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@14c4fc1a
2017-04-19 19:32:26,863 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@16049aa9
2017-04-19 19:32:26,870 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration yes_no -> org.hibernate.type.YesNoType@37e3ab50
2017-04-19 19:32:26,878 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@5fac0b90
2017-04-19 19:32:26,879 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@5fac0b90
2017-04-19 19:32:26,885 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5fac0b90
2017-04-19 19:32:26,892 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration character -> org.hibernate.type.CharacterType@2d4f7d0a
2017-04-19 19:32:26,892 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration char -> org.hibernate.type.CharacterType@2d4f7d0a
2017-04-19 19:32:26,893 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2d4f7d0a
2017-04-19 19:32:26,897 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@492a97cb
2017-04-19 19:32:26,897 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@492a97cb
2017-04-19 19:32:26,898 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@492a97cb
2017-04-19 19:32:26,910 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration integer -> org.hibernate.type.IntegerType@ba17488
2017-04-19 19:32:26,913 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration int -> org.hibernate.type.IntegerType@ba17488
2017-04-19 19:32:26,914 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@ba17488
2017-04-19 19:32:26,919 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@3de5f98a
2017-04-19 19:32:26,919 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@3de5f98a
2017-04-19 19:32:26,920 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3de5f98a
2017-04-19 19:32:26,928 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@6ccbe52d
2017-04-19 19:32:26,928 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@6ccbe52d
2017-04-19 19:32:26,929 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6ccbe52d
2017-04-19 19:32:26,933 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@736daaab
2017-04-19 19:32:26,935 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@736daaab
2017-04-19 19:32:26,936 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@736daaab
2017-04-19 19:32:26,940 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@b5d65bc
2017-04-19 19:32:26,941 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@b5d65bc
2017-04-19 19:32:26,944 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@22e3e041
2017-04-19 19:32:26,946 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@22e3e041
2017-04-19 19:32:26,951 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration string -> org.hibernate.type.StringType@104686dd
2017-04-19 19:32:26,952 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.String -> org.hibernate.type.StringType@104686dd
2017-04-19 19:32:26,955 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1313d6d1
2017-04-19 19:32:26,958 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@33662ef4
2017-04-19 19:32:26,960 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration url -> org.hibernate.type.UrlType@2c614672
2017-04-19 19:32:26,961 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@2c614672
2017-04-19 19:32:26,965 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Duration -> org.hibernate.type.DurationType@3dde303d
2017-04-19 19:32:26,966 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@3dde303d
2017-04-19 19:32:26,972 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Instant -> org.hibernate.type.InstantType@1c9e77a7
2017-04-19 19:32:26,975 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@1c9e77a7
2017-04-19 19:32:26,979 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@188cddee
2017-04-19 19:32:26,980 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@188cddee
2017-04-19 19:32:26,984 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@15354c67
2017-04-19 19:32:26,986 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@15354c67
2017-04-19 19:32:26,993 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@6ce45eb4
2017-04-19 19:32:26,994 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@6ce45eb4
2017-04-19 19:32:26,998 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4e7bd185
2017-04-19 19:32:26,999 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4e7bd185
2017-04-19 19:32:27,007 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4e7f8700
2017-04-19 19:32:27,007 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4e7f8700
2017-04-19 19:32:27,012 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4eb70ac7
2017-04-19 19:32:27,013 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4eb70ac7
2017-04-19 19:32:27,020 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration date -> org.hibernate.type.DateType@6c79b8e9
2017-04-19 19:32:27,031 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6c79b8e9
2017-04-19 19:32:27,041 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration time -> org.hibernate.type.TimeType@a08f448
2017-04-19 19:32:27,042 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@a08f448
2017-04-19 19:32:27,046 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration timestamp -> org.hibernate.type.TimestampType@41f6812f
2017-04-19 19:32:27,047 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@41f6812f
2017-04-19 19:32:27,047 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@41f6812f
2017-04-19 19:32:27,052 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2332dee7
2017-04-19 19:32:27,064 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration calendar -> org.hibernate.type.CalendarType@765ac15b
2017-04-19 19:32:27,066 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@765ac15b
2017-04-19 19:32:27,067 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@765ac15b
2017-04-19 19:32:27,074 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@373e439b
2017-04-19 19:32:27,085 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration locale -> org.hibernate.type.LocaleType@5acf720b
2017-04-19 19:32:27,087 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5acf720b
2017-04-19 19:32:27,095 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration currency -> org.hibernate.type.CurrencyType@5df44fce
2017-04-19 19:32:27,098 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5df44fce
2017-04-19 19:32:27,105 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@71738d6c
2017-04-19 19:32:27,108 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@71738d6c
2017-04-19 19:32:27,116 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration class -> org.hibernate.type.ClassType@7ae29d6a
2017-04-19 19:32:27,121 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7ae29d6a
2017-04-19 19:32:27,135 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5c3460f1
2017-04-19 19:32:27,141 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5c3460f1
2017-04-19 19:32:27,149 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2bdce1a4
2017-04-19 19:32:27,156 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration binary -> org.hibernate.type.BinaryType@68a63c59
2017-04-19 19:32:27,156 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte[] -> org.hibernate.type.BinaryType@68a63c59
2017-04-19 19:32:27,157 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [B -> org.hibernate.type.BinaryType@68a63c59
2017-04-19 19:32:27,160 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@73da3c06
2017-04-19 19:32:27,161 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@73da3c06
2017-04-19 19:32:27,162 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@73da3c06
2017-04-19 19:32:27,166 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration row_version -> org.hibernate.type.RowVersionType@3a21d7aa
2017-04-19 19:32:27,175 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration image -> org.hibernate.type.ImageType@115524f4
2017-04-19 19:32:27,182 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration characters -> org.hibernate.type.CharArrayType@49817840
2017-04-19 19:32:27,194 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration char[] -> org.hibernate.type.CharArrayType@49817840
2017-04-19 19:32:27,196 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [C -> org.hibernate.type.CharArrayType@49817840
2017-04-19 19:32:27,204 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7b82e33
2017-04-19 19:32:27,210 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7b82e33
2017-04-19 19:32:27,211 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7b82e33
2017-04-19 19:32:27,215 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration text -> org.hibernate.type.TextType@5fe18785
2017-04-19 19:32:27,231 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ntext -> org.hibernate.type.NTextType@3391cc04
2017-04-19 19:32:27,248 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration blob -> org.hibernate.type.BlobType@34679a6
2017-04-19 19:32:27,265 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@34679a6
2017-04-19 19:32:27,276 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@42836856
2017-04-19 19:32:27,300 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration clob -> org.hibernate.type.ClobType@5cef42e5
2017-04-19 19:32:27,314 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5cef42e5
2017-04-19 19:32:27,326 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration nclob -> org.hibernate.type.NClobType@51e0c1e2
2017-04-19 19:32:27,327 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@51e0c1e2
2017-04-19 19:32:27,328 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6849fa9e
2017-04-19 19:32:27,330 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@49f9ac30
2017-04-19 19:32:27,334 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration serializable -> org.hibernate.type.SerializableType@61dd66e8
2017-04-19 19:32:27,341 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration object -> org.hibernate.type.ObjectType@3012bea5
2017-04-19 19:32:27,342 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3012bea5
2017-04-19 19:32:27,343 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@c533a18
2017-04-19 19:32:27,344 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@29115aa1
2017-04-19 19:32:27,344 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@62c9cb4e
2017-04-19 19:32:27,345 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@19adef73
2017-04-19 19:32:27,345 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@c3b95a4
2017-04-19 19:32:27,346 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2f5c02d0
2017-04-19 19:32:27,346 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3e33fce
2017-04-19 19:32:27,346 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@75438eb6
2017-04-19 19:32:27,372 WARN  [Scanner-0] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:70) - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2017-04-19 19:32:27,452 INFO  [Scanner-0] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:126) - HHH10001005: using driver [com.microsoft.sqlserver.jdbc.SQLServerDriver] at URL [jdbc:sqlserver://localhost:1433;database=strutsproject]
2017-04-19 19:32:27,455 INFO  [Scanner-0] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:132) - HHH10001001: Connection properties: {user=SA, password=SQLServ3r}
2017-04-19 19:32:27,457 INFO  [Scanner-0] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:140) - HHH10001003: Autocommit mode: false
2017-04-19 19:32:27,475 DEBUG [Scanner-0] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:384) - Initializing Connection pool with 1 Connections
2017-04-19 19:32:27,477 INFO  [Scanner-0] internal.PooledConnections (PooledConnections.java:41) - HHH000115: Hibernate connection pool size: 1 (min=1)
2017-04-19 19:32:27,972 DEBUG [Scanner-0] internal.JdbcEnvironmentInitiator (JdbcEnvironmentInitiator.java:72) - Database ->
       name : Microsoft SQL Server
    version : 14.00.405
      major : 14
      minor : 0
2017-04-19 19:32:27,976 DEBUG [Scanner-0] internal.JdbcEnvironmentInitiator (JdbcEnvironmentInitiator.java:83) - Driver ->
       name : Microsoft JDBC Driver 4.0 for SQL Server
    version : 4.0.2206.100
      major : 4
      minor : 0
2017-04-19 19:32:27,980 DEBUG [Scanner-0] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:389) - JDBC version : 4.0
2017-04-19 19:32:28,012 INFO  [Scanner-0] dialect.Dialect (Dialect.java:157) - HHH000400: Using dialect: org.hibernate.dialect.SQLServer2008Dialect
2017-04-19 19:32:28,351 DEBUG [Scanner-0] spi.IdentifierHelperBuilder (IdentifierHelperBuilder.java:191) - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2017-04-19 19:32:28,468 DEBUG [Scanner-0] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2017-04-19 19:32:28,473 DEBUG [Scanner-0] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2017-04-19 19:32:28,478 DEBUG [Scanner-0] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2017-04-19 19:32:28,481 DEBUG [Scanner-0] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2017-04-19 19:32:28,485 DEBUG [Scanner-0] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2017-04-19 19:32:28,490 DEBUG [Scanner-0] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2017-04-19 19:32:28,495 DEBUG [Scanner-0] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2017-04-19 19:32:28,500 DEBUG [Scanner-0] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2017-04-19 19:32:28,507 DEBUG [Scanner-0] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2017-04-19 19:32:28,512 DEBUG [Scanner-0] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2017-04-19 19:32:28,516 DEBUG [Scanner-0] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2017-04-19 19:32:28,523 DEBUG [Scanner-0] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2017-04-19 19:32:28,526 DEBUG [Scanner-0] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2017-04-19 19:32:28,531 DEBUG [Scanner-0] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2017-04-19 19:32:28,607 DEBUG [Scanner-0] relational.Namespace (Namespace.java:47) - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2017-04-19 19:32:28,726 DEBUG [Scanner-0] cfg.AnnotationBinder (AnnotationBinder.java:511) - Binding entity from annotated class: com.example.struts2.model.Users
2017-04-19 19:32:28,790 DEBUG [Scanner-0] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2017-04-19 19:32:28,809 DEBUG [Scanner-0] annotations.EntityBinder (EntityBinder.java:419) - Import with entity name users
2017-04-19 19:32:28,829 DEBUG [Scanner-0] annotations.EntityBinder (EntityBinder.java:695) - Bind entity com.example.struts2.model.Users on table users
2017-04-19 19:32:28,909 DEBUG [Scanner-0] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
2017-04-19 19:32:28,923 DEBUG [Scanner-0] annotations.PropertyBinder (PropertyBinder.java:174) - MetadataSourceProcessor property id with lazy=false
2017-04-19 19:32:28,932 DEBUG [Scanner-0] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.example.struts2.model.Users:id]
2017-04-19 19:32:28,940 DEBUG [Scanner-0] annotations.SimpleValueBinder (SimpleValueBinder.java:411) - building SimpleValue for id
2017-04-19 19:32:28,952 DEBUG [Scanner-0] annotations.PropertyBinder (PropertyBinder.java:265) - Building property id
2017-04-19 19:32:28,971 DEBUG [Scanner-0] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2017-04-19 19:32:28,975 DEBUG [Scanner-0] annotations.PropertyBinder (PropertyBinder.java:174) - MetadataSourceProcessor property password with lazy=false
2017-04-19 19:32:28,978 DEBUG [Scanner-0] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.example.struts2.model.Users:password]
2017-04-19 19:32:28,982 DEBUG [Scanner-0] annotations.SimpleValueBinder (SimpleValueBinder.java:411) - building SimpleValue for password
2017-04-19 19:32:28,984 DEBUG [Scanner-0] annotations.PropertyBinder (PropertyBinder.java:265) - Building property password
2017-04-19 19:32:28,988 DEBUG [Scanner-0] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=false}
2017-04-19 19:32:28,990 DEBUG [Scanner-0] annotations.PropertyBinder (PropertyBinder.java:174) - MetadataSourceProcessor property username with lazy=false
2017-04-19 19:32:28,992 DEBUG [Scanner-0] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.example.struts2.model.Users:username]
2017-04-19 19:32:28,995 DEBUG [Scanner-0] annotations.SimpleValueBinder (SimpleValueBinder.java:411) - building SimpleValue for username
2017-04-19 19:32:28,998 DEBUG [Scanner-0] annotations.PropertyBinder (PropertyBinder.java:265) - Building property username
2017-04-19 19:32:29,004 DEBUG [Scanner-0] annotations.SimpleValueBinder (SimpleValueBinder.java:456) - Starting fillSimpleValue for id
2017-04-19 19:32:29,008 DEBUG [Scanner-0] annotations.SimpleValueBinder (SimpleValueBinder.java:456) - Starting fillSimpleValue for password
2017-04-19 19:32:29,011 DEBUG [Scanner-0] annotations.SimpleValueBinder (SimpleValueBinder.java:456) - Starting fillSimpleValue for username
2017-04-19 19:32:29,018 DEBUG [Scanner-0] mapping.PrimaryKey (PrimaryKey.java:35) - Forcing column [id] to be non-null as it is part of the primary key for table [users]
2017-04-19 19:32:29,137 DEBUG [Scanner-0] internal.SessionFactoryImpl (SessionFactoryImpl.java:199) - Building session factory
2017-04-19 19:32:29,143 DEBUG [Scanner-0] cfg.Settings (Settings.java:69) - SessionFactory name : null
2017-04-19 19:32:29,146 DEBUG [Scanner-0] cfg.Settings (Settings.java:70) - Automatic flush during beforeCompletion(): enabled
2017-04-19 19:32:29,149 DEBUG [Scanner-0] cfg.Settings (Settings.java:71) - Automatic session close at end of transaction: disabled
2017-04-19 19:32:29,153 DEBUG [Scanner-0] cfg.Settings (Settings.java:73) - Statistics: disabled
2017-04-19 19:32:29,154 DEBUG [Scanner-0] cfg.Settings (Settings.java:75) - Deleted entity synthetic identifier rollback: disabled
2017-04-19 19:32:29,155 DEBUG [Scanner-0] cfg.Settings (Settings.java:76) - Default entity-mode: pojo
2017-04-19 19:32:29,155 DEBUG [Scanner-0] cfg.Settings (Settings.java:77) - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2017-04-19 19:32:29,155 DEBUG [Scanner-0] cfg.Settings (Settings.java:78) - Allow initialization of lazy state outside session : disabled
2017-04-19 19:32:29,156 DEBUG [Scanner-0] cfg.Settings (Settings.java:80) - Using BatchFetchStyle : LEGACY
2017-04-19 19:32:29,156 DEBUG [Scanner-0] cfg.Settings (Settings.java:81) - Default batch fetch size: -1
2017-04-19 19:32:29,156 DEBUG [Scanner-0] cfg.Settings (Settings.java:82) - Maximum outer join fetch depth: null
2017-04-19 19:32:29,161 DEBUG [Scanner-0] cfg.Settings (Settings.java:83) - Default null ordering: NONE
2017-04-19 19:32:29,164 DEBUG [Scanner-0] cfg.Settings (Settings.java:84) - Order SQL updates by primary key: disabled
2017-04-19 19:32:29,166 DEBUG [Scanner-0] cfg.Settings (Settings.java:85) - Order SQL inserts for batching: disabled
2017-04-19 19:32:29,168 DEBUG [Scanner-0] cfg.Settings (Settings.java:87) - multi-tenancy strategy : NONE
2017-04-19 19:32:29,168 DEBUG [Scanner-0] cfg.Settings (Settings.java:89) - JTA Track by Thread: enabled
2017-04-19 19:32:29,169 DEBUG [Scanner-0] cfg.Settings (Settings.java:91) - Query language substitutions: {}
2017-04-19 19:32:29,171 DEBUG [Scanner-0] cfg.Settings (Settings.java:92) - JPA query language strict compliance: disabled
2017-04-19 19:32:29,172 DEBUG [Scanner-0] cfg.Settings (Settings.java:93) - Named query checking : enabled
2017-04-19 19:32:29,173 DEBUG [Scanner-0] cfg.Settings (Settings.java:95) - Second-level cache: enabled
2017-04-19 19:32:29,174 DEBUG [Scanner-0] cfg.Settings (Settings.java:96) - Second-level query cache: disabled
2017-04-19 19:32:29,176 DEBUG [Scanner-0] cfg.Settings (Settings.java:97) - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@20298993
2017-04-19 19:32:29,179 DEBUG [Scanner-0] cfg.Settings (Settings.java:98) - Second-level cache region prefix: null
2017-04-19 19:32:29,181 DEBUG [Scanner-0] cfg.Settings (Settings.java:99) - Optimize second-level cache for minimal puts: disabled
2017-04-19 19:32:29,182 DEBUG [Scanner-0] cfg.Settings (Settings.java:100) - Structured second-level cache entries: disabled
2017-04-19 19:32:29,184 DEBUG [Scanner-0] cfg.Settings (Settings.java:101) - Second-level cache direct-reference entries: disabled
2017-04-19 19:32:29,186 DEBUG [Scanner-0] cfg.Settings (Settings.java:102) - Automatic eviction of collection cache: disabled
2017-04-19 19:32:29,187 DEBUG [Scanner-0] cfg.Settings (Settings.java:104) - JDBC batch size: 0
2017-04-19 19:32:29,191 DEBUG [Scanner-0] cfg.Settings (Settings.java:105) - JDBC batch updates for versioned data: enabled
2017-04-19 19:32:29,192 DEBUG [Scanner-0] cfg.Settings (Settings.java:106) - Scrollable result sets: enabled
2017-04-19 19:32:29,192 DEBUG [Scanner-0] cfg.Settings (Settings.java:107) - Wrap result sets: disabled
2017-04-19 19:32:29,193 DEBUG [Scanner-0] cfg.Settings (Settings.java:108) - JDBC3 getGeneratedKeys(): enabled
2017-04-19 19:32:29,194 DEBUG [Scanner-0] cfg.Settings (Settings.java:109) - JDBC result set fetch size: null
2017-04-19 19:32:29,197 DEBUG [Scanner-0] cfg.Settings (Settings.java:110) - Connection release mode: AFTER_TRANSACTION
2017-04-19 19:32:29,198 DEBUG [Scanner-0] cfg.Settings (Settings.java:111) - Generate SQL with comments: disabled
2017-04-19 19:32:29,389 DEBUG [Scanner-0] internal.SessionFactoryImpl (SessionFactoryImpl.java:254) - Session factory constructed with filter configurations : {}
2017-04-19 19:32:29,393 DEBUG [Scanner-0] internal.SessionFactoryImpl (SessionFactoryImpl.java:255) - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.SQLServer2008Dialect, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, java.vendor.url=http://java.oracle.com/, user.timezone=Asia/Jakarta, os.name=Linux, java.vm.specification.version=1.8, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, maven.home=/usr/share/maven, sun.cpu.endian=little, user.home=/root, user.language=en, java.specification.vendor=Oracle Corporation, java.home=/usr/lib/jvm/java-8-openjdk-amd64/jre, file.separator=/, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, sun.boot.class.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/classes, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_111-8u111-b14-3-b14, user.name=root, path.separator=:, securerandom.source=file:/dev/./urandom, hibernate.connection.username=SA, os.version=4.8.0-kali2-amd64, java.endorsed.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/endorsed, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:sqlserver://localhost:1433;database=strutsproject, file.encoding=UTF-8, guice.disable.misplaced.annotation.check=true, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.microsoft.sqlserver.jdbc.SQLServerDriver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=/tmp, java.version=1.8.0_111, user.dir=/root/Source/java/struts/struts-project, os.arch=amd64, maven.multiModuleProjectDirectory=/root/Source/java/struts/struts-project, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@41d22771, java.library.path=/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.111-b14, classworlds.conf=/usr/share/maven/bin/m2.conf, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.pool_size=1, java.ext.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
2017-04-19 19:32:29,427 DEBUG [Scanner-0] spi.JaccIntegrator (JaccIntegrator.java:80) - Skipping JACC integration as it was not enabled
2017-04-19 19:32:29,674 DEBUG [Scanner-0] internal.SessionFactoryImpl (SessionFactoryImpl.java:294) - Instantiated session factory
2017-04-19 19:32:29,800 DEBUG [Scanner-0] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [com.example.struts2.model.Users] is safe
2017-04-19 19:32:29,803 DEBUG [Scanner-0] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.struts2.model.Users
2017-04-19 19:32:29,859 DEBUG [Scanner-0] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [com.example.struts2.model.Users] is safe
2017-04-19 19:32:29,861 DEBUG [Scanner-0] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.struts2.model.Users
2017-04-19 19:32:30,086 DEBUG [Scanner-0] entity.AbstractEntityPersister (AbstractEntityPersister.java:3598) - Static SQL for entity: com.example.struts2.model.Users
2017-04-19 19:32:30,090 DEBUG [Scanner-0] entity.AbstractEntityPersister (AbstractEntityPersister.java:3603) -  Version select: select id from users where id =?
2017-04-19 19:32:30,094 DEBUG [Scanner-0] entity.AbstractEntityPersister (AbstractEntityPersister.java:3606) -  Snapshot select: select users_.id, users_.password as password2_0_, users_.username as username3_0_ from users users_ where users_.id=?
2017-04-19 19:32:30,097 DEBUG [Scanner-0] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Insert 0: insert into users (password, username, id) values (?, ?, ?)
2017-04-19 19:32:30,099 DEBUG [Scanner-0] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Update 0: update users set password=?, username=? where id=?
2017-04-19 19:32:30,100 DEBUG [Scanner-0] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Delete 0: delete from users where id=?
2017-04-19 19:32:30,178 DEBUG [Scanner-0] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@742d3c75]
2017-04-19 19:32:30,190 DEBUG [Scanner-0] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-19 19:32:30,193 DEBUG [Scanner-0] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-19 19:32:30,195 DEBUG [Scanner-0] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-19 19:32:30,245 DEBUG [Scanner-0] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-19 19:32:30,257 DEBUG [Scanner-0] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-19 19:32:30,262 DEBUG [Scanner-0] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [NONE]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-19 19:32:30,263 DEBUG [Scanner-0] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67493c29]
2017-04-19 19:32:30,264 DEBUG [Scanner-0] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-19 19:32:30,265 DEBUG [Scanner-0] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-19 19:32:30,266 DEBUG [Scanner-0] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-19 19:32:30,266 DEBUG [Scanner-0] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-19 19:32:30,279 DEBUG [Scanner-0] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-19 19:32:30,280 DEBUG [Scanner-0] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [READ]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-19 19:32:30,281 DEBUG [Scanner-0] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@435a82c4]
2017-04-19 19:32:30,282 DEBUG [Scanner-0] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-19 19:32:30,282 DEBUG [Scanner-0] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-19 19:32:30,283 DEBUG [Scanner-0] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-19 19:32:30,283 DEBUG [Scanner-0] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-19 19:32:30,285 DEBUG [Scanner-0] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-19 19:32:30,285 DEBUG [Scanner-0] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [UPGRADE]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ with (updlock, rowlock) where users0_.id=?
2017-04-19 19:32:30,286 DEBUG [Scanner-0] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78b0df72]
2017-04-19 19:32:30,287 DEBUG [Scanner-0] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-19 19:32:30,288 DEBUG [Scanner-0] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-19 19:32:30,288 DEBUG [Scanner-0] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-19 19:32:30,289 DEBUG [Scanner-0] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-19 19:32:30,290 DEBUG [Scanner-0] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-19 19:32:30,291 DEBUG [Scanner-0] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [UPGRADE_NOWAIT]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ with (updlock, rowlock, nowait) where users0_.id=?
2017-04-19 19:32:30,291 DEBUG [Scanner-0] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2fc8745]
2017-04-19 19:32:30,292 DEBUG [Scanner-0] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-19 19:32:30,293 DEBUG [Scanner-0] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-19 19:32:30,296 DEBUG [Scanner-0] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-19 19:32:30,303 DEBUG [Scanner-0] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-19 19:32:30,305 DEBUG [Scanner-0] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-19 19:32:30,309 DEBUG [Scanner-0] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [UPGRADE_SKIPLOCKED]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ with (updlock, rowlock, readpast) where users0_.id=?
2017-04-19 19:32:30,310 DEBUG [Scanner-0] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a562793]
2017-04-19 19:32:30,312 DEBUG [Scanner-0] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-19 19:32:30,312 DEBUG [Scanner-0] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-19 19:32:30,313 DEBUG [Scanner-0] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-19 19:32:30,314 DEBUG [Scanner-0] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-19 19:32:30,315 DEBUG [Scanner-0] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-19 19:32:30,316 DEBUG [Scanner-0] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [FORCE]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-19 19:32:30,317 DEBUG [Scanner-0] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5223e3f7]
2017-04-19 19:32:30,318 DEBUG [Scanner-0] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-19 19:32:30,319 DEBUG [Scanner-0] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-19 19:32:30,320 DEBUG [Scanner-0] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-19 19:32:30,321 DEBUG [Scanner-0] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-19 19:32:30,322 DEBUG [Scanner-0] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-19 19:32:30,323 DEBUG [Scanner-0] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [PESSIMISTIC_READ]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ with (holdlock, rowlock) where users0_.id=?
2017-04-19 19:32:30,324 DEBUG [Scanner-0] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4059cfa]
2017-04-19 19:32:30,325 DEBUG [Scanner-0] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-19 19:32:30,326 DEBUG [Scanner-0] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-19 19:32:30,326 DEBUG [Scanner-0] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-19 19:32:30,327 DEBUG [Scanner-0] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-19 19:32:30,328 DEBUG [Scanner-0] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-19 19:32:30,329 DEBUG [Scanner-0] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [PESSIMISTIC_WRITE]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ with (updlock, rowlock) where users0_.id=?
2017-04-19 19:32:30,330 DEBUG [Scanner-0] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@613b7d36]
2017-04-19 19:32:30,330 DEBUG [Scanner-0] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-19 19:32:30,331 DEBUG [Scanner-0] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-19 19:32:30,331 DEBUG [Scanner-0] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-19 19:32:30,332 DEBUG [Scanner-0] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-19 19:32:30,334 DEBUG [Scanner-0] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-19 19:32:30,335 DEBUG [Scanner-0] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [PESSIMISTIC_FORCE_INCREMENT]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-19 19:32:30,335 DEBUG [Scanner-0] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44d94b27]
2017-04-19 19:32:30,337 DEBUG [Scanner-0] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-19 19:32:30,338 DEBUG [Scanner-0] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-19 19:32:30,339 DEBUG [Scanner-0] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-19 19:32:30,340 DEBUG [Scanner-0] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-19 19:32:30,341 DEBUG [Scanner-0] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-19 19:32:30,342 DEBUG [Scanner-0] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [OPTIMISTIC]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-19 19:32:30,343 DEBUG [Scanner-0] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27f6e51]
2017-04-19 19:32:30,344 DEBUG [Scanner-0] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-19 19:32:30,345 DEBUG [Scanner-0] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-19 19:32:30,345 DEBUG [Scanner-0] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-19 19:32:30,347 DEBUG [Scanner-0] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-19 19:32:30,348 DEBUG [Scanner-0] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-19 19:32:30,349 DEBUG [Scanner-0] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [OPTIMISTIC_FORCE_INCREMENT]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-19 19:32:30,421 DEBUG [Scanner-0] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_MERGE on entity com.example.struts2.model.Users: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-19 19:32:30,426 DEBUG [Scanner-0] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_REFRESH on entity com.example.struts2.model.Users: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-19 19:32:30,508 DEBUG [Scanner-0] spi.SchemaManagementToolCoordinator (SchemaManagementToolCoordinator.java:56) - No actions specified; doing nothing
2017-04-19 19:32:30,509 DEBUG [Scanner-0] internal.JtaPlatformInitiator (JtaPlatformInitiator.java:42) - No JtaPlatform was specified, checking resolver
2017-04-19 19:32:30,511 DEBUG [Scanner-0] internal.JtaPlatformResolverInitiator (JtaPlatformResolverInitiator.java:33) - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2017-04-19 19:32:30,526 DEBUG [Scanner-0] internal.StandardJtaPlatformResolver (StandardJtaPlatformResolver.java:102) - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2017-04-19 19:32:30,540 DEBUG [Scanner-0] spi.NamedQueryRepository (NamedQueryRepository.java:151) - Checking 0 named HQL queries
2017-04-19 19:32:30,540 DEBUG [Scanner-0] spi.NamedQueryRepository (NamedQueryRepository.java:167) - Checking 0 named SQL queries
2017-04-19 19:32:30,571 DEBUG [Scanner-0] internal.SessionFactoryRegistry (SessionFactoryRegistry.java:52) - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@78371728
2017-04-19 19:32:30,579 DEBUG [Scanner-0] internal.SessionFactoryRegistry (SessionFactoryRegistry.java:74) - Registering SessionFactory: de0e46ba-77f6-463b-879a-97e597bac841 (<unnamed>)
2017-04-19 19:32:30,580 DEBUG [Scanner-0] internal.SessionFactoryRegistry (SessionFactoryRegistry.java:81) - Not binding SessionFactory to JNDI, no JNDI name configured
2017-04-19 19:32:57,952 DEBUG [pool-6-thread-1] internal.PooledConnections (PooledConnections.java:51) - Connection pool now considered primed; min-size will be maintained
2017-04-19 19:33:11,461 DEBUG [Scanner-0] internal.CoreLogging (CoreLogging.java:28) - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2017-04-19 19:33:11,514 DEBUG [Scanner-0] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2017-04-19 19:33:11,525 DEBUG [Scanner-0] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2017-04-19 19:33:11,535 DEBUG [Scanner-0] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2017-04-19 19:33:11,738 INFO  [Scanner-0] hibernate.Version (Version.java:45) - HHH000412: Hibernate Core {5.2.9.Final}
2017-04-19 19:33:11,743 INFO  [Scanner-0] cfg.Environment (Environment.java:213) - HHH000206: hibernate.properties not found
2017-04-19 19:33:11,796 DEBUG [Scanner-0] internal.JaxbCfgProcessor (JaxbCfgProcessor.java:116) - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2017-04-19 19:33:12,011 DEBUG [Scanner-0] cfg.Configuration (Configuration.java:724) - Building session factory using internal StandardServiceRegistryBuilder
2017-04-19 19:33:12,029 DEBUG [Scanner-0] spi.ServiceBinding (ServiceBinding.java:68) - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2017-04-19 19:33:12,033 DEBUG [Scanner-0] cfg.Configuration (Configuration.java:652) - Building session factory using provided StandardServiceRegistry
2017-04-19 19:33:12,073 DEBUG [Scanner-0] internal.RegionFactoryInitiator (RegionFactoryInitiator.java:75) - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2017-04-19 19:33:12,091 INFO  [Scanner-0] java.JavaReflectionManager (JavaReflectionManager.java:66) - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2017-04-19 19:33:12,153 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@2e09fd44
2017-04-19 19:33:12,154 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@2e09fd44
2017-04-19 19:33:12,154 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2e09fd44
2017-04-19 19:33:12,157 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7cbe9ab0
2017-04-19 19:33:12,159 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@55f9c815
2017-04-19 19:33:12,161 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration yes_no -> org.hibernate.type.YesNoType@67cea1f3
2017-04-19 19:33:12,167 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@505e34f2
2017-04-19 19:33:12,167 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@505e34f2
2017-04-19 19:33:12,168 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@505e34f2
2017-04-19 19:33:12,171 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration character -> org.hibernate.type.CharacterType@46d3a7a1
2017-04-19 19:33:12,172 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration char -> org.hibernate.type.CharacterType@46d3a7a1
2017-04-19 19:33:12,172 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@46d3a7a1
2017-04-19 19:33:12,176 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@490973eb
2017-04-19 19:33:12,177 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@490973eb
2017-04-19 19:33:12,177 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@490973eb
2017-04-19 19:33:12,180 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration integer -> org.hibernate.type.IntegerType@466acea2
2017-04-19 19:33:12,181 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration int -> org.hibernate.type.IntegerType@466acea2
2017-04-19 19:33:12,181 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@466acea2
2017-04-19 19:33:12,186 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@6ed893a
2017-04-19 19:33:12,188 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@6ed893a
2017-04-19 19:33:12,189 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6ed893a
2017-04-19 19:33:12,192 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@7ba0deae
2017-04-19 19:33:12,193 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@7ba0deae
2017-04-19 19:33:12,193 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7ba0deae
2017-04-19 19:33:12,196 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@68ed98b1
2017-04-19 19:33:12,197 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@68ed98b1
2017-04-19 19:33:12,198 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@68ed98b1
2017-04-19 19:33:12,201 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@76104ca3
2017-04-19 19:33:12,201 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@76104ca3
2017-04-19 19:33:12,205 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@579e71d6
2017-04-19 19:33:12,206 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@579e71d6
2017-04-19 19:33:12,214 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration string -> org.hibernate.type.StringType@32847ba4
2017-04-19 19:33:12,215 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.String -> org.hibernate.type.StringType@32847ba4
2017-04-19 19:33:12,219 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@66f904dd
2017-04-19 19:33:12,221 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2c63f606
2017-04-19 19:33:12,224 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration url -> org.hibernate.type.UrlType@14607a12
2017-04-19 19:33:12,225 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@14607a12
2017-04-19 19:33:12,228 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Duration -> org.hibernate.type.DurationType@798c6339
2017-04-19 19:33:12,228 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@798c6339
2017-04-19 19:33:12,232 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Instant -> org.hibernate.type.InstantType@14f9e73e
2017-04-19 19:33:12,233 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@14f9e73e
2017-04-19 19:33:12,237 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@64c9250a
2017-04-19 19:33:12,238 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@64c9250a
2017-04-19 19:33:12,241 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@366e2759
2017-04-19 19:33:12,242 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@366e2759
2017-04-19 19:33:12,245 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@55808a4c
2017-04-19 19:33:12,246 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@55808a4c
2017-04-19 19:33:12,249 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1cc6b646
2017-04-19 19:33:12,250 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1cc6b646
2017-04-19 19:33:12,253 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3f910ce2
2017-04-19 19:33:12,253 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3f910ce2
2017-04-19 19:33:12,257 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@d9c7e28
2017-04-19 19:33:12,257 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@d9c7e28
2017-04-19 19:33:12,263 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration date -> org.hibernate.type.DateType@43d78e7b
2017-04-19 19:33:12,265 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@43d78e7b
2017-04-19 19:33:12,268 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration time -> org.hibernate.type.TimeType@6864c640
2017-04-19 19:33:12,269 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6864c640
2017-04-19 19:33:12,272 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration timestamp -> org.hibernate.type.TimestampType@347de33d
2017-04-19 19:33:12,272 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@347de33d
2017-04-19 19:33:12,273 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@347de33d
2017-04-19 19:33:12,276 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@61e5c861
2017-04-19 19:33:12,279 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration calendar -> org.hibernate.type.CalendarType@39213d8a
2017-04-19 19:33:12,280 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@39213d8a
2017-04-19 19:33:12,281 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@39213d8a
2017-04-19 19:33:12,283 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5bca76f4
2017-04-19 19:33:12,286 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration locale -> org.hibernate.type.LocaleType@7df34243
2017-04-19 19:33:12,286 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7df34243
2017-04-19 19:33:12,289 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration currency -> org.hibernate.type.CurrencyType@7d6a99e
2017-04-19 19:33:12,289 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7d6a99e
2017-04-19 19:33:12,292 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1673bdc
2017-04-19 19:33:12,293 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1673bdc
2017-04-19 19:33:12,295 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration class -> org.hibernate.type.ClassType@23ddd959
2017-04-19 19:33:12,296 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@23ddd959
2017-04-19 19:33:12,302 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2dc9f887
2017-04-19 19:33:12,305 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2dc9f887
2017-04-19 19:33:12,309 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@11b59c1b
2017-04-19 19:33:12,317 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration binary -> org.hibernate.type.BinaryType@7321aeb3
2017-04-19 19:33:12,320 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte[] -> org.hibernate.type.BinaryType@7321aeb3
2017-04-19 19:33:12,323 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [B -> org.hibernate.type.BinaryType@7321aeb3
2017-04-19 19:33:12,328 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@21d3cdd6
2017-04-19 19:33:12,331 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@21d3cdd6
2017-04-19 19:33:12,334 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@21d3cdd6
2017-04-19 19:33:12,340 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration row_version -> org.hibernate.type.RowVersionType@292b1c7
2017-04-19 19:33:12,343 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration image -> org.hibernate.type.ImageType@25ca7979
2017-04-19 19:33:12,346 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration characters -> org.hibernate.type.CharArrayType@4121d61
2017-04-19 19:33:12,346 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration char[] -> org.hibernate.type.CharArrayType@4121d61
2017-04-19 19:33:12,347 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [C -> org.hibernate.type.CharArrayType@4121d61
2017-04-19 19:33:12,349 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@218684a6
2017-04-19 19:33:12,350 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@218684a6
2017-04-19 19:33:12,351 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@218684a6
2017-04-19 19:33:12,352 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration text -> org.hibernate.type.TextType@7aa337f9
2017-04-19 19:33:12,354 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ntext -> org.hibernate.type.NTextType@7a18b8d5
2017-04-19 19:33:12,362 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration blob -> org.hibernate.type.BlobType@4fb6cfb3
2017-04-19 19:33:12,362 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4fb6cfb3
2017-04-19 19:33:12,364 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@675ed44b
2017-04-19 19:33:12,374 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration clob -> org.hibernate.type.ClobType@6eb926f4
2017-04-19 19:33:12,374 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6eb926f4
2017-04-19 19:33:12,380 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration nclob -> org.hibernate.type.NClobType@145c6d16
2017-04-19 19:33:12,381 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@145c6d16
2017-04-19 19:33:12,382 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6f88718a
2017-04-19 19:33:12,384 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1ca4f214
2017-04-19 19:33:12,388 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration serializable -> org.hibernate.type.SerializableType@13c76626
2017-04-19 19:33:12,403 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration object -> org.hibernate.type.ObjectType@1d82d5cc
2017-04-19 19:33:12,406 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1d82d5cc
2017-04-19 19:33:12,410 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6500dbe5
2017-04-19 19:33:12,415 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6e275e3c
2017-04-19 19:33:12,416 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@f34a35f
2017-04-19 19:33:12,416 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@11d2096e
2017-04-19 19:33:12,417 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@72ee3742
2017-04-19 19:33:12,417 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@26ec519d
2017-04-19 19:33:12,417 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@ce83044
2017-04-19 19:33:12,418 DEBUG [Scanner-0] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@d70c1ce
2017-04-19 19:33:12,447 WARN  [Scanner-0] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:70) - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2017-04-19 19:33:12,474 INFO  [Scanner-0] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:126) - HHH10001005: using driver [com.microsoft.sqlserver.jdbc.SQLServerDriver] at URL [jdbc:sqlserver://localhost:1433;database=strutsproject]
2017-04-19 19:33:12,476 INFO  [Scanner-0] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:132) - HHH10001001: Connection properties: {user=SA, password=SQLServ3r}
2017-04-19 19:33:12,476 INFO  [Scanner-0] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:140) - HHH10001003: Autocommit mode: false
2017-04-19 19:33:12,484 DEBUG [Scanner-0] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:384) - Initializing Connection pool with 1 Connections
2017-04-19 19:33:12,485 INFO  [Scanner-0] internal.PooledConnections (PooledConnections.java:41) - HHH000115: Hibernate connection pool size: 1 (min=1)
2017-04-19 19:33:13,031 DEBUG [Scanner-0] internal.JdbcEnvironmentInitiator (JdbcEnvironmentInitiator.java:72) - Database ->
       name : Microsoft SQL Server
    version : 14.00.405
      major : 14
      minor : 0
2017-04-19 19:33:13,035 DEBUG [Scanner-0] internal.JdbcEnvironmentInitiator (JdbcEnvironmentInitiator.java:83) - Driver ->
       name : Microsoft JDBC Driver 4.0 for SQL Server
    version : 4.0.2206.100
      major : 4
      minor : 0
2017-04-19 19:33:13,039 DEBUG [Scanner-0] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:389) - JDBC version : 4.0
2017-04-19 19:33:13,069 INFO  [Scanner-0] dialect.Dialect (Dialect.java:157) - HHH000400: Using dialect: org.hibernate.dialect.SQLServer2008Dialect
2017-04-19 19:33:13,319 DEBUG [Scanner-0] spi.IdentifierHelperBuilder (IdentifierHelperBuilder.java:191) - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2017-04-19 19:33:13,554 DEBUG [Scanner-0] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2017-04-19 19:33:13,555 DEBUG [Scanner-0] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2017-04-19 19:33:13,558 DEBUG [Scanner-0] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2017-04-19 19:33:13,558 DEBUG [Scanner-0] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2017-04-19 19:33:13,560 DEBUG [Scanner-0] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2017-04-19 19:33:13,562 DEBUG [Scanner-0] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2017-04-19 19:33:13,563 DEBUG [Scanner-0] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2017-04-19 19:33:13,566 DEBUG [Scanner-0] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2017-04-19 19:33:13,568 DEBUG [Scanner-0] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2017-04-19 19:33:13,570 DEBUG [Scanner-0] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2017-04-19 19:33:13,572 DEBUG [Scanner-0] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2017-04-19 19:33:13,574 DEBUG [Scanner-0] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2017-04-19 19:33:13,575 DEBUG [Scanner-0] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2017-04-19 19:33:13,577 DEBUG [Scanner-0] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2017-04-19 19:33:13,642 DEBUG [Scanner-0] relational.Namespace (Namespace.java:47) - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2017-04-19 19:33:13,905 DEBUG [Scanner-0] cfg.AnnotationBinder (AnnotationBinder.java:511) - Binding entity from annotated class: com.example.struts2.model.Users
2017-04-19 19:33:14,114 DEBUG [Scanner-0] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2017-04-19 19:33:14,130 DEBUG [Scanner-0] annotations.EntityBinder (EntityBinder.java:419) - Import with entity name users
2017-04-19 19:33:14,172 DEBUG [Scanner-0] annotations.EntityBinder (EntityBinder.java:695) - Bind entity com.example.struts2.model.Users on table users
2017-04-19 19:33:14,244 DEBUG [Scanner-0] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
2017-04-19 19:33:14,253 DEBUG [Scanner-0] annotations.PropertyBinder (PropertyBinder.java:174) - MetadataSourceProcessor property id with lazy=false
2017-04-19 19:33:14,259 DEBUG [Scanner-0] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.example.struts2.model.Users:id]
2017-04-19 19:33:14,264 DEBUG [Scanner-0] annotations.SimpleValueBinder (SimpleValueBinder.java:411) - building SimpleValue for id
2017-04-19 19:33:14,271 DEBUG [Scanner-0] annotations.PropertyBinder (PropertyBinder.java:265) - Building property id
2017-04-19 19:33:14,380 DEBUG [Scanner-0] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2017-04-19 19:33:14,383 DEBUG [Scanner-0] annotations.PropertyBinder (PropertyBinder.java:174) - MetadataSourceProcessor property password with lazy=false
2017-04-19 19:33:14,386 DEBUG [Scanner-0] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.example.struts2.model.Users:password]
2017-04-19 19:33:14,390 DEBUG [Scanner-0] annotations.SimpleValueBinder (SimpleValueBinder.java:411) - building SimpleValue for password
2017-04-19 19:33:14,393 DEBUG [Scanner-0] annotations.PropertyBinder (PropertyBinder.java:265) - Building property password
2017-04-19 19:33:14,396 DEBUG [Scanner-0] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=false}
2017-04-19 19:33:14,398 DEBUG [Scanner-0] annotations.PropertyBinder (PropertyBinder.java:174) - MetadataSourceProcessor property username with lazy=false
2017-04-19 19:33:14,399 DEBUG [Scanner-0] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.example.struts2.model.Users:username]
2017-04-19 19:33:14,403 DEBUG [Scanner-0] annotations.SimpleValueBinder (SimpleValueBinder.java:411) - building SimpleValue for username
2017-04-19 19:33:14,406 DEBUG [Scanner-0] annotations.PropertyBinder (PropertyBinder.java:265) - Building property username
2017-04-19 19:33:14,413 DEBUG [Scanner-0] annotations.SimpleValueBinder (SimpleValueBinder.java:456) - Starting fillSimpleValue for id
2017-04-19 19:33:14,417 DEBUG [Scanner-0] annotations.SimpleValueBinder (SimpleValueBinder.java:456) - Starting fillSimpleValue for password
2017-04-19 19:33:14,419 DEBUG [Scanner-0] annotations.SimpleValueBinder (SimpleValueBinder.java:456) - Starting fillSimpleValue for username
2017-04-19 19:33:14,429 DEBUG [Scanner-0] mapping.PrimaryKey (PrimaryKey.java:35) - Forcing column [id] to be non-null as it is part of the primary key for table [users]
2017-04-19 19:33:14,837 DEBUG [Scanner-0] internal.SessionFactoryImpl (SessionFactoryImpl.java:199) - Building session factory
2017-04-19 19:33:14,841 DEBUG [Scanner-0] cfg.Settings (Settings.java:69) - SessionFactory name : null
2017-04-19 19:33:14,841 DEBUG [Scanner-0] cfg.Settings (Settings.java:70) - Automatic flush during beforeCompletion(): enabled
2017-04-19 19:33:14,842 DEBUG [Scanner-0] cfg.Settings (Settings.java:71) - Automatic session close at end of transaction: disabled
2017-04-19 19:33:14,842 DEBUG [Scanner-0] cfg.Settings (Settings.java:73) - Statistics: disabled
2017-04-19 19:33:14,843 DEBUG [Scanner-0] cfg.Settings (Settings.java:75) - Deleted entity synthetic identifier rollback: disabled
2017-04-19 19:33:14,843 DEBUG [Scanner-0] cfg.Settings (Settings.java:76) - Default entity-mode: pojo
2017-04-19 19:33:14,844 DEBUG [Scanner-0] cfg.Settings (Settings.java:77) - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2017-04-19 19:33:14,844 DEBUG [Scanner-0] cfg.Settings (Settings.java:78) - Allow initialization of lazy state outside session : disabled
2017-04-19 19:33:14,844 DEBUG [Scanner-0] cfg.Settings (Settings.java:80) - Using BatchFetchStyle : LEGACY
2017-04-19 19:33:14,845 DEBUG [Scanner-0] cfg.Settings (Settings.java:81) - Default batch fetch size: -1
2017-04-19 19:33:14,847 DEBUG [Scanner-0] cfg.Settings (Settings.java:82) - Maximum outer join fetch depth: null
2017-04-19 19:33:14,847 DEBUG [Scanner-0] cfg.Settings (Settings.java:83) - Default null ordering: NONE
2017-04-19 19:33:14,849 DEBUG [Scanner-0] cfg.Settings (Settings.java:84) - Order SQL updates by primary key: disabled
2017-04-19 19:33:14,850 DEBUG [Scanner-0] cfg.Settings (Settings.java:85) - Order SQL inserts for batching: disabled
2017-04-19 19:33:14,851 DEBUG [Scanner-0] cfg.Settings (Settings.java:87) - multi-tenancy strategy : NONE
2017-04-19 19:33:14,852 DEBUG [Scanner-0] cfg.Settings (Settings.java:89) - JTA Track by Thread: enabled
2017-04-19 19:33:14,854 DEBUG [Scanner-0] cfg.Settings (Settings.java:91) - Query language substitutions: {}
2017-04-19 19:33:14,856 DEBUG [Scanner-0] cfg.Settings (Settings.java:92) - JPA query language strict compliance: disabled
2017-04-19 19:33:14,857 DEBUG [Scanner-0] cfg.Settings (Settings.java:93) - Named query checking : enabled
2017-04-19 19:33:14,858 DEBUG [Scanner-0] cfg.Settings (Settings.java:95) - Second-level cache: enabled
2017-04-19 19:33:14,859 DEBUG [Scanner-0] cfg.Settings (Settings.java:96) - Second-level query cache: disabled
2017-04-19 19:33:14,859 DEBUG [Scanner-0] cfg.Settings (Settings.java:97) - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@36a0a935
2017-04-19 19:33:14,860 DEBUG [Scanner-0] cfg.Settings (Settings.java:98) - Second-level cache region prefix: null
2017-04-19 19:33:14,863 DEBUG [Scanner-0] cfg.Settings (Settings.java:99) - Optimize second-level cache for minimal puts: disabled
2017-04-19 19:33:14,864 DEBUG [Scanner-0] cfg.Settings (Settings.java:100) - Structured second-level cache entries: disabled
2017-04-19 19:33:14,864 DEBUG [Scanner-0] cfg.Settings (Settings.java:101) - Second-level cache direct-reference entries: disabled
2017-04-19 19:33:14,865 DEBUG [Scanner-0] cfg.Settings (Settings.java:102) - Automatic eviction of collection cache: disabled
2017-04-19 19:33:14,865 DEBUG [Scanner-0] cfg.Settings (Settings.java:104) - JDBC batch size: 0
2017-04-19 19:33:14,865 DEBUG [Scanner-0] cfg.Settings (Settings.java:105) - JDBC batch updates for versioned data: enabled
2017-04-19 19:33:14,867 DEBUG [Scanner-0] cfg.Settings (Settings.java:106) - Scrollable result sets: enabled
2017-04-19 19:33:14,872 DEBUG [Scanner-0] cfg.Settings (Settings.java:107) - Wrap result sets: disabled
2017-04-19 19:33:14,874 DEBUG [Scanner-0] cfg.Settings (Settings.java:108) - JDBC3 getGeneratedKeys(): enabled
2017-04-19 19:33:14,875 DEBUG [Scanner-0] cfg.Settings (Settings.java:109) - JDBC result set fetch size: null
2017-04-19 19:33:14,875 DEBUG [Scanner-0] cfg.Settings (Settings.java:110) - Connection release mode: AFTER_TRANSACTION
2017-04-19 19:33:14,875 DEBUG [Scanner-0] cfg.Settings (Settings.java:111) - Generate SQL with comments: disabled
2017-04-19 19:33:15,240 DEBUG [Scanner-0] internal.SessionFactoryImpl (SessionFactoryImpl.java:254) - Session factory constructed with filter configurations : {}
2017-04-19 19:33:15,243 DEBUG [Scanner-0] internal.SessionFactoryImpl (SessionFactoryImpl.java:255) - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.SQLServer2008Dialect, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, java.vendor.url=http://java.oracle.com/, user.timezone=Asia/Jakarta, os.name=Linux, java.vm.specification.version=1.8, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, maven.home=/usr/share/maven, sun.cpu.endian=little, user.home=/root, user.language=en, java.specification.vendor=Oracle Corporation, java.home=/usr/lib/jvm/java-8-openjdk-amd64/jre, file.separator=/, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, sun.boot.class.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/classes, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_111-8u111-b14-3-b14, user.name=root, path.separator=:, securerandom.source=file:/dev/./urandom, hibernate.connection.username=SA, os.version=4.8.0-kali2-amd64, java.endorsed.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/endorsed, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:sqlserver://localhost:1433;database=strutsproject, file.encoding=UTF-8, guice.disable.misplaced.annotation.check=true, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.microsoft.sqlserver.jdbc.SQLServerDriver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=/tmp, java.version=1.8.0_111, user.dir=/root/Source/java/struts/struts-project, os.arch=amd64, maven.multiModuleProjectDirectory=/root/Source/java/struts/struts-project, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@6f1ce545, java.library.path=/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.111-b14, classworlds.conf=/usr/share/maven/bin/m2.conf, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.pool_size=1, java.ext.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
2017-04-19 19:33:15,357 DEBUG [Scanner-0] spi.JaccIntegrator (JaccIntegrator.java:80) - Skipping JACC integration as it was not enabled
2017-04-19 19:33:15,362 DEBUG [Scanner-0] internal.SessionFactoryImpl (SessionFactoryImpl.java:294) - Instantiated session factory
2017-04-19 19:33:15,562 DEBUG [Scanner-0] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [com.example.struts2.model.Users] is safe
2017-04-19 19:33:15,564 DEBUG [Scanner-0] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.struts2.model.Users
2017-04-19 19:33:15,681 DEBUG [Scanner-0] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [com.example.struts2.model.Users] is safe
2017-04-19 19:33:15,686 DEBUG [Scanner-0] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.struts2.model.Users
2017-04-19 19:33:15,973 DEBUG [Scanner-0] entity.AbstractEntityPersister (AbstractEntityPersister.java:3598) - Static SQL for entity: com.example.struts2.model.Users
2017-04-19 19:33:15,976 DEBUG [Scanner-0] entity.AbstractEntityPersister (AbstractEntityPersister.java:3603) -  Version select: select id from users where id =?
2017-04-19 19:33:15,982 DEBUG [Scanner-0] entity.AbstractEntityPersister (AbstractEntityPersister.java:3606) -  Snapshot select: select users_.id, users_.password as password2_0_, users_.username as username3_0_ from users users_ where users_.id=?
2017-04-19 19:33:15,983 DEBUG [Scanner-0] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Insert 0: insert into users (password, username, id) values (?, ?, ?)
2017-04-19 19:33:15,984 DEBUG [Scanner-0] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Update 0: update users set password=?, username=? where id=?
2017-04-19 19:33:15,985 DEBUG [Scanner-0] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Delete 0: delete from users where id=?
2017-04-19 19:33:16,070 DEBUG [Scanner-0] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ab12030]
2017-04-19 19:33:16,076 DEBUG [Scanner-0] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-19 19:33:16,076 DEBUG [Scanner-0] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-19 19:33:16,078 DEBUG [Scanner-0] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-19 19:33:16,115 DEBUG [Scanner-0] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-19 19:33:16,145 DEBUG [Scanner-0] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-19 19:33:16,153 DEBUG [Scanner-0] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [NONE]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-19 19:33:16,157 DEBUG [Scanner-0] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63eea0e6]
2017-04-19 19:33:16,158 DEBUG [Scanner-0] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-19 19:33:16,159 DEBUG [Scanner-0] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-19 19:33:16,160 DEBUG [Scanner-0] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-19 19:33:16,160 DEBUG [Scanner-0] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-19 19:33:16,162 DEBUG [Scanner-0] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-19 19:33:16,163 DEBUG [Scanner-0] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [READ]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-19 19:33:16,164 DEBUG [Scanner-0] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32432ee]
2017-04-19 19:33:16,165 DEBUG [Scanner-0] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-19 19:33:16,165 DEBUG [Scanner-0] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-19 19:33:16,166 DEBUG [Scanner-0] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-19 19:33:16,167 DEBUG [Scanner-0] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-19 19:33:16,168 DEBUG [Scanner-0] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-19 19:33:16,170 DEBUG [Scanner-0] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [UPGRADE]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ with (updlock, rowlock) where users0_.id=?
2017-04-19 19:33:16,170 DEBUG [Scanner-0] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7fc44e14]
2017-04-19 19:33:16,171 DEBUG [Scanner-0] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-19 19:33:16,172 DEBUG [Scanner-0] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-19 19:33:16,172 DEBUG [Scanner-0] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-19 19:33:16,173 DEBUG [Scanner-0] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-19 19:33:16,175 DEBUG [Scanner-0] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-19 19:33:16,175 DEBUG [Scanner-0] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [UPGRADE_NOWAIT]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ with (updlock, rowlock, nowait) where users0_.id=?
2017-04-19 19:33:16,176 DEBUG [Scanner-0] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@197931ad]
2017-04-19 19:33:16,177 DEBUG [Scanner-0] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-19 19:33:16,178 DEBUG [Scanner-0] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-19 19:33:16,179 DEBUG [Scanner-0] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-19 19:33:16,180 DEBUG [Scanner-0] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-19 19:33:16,181 DEBUG [Scanner-0] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-19 19:33:16,182 DEBUG [Scanner-0] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [UPGRADE_SKIPLOCKED]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ with (updlock, rowlock, readpast) where users0_.id=?
2017-04-19 19:33:16,182 DEBUG [Scanner-0] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7449061b]
2017-04-19 19:33:16,183 DEBUG [Scanner-0] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-19 19:33:16,184 DEBUG [Scanner-0] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-19 19:33:16,185 DEBUG [Scanner-0] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-19 19:33:16,186 DEBUG [Scanner-0] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-19 19:33:16,187 DEBUG [Scanner-0] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-19 19:33:16,189 DEBUG [Scanner-0] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [FORCE]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-19 19:33:16,190 DEBUG [Scanner-0] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59c35001]
2017-04-19 19:33:16,190 DEBUG [Scanner-0] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-19 19:33:16,191 DEBUG [Scanner-0] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-19 19:33:16,191 DEBUG [Scanner-0] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-19 19:33:16,192 DEBUG [Scanner-0] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-19 19:33:16,193 DEBUG [Scanner-0] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-19 19:33:16,194 DEBUG [Scanner-0] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [PESSIMISTIC_READ]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ with (holdlock, rowlock) where users0_.id=?
2017-04-19 19:33:16,195 DEBUG [Scanner-0] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ec36d08]
2017-04-19 19:33:16,196 DEBUG [Scanner-0] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-19 19:33:16,197 DEBUG [Scanner-0] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-19 19:33:16,197 DEBUG [Scanner-0] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-19 19:33:16,198 DEBUG [Scanner-0] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-19 19:33:16,199 DEBUG [Scanner-0] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-19 19:33:16,202 DEBUG [Scanner-0] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [PESSIMISTIC_WRITE]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ with (updlock, rowlock) where users0_.id=?
2017-04-19 19:33:16,203 DEBUG [Scanner-0] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3bf445fa]
2017-04-19 19:33:16,204 DEBUG [Scanner-0] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-19 19:33:16,205 DEBUG [Scanner-0] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-19 19:33:16,205 DEBUG [Scanner-0] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-19 19:33:16,206 DEBUG [Scanner-0] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-19 19:33:16,208 DEBUG [Scanner-0] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-19 19:33:16,208 DEBUG [Scanner-0] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [PESSIMISTIC_FORCE_INCREMENT]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-19 19:33:16,209 DEBUG [Scanner-0] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2aec4572]
2017-04-19 19:33:16,210 DEBUG [Scanner-0] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-19 19:33:16,211 DEBUG [Scanner-0] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-19 19:33:16,211 DEBUG [Scanner-0] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-19 19:33:16,212 DEBUG [Scanner-0] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-19 19:33:16,213 DEBUG [Scanner-0] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-19 19:33:16,214 DEBUG [Scanner-0] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [OPTIMISTIC]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-19 19:33:16,215 DEBUG [Scanner-0] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@690dd04d]
2017-04-19 19:33:16,216 DEBUG [Scanner-0] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-19 19:33:16,216 DEBUG [Scanner-0] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-19 19:33:16,217 DEBUG [Scanner-0] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-19 19:33:16,218 DEBUG [Scanner-0] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-19 19:33:16,219 DEBUG [Scanner-0] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-19 19:33:16,220 DEBUG [Scanner-0] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [OPTIMISTIC_FORCE_INCREMENT]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-19 19:33:16,271 DEBUG [Scanner-0] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_MERGE on entity com.example.struts2.model.Users: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-19 19:33:16,272 DEBUG [Scanner-0] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_REFRESH on entity com.example.struts2.model.Users: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-19 19:33:16,332 DEBUG [Scanner-0] spi.SchemaManagementToolCoordinator (SchemaManagementToolCoordinator.java:56) - No actions specified; doing nothing
2017-04-19 19:33:16,333 DEBUG [Scanner-0] internal.JtaPlatformInitiator (JtaPlatformInitiator.java:42) - No JtaPlatform was specified, checking resolver
2017-04-19 19:33:16,334 DEBUG [Scanner-0] internal.JtaPlatformResolverInitiator (JtaPlatformResolverInitiator.java:33) - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2017-04-19 19:33:16,348 DEBUG [Scanner-0] internal.StandardJtaPlatformResolver (StandardJtaPlatformResolver.java:102) - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2017-04-19 19:33:16,350 DEBUG [Scanner-0] spi.NamedQueryRepository (NamedQueryRepository.java:151) - Checking 0 named HQL queries
2017-04-19 19:33:16,350 DEBUG [Scanner-0] spi.NamedQueryRepository (NamedQueryRepository.java:167) - Checking 0 named SQL queries
2017-04-19 19:33:16,355 DEBUG [Scanner-0] internal.SessionFactoryRegistry (SessionFactoryRegistry.java:52) - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@38ac6881
2017-04-19 19:33:16,360 DEBUG [Scanner-0] internal.SessionFactoryRegistry (SessionFactoryRegistry.java:74) - Registering SessionFactory: 1d1ff63e-4337-4271-a7ca-f4b6df258f81 (<unnamed>)
2017-04-19 19:33:16,361 DEBUG [Scanner-0] internal.SessionFactoryRegistry (SessionFactoryRegistry.java:81) - Not binding SessionFactory to JNDI, no JNDI name configured
2017-04-19 19:33:43,008 DEBUG [pool-9-thread-1] internal.PooledConnections (PooledConnections.java:51) - Connection pool now considered primed; min-size will be maintained
2017-04-24 09:28:04,533 DEBUG [main] internal.CoreLogging (CoreLogging.java:28) - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2017-04-24 09:28:04,567 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2017-04-24 09:28:04,575 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2017-04-24 09:28:04,585 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2017-04-24 09:28:04,994 INFO  [main] hibernate.Version (Version.java:45) - HHH000412: Hibernate Core {5.2.9.Final}
2017-04-24 09:28:05,003 INFO  [main] cfg.Environment (Environment.java:213) - HHH000206: hibernate.properties not found
2017-04-24 09:28:05,072 DEBUG [main] internal.JaxbCfgProcessor (JaxbCfgProcessor.java:116) - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2017-04-24 09:28:05,804 DEBUG [main] cfg.Configuration (Configuration.java:724) - Building session factory using internal StandardServiceRegistryBuilder
2017-04-24 09:28:05,818 DEBUG [main] spi.ServiceBinding (ServiceBinding.java:68) - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2017-04-24 09:28:05,819 DEBUG [main] cfg.Configuration (Configuration.java:652) - Building session factory using provided StandardServiceRegistry
2017-04-24 09:28:05,867 DEBUG [main] internal.RegionFactoryInitiator (RegionFactoryInitiator.java:75) - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2017-04-24 09:28:05,887 INFO  [main] java.JavaReflectionManager (JavaReflectionManager.java:66) - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2017-04-24 09:28:05,940 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@61bcbcce
2017-04-24 09:28:05,942 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@61bcbcce
2017-04-24 09:28:05,943 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@61bcbcce
2017-04-24 09:28:05,945 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@15efda6c
2017-04-24 09:28:05,948 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@404eca05
2017-04-24 09:28:05,951 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration yes_no -> org.hibernate.type.YesNoType@17092fff
2017-04-24 09:28:05,957 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@643d2dae
2017-04-24 09:28:05,958 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@643d2dae
2017-04-24 09:28:05,959 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@643d2dae
2017-04-24 09:28:05,966 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration character -> org.hibernate.type.CharacterType@46e64760
2017-04-24 09:28:05,968 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration char -> org.hibernate.type.CharacterType@46e64760
2017-04-24 09:28:05,968 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@46e64760
2017-04-24 09:28:05,972 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@c017175
2017-04-24 09:28:05,974 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@c017175
2017-04-24 09:28:05,974 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@c017175
2017-04-24 09:28:05,978 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration integer -> org.hibernate.type.IntegerType@7af3874e
2017-04-24 09:28:05,979 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration int -> org.hibernate.type.IntegerType@7af3874e
2017-04-24 09:28:05,979 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7af3874e
2017-04-24 09:28:05,983 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@70d63e05
2017-04-24 09:28:05,984 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@70d63e05
2017-04-24 09:28:05,985 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@70d63e05
2017-04-24 09:28:05,989 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@1e1b061
2017-04-24 09:28:05,990 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@1e1b061
2017-04-24 09:28:05,990 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1e1b061
2017-04-24 09:28:05,994 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@6c0905f6
2017-04-24 09:28:05,994 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@6c0905f6
2017-04-24 09:28:05,995 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6c0905f6
2017-04-24 09:28:05,999 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1391af3b
2017-04-24 09:28:06,000 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1391af3b
2017-04-24 09:28:06,002 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3a8d467e
2017-04-24 09:28:06,003 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3a8d467e
2017-04-24 09:28:06,007 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration string -> org.hibernate.type.StringType@135a8c6f
2017-04-24 09:28:06,008 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.String -> org.hibernate.type.StringType@135a8c6f
2017-04-24 09:28:06,012 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2ae62bb6
2017-04-24 09:28:06,014 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@43bf5397
2017-04-24 09:28:06,018 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration url -> org.hibernate.type.UrlType@516462cc
2017-04-24 09:28:06,019 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@516462cc
2017-04-24 09:28:06,025 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Duration -> org.hibernate.type.DurationType@3679d92e
2017-04-24 09:28:06,026 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@3679d92e
2017-04-24 09:28:06,106 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Instant -> org.hibernate.type.InstantType@2596d7f4
2017-04-24 09:28:06,109 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2596d7f4
2017-04-24 09:28:06,118 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@3d1f558a
2017-04-24 09:28:06,122 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@3d1f558a
2017-04-24 09:28:06,138 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@2f7efd0b
2017-04-24 09:28:06,141 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@2f7efd0b
2017-04-24 09:28:06,148 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@d2291de
2017-04-24 09:28:06,149 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@d2291de
2017-04-24 09:28:06,156 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1e236278
2017-04-24 09:28:06,162 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1e236278
2017-04-24 09:28:06,169 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4d6ccc97
2017-04-24 09:28:06,172 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4d6ccc97
2017-04-24 09:28:06,186 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@79518e00
2017-04-24 09:28:06,189 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@79518e00
2017-04-24 09:28:06,198 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration date -> org.hibernate.type.DateType@73809e7
2017-04-24 09:28:06,201 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@73809e7
2017-04-24 09:28:06,207 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration time -> org.hibernate.type.TimeType@67507df
2017-04-24 09:28:06,208 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@67507df
2017-04-24 09:28:06,212 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration timestamp -> org.hibernate.type.TimestampType@33feb805
2017-04-24 09:28:06,213 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@33feb805
2017-04-24 09:28:06,214 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@33feb805
2017-04-24 09:28:06,220 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@34332b8d
2017-04-24 09:28:06,224 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration calendar -> org.hibernate.type.CalendarType@7cca01a8
2017-04-24 09:28:06,225 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7cca01a8
2017-04-24 09:28:06,226 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7cca01a8
2017-04-24 09:28:06,228 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7a4d582c
2017-04-24 09:28:06,231 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration locale -> org.hibernate.type.LocaleType@4d1ff6b1
2017-04-24 09:28:06,232 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4d1ff6b1
2017-04-24 09:28:06,235 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration currency -> org.hibernate.type.CurrencyType@7d247660
2017-04-24 09:28:06,236 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7d247660
2017-04-24 09:28:06,238 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@513b52af
2017-04-24 09:28:06,239 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@513b52af
2017-04-24 09:28:06,243 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration class -> org.hibernate.type.ClassType@4ed4a7e4
2017-04-24 09:28:06,244 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4ed4a7e4
2017-04-24 09:28:06,248 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@30b975ad
2017-04-24 09:28:06,250 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@30b975ad
2017-04-24 09:28:06,253 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@470d183
2017-04-24 09:28:06,256 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration binary -> org.hibernate.type.BinaryType@3ddeaa5f
2017-04-24 09:28:06,257 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte[] -> org.hibernate.type.BinaryType@3ddeaa5f
2017-04-24 09:28:06,258 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [B -> org.hibernate.type.BinaryType@3ddeaa5f
2017-04-24 09:28:06,260 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3bec5821
2017-04-24 09:28:06,263 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3bec5821
2017-04-24 09:28:06,264 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3bec5821
2017-04-24 09:28:06,271 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration row_version -> org.hibernate.type.RowVersionType@176555c
2017-04-24 09:28:06,273 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration image -> org.hibernate.type.ImageType@97a145b
2017-04-24 09:28:06,276 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration characters -> org.hibernate.type.CharArrayType@526a9908
2017-04-24 09:28:06,277 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration char[] -> org.hibernate.type.CharArrayType@526a9908
2017-04-24 09:28:06,278 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [C -> org.hibernate.type.CharArrayType@526a9908
2017-04-24 09:28:06,280 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@60a19573
2017-04-24 09:28:06,281 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@60a19573
2017-04-24 09:28:06,282 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@60a19573
2017-04-24 09:28:06,286 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration text -> org.hibernate.type.TextType@4db60246
2017-04-24 09:28:06,290 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ntext -> org.hibernate.type.NTextType@34d45ec0
2017-04-24 09:28:06,299 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration blob -> org.hibernate.type.BlobType@22f4f8f2
2017-04-24 09:28:06,300 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@22f4f8f2
2017-04-24 09:28:06,303 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@73971965
2017-04-24 09:28:06,312 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration clob -> org.hibernate.type.ClobType@7c011174
2017-04-24 09:28:06,313 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7c011174
2017-04-24 09:28:06,320 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration nclob -> org.hibernate.type.NClobType@21a02556
2017-04-24 09:28:06,321 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@21a02556
2017-04-24 09:28:06,323 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@10a98392
2017-04-24 09:28:06,325 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1945113f
2017-04-24 09:28:06,329 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration serializable -> org.hibernate.type.SerializableType@1d6d1d42
2017-04-24 09:28:06,335 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration object -> org.hibernate.type.ObjectType@56382bc9
2017-04-24 09:28:06,336 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@56382bc9
2017-04-24 09:28:06,338 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6ba060f3
2017-04-24 09:28:06,339 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7c51782d
2017-04-24 09:28:06,339 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@77bc2e16
2017-04-24 09:28:06,340 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@48e8c32a
2017-04-24 09:28:06,340 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@20a7953c
2017-04-24 09:28:06,341 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@57c00115
2017-04-24 09:28:06,341 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@411a5965
2017-04-24 09:28:06,342 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4fe533ff
2017-04-24 09:28:06,386 WARN  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:70) - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2017-04-24 09:28:06,463 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:126) - HHH10001005: using driver [com.microsoft.sqlserver.jdbc.SQLServerDriver] at URL [jdbc:sqlserver://localhost:1433;database=strutsproject]
2017-04-24 09:28:06,467 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:132) - HHH10001001: Connection properties: {user=SA, password=SQLServ3r}
2017-04-24 09:28:06,471 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:140) - HHH10001003: Autocommit mode: false
2017-04-24 09:28:06,482 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:384) - Initializing Connection pool with 1 Connections
2017-04-24 09:28:06,486 INFO  [main] internal.PooledConnections (PooledConnections.java:41) - HHH000115: Hibernate connection pool size: 1 (min=1)
2017-04-24 09:32:45,337 DEBUG [main] internal.CoreLogging (CoreLogging.java:28) - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2017-04-24 09:32:45,374 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2017-04-24 09:32:45,381 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2017-04-24 09:32:45,394 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2017-04-24 09:32:45,838 INFO  [main] hibernate.Version (Version.java:45) - HHH000412: Hibernate Core {5.2.9.Final}
2017-04-24 09:32:45,843 INFO  [main] cfg.Environment (Environment.java:213) - HHH000206: hibernate.properties not found
2017-04-24 09:32:45,962 DEBUG [main] internal.JaxbCfgProcessor (JaxbCfgProcessor.java:116) - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2017-04-24 09:32:46,571 DEBUG [main] cfg.Configuration (Configuration.java:724) - Building session factory using internal StandardServiceRegistryBuilder
2017-04-24 09:32:46,588 DEBUG [main] spi.ServiceBinding (ServiceBinding.java:68) - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2017-04-24 09:32:46,591 DEBUG [main] cfg.Configuration (Configuration.java:652) - Building session factory using provided StandardServiceRegistry
2017-04-24 09:32:46,650 DEBUG [main] internal.RegionFactoryInitiator (RegionFactoryInitiator.java:75) - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2017-04-24 09:32:46,675 INFO  [main] java.JavaReflectionManager (JavaReflectionManager.java:66) - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2017-04-24 09:32:46,747 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@2ab26378
2017-04-24 09:32:46,753 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@2ab26378
2017-04-24 09:32:46,754 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2ab26378
2017-04-24 09:32:46,756 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@17092fff
2017-04-24 09:32:46,768 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@643d2dae
2017-04-24 09:32:46,780 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration yes_no -> org.hibernate.type.YesNoType@2f9a4401
2017-04-24 09:32:46,788 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@6f044c58
2017-04-24 09:32:46,800 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@6f044c58
2017-04-24 09:32:46,805 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6f044c58
2017-04-24 09:32:46,812 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration character -> org.hibernate.type.CharacterType@4f3faa70
2017-04-24 09:32:46,816 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration char -> org.hibernate.type.CharacterType@4f3faa70
2017-04-24 09:32:46,822 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4f3faa70
2017-04-24 09:32:46,828 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@4b31a708
2017-04-24 09:32:46,829 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@4b31a708
2017-04-24 09:32:46,830 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4b31a708
2017-04-24 09:32:46,837 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration integer -> org.hibernate.type.IntegerType@43984213
2017-04-24 09:32:46,841 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration int -> org.hibernate.type.IntegerType@43984213
2017-04-24 09:32:46,844 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@43984213
2017-04-24 09:32:46,853 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@38f77cd9
2017-04-24 09:32:46,857 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@38f77cd9
2017-04-24 09:32:46,860 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@38f77cd9
2017-04-24 09:32:46,869 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@4483d35
2017-04-24 09:32:46,873 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@4483d35
2017-04-24 09:32:46,879 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4483d35
2017-04-24 09:32:46,896 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@3762c4fc
2017-04-24 09:32:46,899 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@3762c4fc
2017-04-24 09:32:46,904 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3762c4fc
2017-04-24 09:32:46,912 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@135a8c6f
2017-04-24 09:32:46,923 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@135a8c6f
2017-04-24 09:32:46,929 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2ae62bb6
2017-04-24 09:32:46,943 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2ae62bb6
2017-04-24 09:32:46,947 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration string -> org.hibernate.type.StringType@43bf5397
2017-04-24 09:32:46,948 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.String -> org.hibernate.type.StringType@43bf5397
2017-04-24 09:32:46,955 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@516462cc
2017-04-24 09:32:46,962 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3679d92e
2017-04-24 09:32:46,974 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration url -> org.hibernate.type.UrlType@16a35bd
2017-04-24 09:32:46,978 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@16a35bd
2017-04-24 09:32:47,003 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Duration -> org.hibernate.type.DurationType@6342ff7f
2017-04-24 09:32:47,006 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@6342ff7f
2017-04-24 09:32:47,086 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Instant -> org.hibernate.type.InstantType@69f0b0f4
2017-04-24 09:32:47,087 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@69f0b0f4
2017-04-24 09:32:47,095 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@177c41d7
2017-04-24 09:32:47,096 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@177c41d7
2017-04-24 09:32:47,117 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@11f9535b
2017-04-24 09:32:47,118 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@11f9535b
2017-04-24 09:32:47,129 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@4d6ccc97
2017-04-24 09:32:47,131 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@4d6ccc97
2017-04-24 09:32:47,136 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@149b0577
2017-04-24 09:32:47,137 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@149b0577
2017-04-24 09:32:47,143 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@7be1ce6a
2017-04-24 09:32:47,144 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@7be1ce6a
2017-04-24 09:32:47,170 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@290e8cab
2017-04-24 09:32:47,175 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@290e8cab
2017-04-24 09:32:47,180 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration date -> org.hibernate.type.DateType@33feb805
2017-04-24 09:32:47,186 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@33feb805
2017-04-24 09:32:47,195 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration time -> org.hibernate.type.TimeType@6f8aba08
2017-04-24 09:32:47,196 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6f8aba08
2017-04-24 09:32:47,207 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration timestamp -> org.hibernate.type.TimestampType@35c9a231
2017-04-24 09:32:47,208 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@35c9a231
2017-04-24 09:32:47,209 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@35c9a231
2017-04-24 09:32:47,222 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@45e9b12d
2017-04-24 09:32:47,236 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration calendar -> org.hibernate.type.CalendarType@329548d0
2017-04-24 09:32:47,237 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@329548d0
2017-04-24 09:32:47,239 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@329548d0
2017-04-24 09:32:47,246 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7d247660
2017-04-24 09:32:47,252 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration locale -> org.hibernate.type.LocaleType@513b52af
2017-04-24 09:32:47,253 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@513b52af
2017-04-24 09:32:47,264 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration currency -> org.hibernate.type.CurrencyType@4ed4a7e4
2017-04-24 09:32:47,267 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4ed4a7e4
2017-04-24 09:32:47,276 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@5634a861
2017-04-24 09:32:47,278 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5634a861
2017-04-24 09:32:47,283 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration class -> org.hibernate.type.ClassType@75e09567
2017-04-24 09:32:47,284 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@75e09567
2017-04-24 09:32:47,288 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7f608e21
2017-04-24 09:32:47,290 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7f608e21
2017-04-24 09:32:47,293 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3bec5821
2017-04-24 09:32:47,296 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration binary -> org.hibernate.type.BinaryType@176555c
2017-04-24 09:32:47,297 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte[] -> org.hibernate.type.BinaryType@176555c
2017-04-24 09:32:47,298 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [B -> org.hibernate.type.BinaryType@176555c
2017-04-24 09:32:47,303 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@97a145b
2017-04-24 09:32:47,305 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@97a145b
2017-04-24 09:32:47,306 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@97a145b
2017-04-24 09:32:47,309 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration row_version -> org.hibernate.type.RowVersionType@526a9908
2017-04-24 09:32:47,314 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration image -> org.hibernate.type.ImageType@60a19573
2017-04-24 09:32:47,319 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration characters -> org.hibernate.type.CharArrayType@4db60246
2017-04-24 09:32:47,320 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration char[] -> org.hibernate.type.CharArrayType@4db60246
2017-04-24 09:32:47,321 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [C -> org.hibernate.type.CharArrayType@4db60246
2017-04-24 09:32:47,325 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@34d45ec0
2017-04-24 09:32:47,327 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@34d45ec0
2017-04-24 09:32:47,328 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@34d45ec0
2017-04-24 09:32:47,333 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration text -> org.hibernate.type.TextType@3ce443f9
2017-04-24 09:32:47,337 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ntext -> org.hibernate.type.NTextType@7523a3dc
2017-04-24 09:32:47,347 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration blob -> org.hibernate.type.BlobType@64f981e2
2017-04-24 09:32:47,349 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@64f981e2
2017-04-24 09:32:47,354 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@59bbb974
2017-04-24 09:32:47,363 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration clob -> org.hibernate.type.ClobType@64920dc2
2017-04-24 09:32:47,364 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@64920dc2
2017-04-24 09:32:47,373 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration nclob -> org.hibernate.type.NClobType@3d90eeb3
2017-04-24 09:32:47,374 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3d90eeb3
2017-04-24 09:32:47,376 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1d6d1d42
2017-04-24 09:32:47,378 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2f894ad9
2017-04-24 09:32:47,383 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration serializable -> org.hibernate.type.SerializableType@34585ac9
2017-04-24 09:32:47,391 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration object -> org.hibernate.type.ObjectType@4fe533ff
2017-04-24 09:32:47,392 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4fe533ff
2017-04-24 09:32:47,405 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@17aa8a11
2017-04-24 09:32:47,406 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@71b639d0
2017-04-24 09:32:47,411 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@18a25bbd
2017-04-24 09:32:47,411 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5d5b9ecb
2017-04-24 09:32:47,413 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1ee27d73
2017-04-24 09:32:47,416 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5e5aafc6
2017-04-24 09:32:47,419 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@542f6803
2017-04-24 09:32:47,426 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5583098b
2017-04-24 09:32:47,460 WARN  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:70) - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2017-04-24 09:32:47,521 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:126) - HHH10001005: using driver [com.microsoft.sqlserver.jdbc.SQLServerDriver] at URL [jdbc:sqlserver://localhost:1433;database=strutsproject]
2017-04-24 09:32:47,523 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:132) - HHH10001001: Connection properties: {user=SA, password=SQLServ3r}
2017-04-24 09:32:47,525 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:140) - HHH10001003: Autocommit mode: false
2017-04-24 09:32:47,544 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:384) - Initializing Connection pool with 1 Connections
2017-04-24 09:32:47,545 INFO  [main] internal.PooledConnections (PooledConnections.java:41) - HHH000115: Hibernate connection pool size: 1 (min=1)
2017-04-24 09:37:45,804 DEBUG [main] internal.CoreLogging (CoreLogging.java:28) - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2017-04-24 09:37:45,898 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2017-04-24 09:37:45,918 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2017-04-24 09:37:45,945 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2017-04-24 09:37:46,592 INFO  [main] hibernate.Version (Version.java:45) - HHH000412: Hibernate Core {5.2.9.Final}
2017-04-24 09:37:46,602 INFO  [main] cfg.Environment (Environment.java:213) - HHH000206: hibernate.properties not found
2017-04-24 09:37:46,668 DEBUG [main] internal.JaxbCfgProcessor (JaxbCfgProcessor.java:116) - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2017-04-24 09:37:47,355 DEBUG [main] cfg.Configuration (Configuration.java:724) - Building session factory using internal StandardServiceRegistryBuilder
2017-04-24 09:37:47,377 DEBUG [main] spi.ServiceBinding (ServiceBinding.java:68) - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2017-04-24 09:37:47,378 DEBUG [main] cfg.Configuration (Configuration.java:652) - Building session factory using provided StandardServiceRegistry
2017-04-24 09:37:47,449 DEBUG [main] internal.RegionFactoryInitiator (RegionFactoryInitiator.java:75) - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2017-04-24 09:37:47,499 INFO  [main] java.JavaReflectionManager (JavaReflectionManager.java:66) - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2017-04-24 09:37:47,616 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@61a91c9b
2017-04-24 09:37:47,617 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@61a91c9b
2017-04-24 09:37:47,618 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@61a91c9b
2017-04-24 09:37:47,621 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@462e1e64
2017-04-24 09:37:47,624 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@22c75c01
2017-04-24 09:37:47,626 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration yes_no -> org.hibernate.type.YesNoType@43982337
2017-04-24 09:37:47,641 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@18371d89
2017-04-24 09:37:47,644 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@18371d89
2017-04-24 09:37:47,645 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@18371d89
2017-04-24 09:37:47,650 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration character -> org.hibernate.type.CharacterType@68565bc7
2017-04-24 09:37:47,652 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration char -> org.hibernate.type.CharacterType@68565bc7
2017-04-24 09:37:47,653 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@68565bc7
2017-04-24 09:37:47,658 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@485e13d7
2017-04-24 09:37:47,661 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@485e13d7
2017-04-24 09:37:47,662 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@485e13d7
2017-04-24 09:37:47,665 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration integer -> org.hibernate.type.IntegerType@3a790e40
2017-04-24 09:37:47,666 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration int -> org.hibernate.type.IntegerType@3a790e40
2017-04-24 09:37:47,670 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3a790e40
2017-04-24 09:37:47,675 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@60c73e58
2017-04-24 09:37:47,676 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@60c73e58
2017-04-24 09:37:47,677 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@60c73e58
2017-04-24 09:37:47,682 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@5a034157
2017-04-24 09:37:47,688 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@5a034157
2017-04-24 09:37:47,689 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5a034157
2017-04-24 09:37:47,694 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@3a8d467e
2017-04-24 09:37:47,695 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@3a8d467e
2017-04-24 09:37:47,696 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3a8d467e
2017-04-24 09:37:47,705 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3d19d85
2017-04-24 09:37:47,706 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3d19d85
2017-04-24 09:37:47,709 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@42aae04d
2017-04-24 09:37:47,710 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@42aae04d
2017-04-24 09:37:47,716 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration string -> org.hibernate.type.StringType@7426a448
2017-04-24 09:37:47,717 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.String -> org.hibernate.type.StringType@7426a448
2017-04-24 09:37:47,720 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1e3e1014
2017-04-24 09:37:47,722 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4ee25d80
2017-04-24 09:37:47,728 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration url -> org.hibernate.type.UrlType@633cc6b5
2017-04-24 09:37:47,732 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@633cc6b5
2017-04-24 09:37:47,737 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Duration -> org.hibernate.type.DurationType@5ceecfee
2017-04-24 09:37:47,738 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@5ceecfee
2017-04-24 09:37:47,810 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Instant -> org.hibernate.type.InstantType@6801b414
2017-04-24 09:37:47,811 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6801b414
2017-04-24 09:37:47,835 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@d2291de
2017-04-24 09:37:47,836 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@d2291de
2017-04-24 09:37:47,852 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@1fc713c9
2017-04-24 09:37:47,856 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@1fc713c9
2017-04-24 09:37:47,862 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@6848a051
2017-04-24 09:37:47,865 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@6848a051
2017-04-24 09:37:47,869 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2b0b7e5a
2017-04-24 09:37:47,870 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2b0b7e5a
2017-04-24 09:37:47,874 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@68a78f3c
2017-04-24 09:37:47,877 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@68a78f3c
2017-04-24 09:37:47,901 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@692dba54
2017-04-24 09:37:47,903 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@692dba54
2017-04-24 09:37:47,908 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration date -> org.hibernate.type.DateType@724b939e
2017-04-24 09:37:47,911 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@724b939e
2017-04-24 09:37:47,918 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration time -> org.hibernate.type.TimeType@462abec3
2017-04-24 09:37:47,919 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@462abec3
2017-04-24 09:37:47,924 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration timestamp -> org.hibernate.type.TimestampType@3dc95b8b
2017-04-24 09:37:47,925 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3dc95b8b
2017-04-24 09:37:47,926 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3dc95b8b
2017-04-24 09:37:47,933 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@45f756e6
2017-04-24 09:37:47,936 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration calendar -> org.hibernate.type.CalendarType@656f62dc
2017-04-24 09:37:47,937 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@656f62dc
2017-04-24 09:37:47,938 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@656f62dc
2017-04-24 09:37:47,942 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4fdca00a
2017-04-24 09:37:47,949 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration locale -> org.hibernate.type.LocaleType@1a3e8e24
2017-04-24 09:37:47,951 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1a3e8e24
2017-04-24 09:37:47,956 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration currency -> org.hibernate.type.CurrencyType@50448409
2017-04-24 09:37:47,958 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@50448409
2017-04-24 09:37:47,961 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@30b975ad
2017-04-24 09:37:47,962 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@30b975ad
2017-04-24 09:37:47,969 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration class -> org.hibernate.type.ClassType@ea52184
2017-04-24 09:37:47,970 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@ea52184
2017-04-24 09:37:47,975 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4086d8fb
2017-04-24 09:37:47,982 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4086d8fb
2017-04-24 09:37:47,984 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@77c10a5f
2017-04-24 09:37:47,988 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration binary -> org.hibernate.type.BinaryType@355c94be
2017-04-24 09:37:47,989 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte[] -> org.hibernate.type.BinaryType@355c94be
2017-04-24 09:37:47,990 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [B -> org.hibernate.type.BinaryType@355c94be
2017-04-24 09:37:47,992 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1dd74143
2017-04-24 09:37:47,995 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1dd74143
2017-04-24 09:37:47,996 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1dd74143
2017-04-24 09:37:48,001 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration row_version -> org.hibernate.type.RowVersionType@66f28a1f
2017-04-24 09:37:48,003 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration image -> org.hibernate.type.ImageType@df921b1
2017-04-24 09:37:48,011 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration characters -> org.hibernate.type.CharArrayType@eb6ec6
2017-04-24 09:37:48,012 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration char[] -> org.hibernate.type.CharArrayType@eb6ec6
2017-04-24 09:37:48,014 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [C -> org.hibernate.type.CharArrayType@eb6ec6
2017-04-24 09:37:48,027 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3f018494
2017-04-24 09:37:48,036 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3f018494
2017-04-24 09:37:48,044 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3f018494
2017-04-24 09:37:48,056 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration text -> org.hibernate.type.TextType@7c52fc81
2017-04-24 09:37:48,066 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ntext -> org.hibernate.type.NTextType@75e27856
2017-04-24 09:37:48,112 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration blob -> org.hibernate.type.BlobType@7165d530
2017-04-24 09:37:48,123 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7165d530
2017-04-24 09:37:48,127 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1b2df3aa
2017-04-24 09:37:48,153 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration clob -> org.hibernate.type.ClobType@67531e3a
2017-04-24 09:37:48,157 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@67531e3a
2017-04-24 09:37:48,176 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration nclob -> org.hibernate.type.NClobType@27329d2a
2017-04-24 09:37:48,177 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@27329d2a
2017-04-24 09:37:48,179 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5afbd567
2017-04-24 09:37:48,183 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@326e0b8e
2017-04-24 09:37:48,186 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration serializable -> org.hibernate.type.SerializableType@608b1fd2
2017-04-24 09:37:48,201 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration object -> org.hibernate.type.ObjectType@71b639d0
2017-04-24 09:37:48,202 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@71b639d0
2017-04-24 09:37:48,210 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1ee27d73
2017-04-24 09:37:48,211 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5e5aafc6
2017-04-24 09:37:48,212 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@542f6803
2017-04-24 09:37:48,213 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5583098b
2017-04-24 09:37:48,215 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5807efad
2017-04-24 09:37:48,216 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@53a84ff4
2017-04-24 09:37:48,216 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7ce85af2
2017-04-24 09:37:48,217 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@316acbb5
2017-04-24 09:37:48,262 WARN  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:70) - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2017-04-24 09:37:48,266 DEBUG [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:154) - No driver class specified
2017-04-24 09:37:48,268 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:126) - HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:1433;database=strutsproject]
2017-04-24 09:37:48,269 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:132) - HHH10001001: Connection properties: {user=SA, password=SQLServ3r}
2017-04-24 09:37:48,285 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:140) - HHH10001003: Autocommit mode: false
2017-04-24 09:37:48,298 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:384) - Initializing Connection pool with 1 Connections
2017-04-24 09:37:48,300 INFO  [main] internal.PooledConnections (PooledConnections.java:41) - HHH000115: Hibernate connection pool size: 1 (min=1)
2017-04-24 09:39:32,409 INFO  [qtp2049837144-23] action.Login (Login.java:23) - VALIDATE admin admin
2017-04-24 09:53:22,492 DEBUG [main] internal.CoreLogging (CoreLogging.java:28) - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2017-04-24 09:53:22,527 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2017-04-24 09:53:22,534 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2017-04-24 09:53:22,545 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2017-04-24 09:53:22,943 INFO  [main] hibernate.Version (Version.java:45) - HHH000412: Hibernate Core {5.2.9.Final}
2017-04-24 09:53:22,948 INFO  [main] cfg.Environment (Environment.java:213) - HHH000206: hibernate.properties not found
2017-04-24 09:53:22,999 DEBUG [main] internal.JaxbCfgProcessor (JaxbCfgProcessor.java:116) - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2017-04-24 09:53:23,521 DEBUG [main] cfg.Configuration (Configuration.java:724) - Building session factory using internal StandardServiceRegistryBuilder
2017-04-24 09:53:23,538 DEBUG [main] spi.ServiceBinding (ServiceBinding.java:68) - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2017-04-24 09:53:23,541 DEBUG [main] cfg.Configuration (Configuration.java:652) - Building session factory using provided StandardServiceRegistry
2017-04-24 09:53:23,607 DEBUG [main] internal.RegionFactoryInitiator (RegionFactoryInitiator.java:75) - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2017-04-24 09:53:23,632 INFO  [main] java.JavaReflectionManager (JavaReflectionManager.java:66) - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2017-04-24 09:53:23,697 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@37d28f02
2017-04-24 09:53:23,702 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@37d28f02
2017-04-24 09:53:23,706 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@37d28f02
2017-04-24 09:53:23,712 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7bac686b
2017-04-24 09:53:23,718 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2121d1f9
2017-04-24 09:53:23,723 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration yes_no -> org.hibernate.type.YesNoType@462e1e64
2017-04-24 09:53:23,732 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@22c75c01
2017-04-24 09:53:23,737 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@22c75c01
2017-04-24 09:53:23,740 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@22c75c01
2017-04-24 09:53:23,753 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration character -> org.hibernate.type.CharacterType@2f0ed952
2017-04-24 09:53:23,766 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration char -> org.hibernate.type.CharacterType@2f0ed952
2017-04-24 09:53:23,771 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2f0ed952
2017-04-24 09:53:23,780 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@4832f03b
2017-04-24 09:53:23,788 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@4832f03b
2017-04-24 09:53:23,793 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4832f03b
2017-04-24 09:53:23,799 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration integer -> org.hibernate.type.IntegerType@5115f590
2017-04-24 09:53:23,803 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration int -> org.hibernate.type.IntegerType@5115f590
2017-04-24 09:53:23,807 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5115f590
2017-04-24 09:53:23,815 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@2ff7a73
2017-04-24 09:53:23,816 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@2ff7a73
2017-04-24 09:53:23,817 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2ff7a73
2017-04-24 09:53:23,827 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@63d5874f
2017-04-24 09:53:23,832 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@63d5874f
2017-04-24 09:53:23,835 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@63d5874f
2017-04-24 09:53:23,842 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@204abeff
2017-04-24 09:53:23,846 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@204abeff
2017-04-24 09:53:23,850 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@204abeff
2017-04-24 09:53:23,857 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1b6924cb
2017-04-24 09:53:23,861 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1b6924cb
2017-04-24 09:53:23,868 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6ed043d3
2017-04-24 09:53:23,871 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6ed043d3
2017-04-24 09:53:23,882 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration string -> org.hibernate.type.StringType@3d19d85
2017-04-24 09:53:23,886 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.String -> org.hibernate.type.StringType@3d19d85
2017-04-24 09:53:23,893 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@42aae04d
2017-04-24 09:53:23,898 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7426a448
2017-04-24 09:53:23,905 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration url -> org.hibernate.type.UrlType@1e3e1014
2017-04-24 09:53:23,908 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1e3e1014
2017-04-24 09:53:23,916 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Duration -> org.hibernate.type.DurationType@4ee25d80
2017-04-24 09:53:23,919 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4ee25d80
2017-04-24 09:53:23,982 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Instant -> org.hibernate.type.InstantType@7dffda8b
2017-04-24 09:53:23,987 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7dffda8b
2017-04-24 09:53:24,000 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@6ca8fcf3
2017-04-24 09:53:24,004 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@6ca8fcf3
2017-04-24 09:53:24,019 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4f327096
2017-04-24 09:53:24,023 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4f327096
2017-04-24 09:53:24,032 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@8cc8cdb
2017-04-24 09:53:24,039 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@8cc8cdb
2017-04-24 09:53:24,046 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@76b47204
2017-04-24 09:53:24,049 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@76b47204
2017-04-24 09:53:24,057 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@6848a051
2017-04-24 09:53:24,060 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@6848a051
2017-04-24 09:53:24,080 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6fbc1bb
2017-04-24 09:53:24,084 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6fbc1bb
2017-04-24 09:53:24,094 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration date -> org.hibernate.type.DateType@6e3ecf5c
2017-04-24 09:53:24,098 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6e3ecf5c
2017-04-24 09:53:24,105 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration time -> org.hibernate.type.TimeType@5f14761c
2017-04-24 09:53:24,108 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5f14761c
2017-04-24 09:53:24,114 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration timestamp -> org.hibernate.type.TimestampType@724b939e
2017-04-24 09:53:24,118 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@724b939e
2017-04-24 09:53:24,121 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@724b939e
2017-04-24 09:53:24,130 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@52b3bf03
2017-04-24 09:53:24,137 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration calendar -> org.hibernate.type.CalendarType@5626d18c
2017-04-24 09:53:24,143 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5626d18c
2017-04-24 09:53:24,146 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5626d18c
2017-04-24 09:53:24,151 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2d55e826
2017-04-24 09:53:24,154 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration locale -> org.hibernate.type.LocaleType@29b40b3
2017-04-24 09:53:24,160 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@29b40b3
2017-04-24 09:53:24,165 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration currency -> org.hibernate.type.CurrencyType@4fdca00a
2017-04-24 09:53:24,171 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4fdca00a
2017-04-24 09:53:24,176 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1a3e8e24
2017-04-24 09:53:24,181 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1a3e8e24
2017-04-24 09:53:24,188 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration class -> org.hibernate.type.ClassType@50448409
2017-04-24 09:53:24,193 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@50448409
2017-04-24 09:53:24,201 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7f9fc8bd
2017-04-24 09:53:24,206 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7f9fc8bd
2017-04-24 09:53:24,211 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3c854752
2017-04-24 09:53:24,217 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration binary -> org.hibernate.type.BinaryType@210d2a6c
2017-04-24 09:53:24,221 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte[] -> org.hibernate.type.BinaryType@210d2a6c
2017-04-24 09:53:24,224 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [B -> org.hibernate.type.BinaryType@210d2a6c
2017-04-24 09:53:24,230 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@77c10a5f
2017-04-24 09:53:24,235 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@77c10a5f
2017-04-24 09:53:24,239 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@77c10a5f
2017-04-24 09:53:24,245 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration row_version -> org.hibernate.type.RowVersionType@355c94be
2017-04-24 09:53:24,248 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration image -> org.hibernate.type.ImageType@1dd74143
2017-04-24 09:53:24,263 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration characters -> org.hibernate.type.CharArrayType@66f28a1f
2017-04-24 09:53:24,267 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration char[] -> org.hibernate.type.CharArrayType@66f28a1f
2017-04-24 09:53:24,270 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [C -> org.hibernate.type.CharArrayType@66f28a1f
2017-04-24 09:53:24,276 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@df921b1
2017-04-24 09:53:24,279 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@df921b1
2017-04-24 09:53:24,283 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@df921b1
2017-04-24 09:53:24,289 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration text -> org.hibernate.type.TextType@eb6ec6
2017-04-24 09:53:24,296 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ntext -> org.hibernate.type.NTextType@3f018494
2017-04-24 09:53:24,308 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration blob -> org.hibernate.type.BlobType@76a14c8d
2017-04-24 09:53:24,312 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@76a14c8d
2017-04-24 09:53:24,327 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@257ef9ed
2017-04-24 09:53:24,341 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration clob -> org.hibernate.type.ClobType@340d6d89
2017-04-24 09:53:24,344 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@340d6d89
2017-04-24 09:53:24,354 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration nclob -> org.hibernate.type.NClobType@30839e44
2017-04-24 09:53:24,358 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@30839e44
2017-04-24 09:53:24,363 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@45aca496
2017-04-24 09:53:24,367 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3d90eeb3
2017-04-24 09:53:24,374 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration serializable -> org.hibernate.type.SerializableType@5afbd567
2017-04-24 09:53:24,391 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration object -> org.hibernate.type.ObjectType@7c51782d
2017-04-24 09:53:24,395 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7c51782d
2017-04-24 09:53:24,403 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@20a7953c
2017-04-24 09:53:24,407 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@57c00115
2017-04-24 09:53:24,410 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@411a5965
2017-04-24 09:53:24,413 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4fe533ff
2017-04-24 09:53:24,418 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5377414a
2017-04-24 09:53:24,421 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4e83a98
2017-04-24 09:53:24,422 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@17aa8a11
2017-04-24 09:53:24,423 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@71b639d0
2017-04-24 09:53:24,461 WARN  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:70) - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2017-04-24 09:53:24,467 DEBUG [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:154) - No driver class specified
2017-04-24 09:53:24,471 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:126) - HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:1433;database=strutsproject]
2017-04-24 09:53:24,475 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:132) - HHH10001001: Connection properties: {user=SA, password=SQLServ3r}
2017-04-24 09:53:24,487 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:140) - HHH10001003: Autocommit mode: false
2017-04-24 09:53:24,498 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:384) - Initializing Connection pool with 1 Connections
2017-04-24 09:53:24,499 INFO  [main] internal.PooledConnections (PooledConnections.java:41) - HHH000115: Hibernate connection pool size: 1 (min=1)
2017-04-24 09:54:33,854 DEBUG [main] internal.CoreLogging (CoreLogging.java:28) - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2017-04-24 09:54:33,887 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2017-04-24 09:54:33,894 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2017-04-24 09:54:33,905 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2017-04-24 09:54:34,240 INFO  [main] hibernate.Version (Version.java:45) - HHH000412: Hibernate Core {5.2.9.Final}
2017-04-24 09:54:34,248 INFO  [main] cfg.Environment (Environment.java:213) - HHH000206: hibernate.properties not found
2017-04-24 09:54:34,298 DEBUG [main] internal.JaxbCfgProcessor (JaxbCfgProcessor.java:116) - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2017-04-24 09:54:34,734 DEBUG [main] cfg.Configuration (Configuration.java:724) - Building session factory using internal StandardServiceRegistryBuilder
2017-04-24 09:54:34,749 DEBUG [main] spi.ServiceBinding (ServiceBinding.java:68) - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2017-04-24 09:54:34,750 DEBUG [main] cfg.Configuration (Configuration.java:652) - Building session factory using provided StandardServiceRegistry
2017-04-24 09:54:34,793 DEBUG [main] internal.RegionFactoryInitiator (RegionFactoryInitiator.java:75) - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2017-04-24 09:54:34,813 INFO  [main] java.JavaReflectionManager (JavaReflectionManager.java:66) - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2017-04-24 09:54:34,867 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@107bfcb2
2017-04-24 09:54:34,869 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@107bfcb2
2017-04-24 09:54:34,869 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@107bfcb2
2017-04-24 09:54:34,872 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@58b91d57
2017-04-24 09:54:34,876 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@69afa141
2017-04-24 09:54:34,878 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration yes_no -> org.hibernate.type.YesNoType@52d6d273
2017-04-24 09:54:34,882 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@5b275811
2017-04-24 09:54:34,883 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@5b275811
2017-04-24 09:54:34,884 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5b275811
2017-04-24 09:54:34,887 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration character -> org.hibernate.type.CharacterType@559cedee
2017-04-24 09:54:34,888 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration char -> org.hibernate.type.CharacterType@559cedee
2017-04-24 09:54:34,889 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@559cedee
2017-04-24 09:54:34,893 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@37baddde
2017-04-24 09:54:34,895 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@37baddde
2017-04-24 09:54:34,896 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@37baddde
2017-04-24 09:54:34,899 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration integer -> org.hibernate.type.IntegerType@e11ecfa
2017-04-24 09:54:34,900 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration int -> org.hibernate.type.IntegerType@e11ecfa
2017-04-24 09:54:34,901 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@e11ecfa
2017-04-24 09:54:34,905 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@43acd79e
2017-04-24 09:54:34,906 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@43acd79e
2017-04-24 09:54:34,907 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@43acd79e
2017-04-24 09:54:34,911 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@23a918c7
2017-04-24 09:54:34,912 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@23a918c7
2017-04-24 09:54:34,912 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@23a918c7
2017-04-24 09:54:34,916 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@2f4ba1ae
2017-04-24 09:54:34,918 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@2f4ba1ae
2017-04-24 09:54:34,919 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2f4ba1ae
2017-04-24 09:54:34,925 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3ebe4ccc
2017-04-24 09:54:34,927 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3ebe4ccc
2017-04-24 09:54:34,930 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@44af588b
2017-04-24 09:54:34,930 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@44af588b
2017-04-24 09:54:34,935 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration string -> org.hibernate.type.StringType@590adb41
2017-04-24 09:54:34,936 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.String -> org.hibernate.type.StringType@590adb41
2017-04-24 09:54:34,941 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4d3c6593
2017-04-24 09:54:34,947 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6cbe7d4d
2017-04-24 09:54:34,953 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration url -> org.hibernate.type.UrlType@36aa52d2
2017-04-24 09:54:34,957 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@36aa52d2
2017-04-24 09:54:34,964 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Duration -> org.hibernate.type.DurationType@332bcab0
2017-04-24 09:54:34,968 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@332bcab0
2017-04-24 09:54:35,022 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Instant -> org.hibernate.type.InstantType@2b5c4f17
2017-04-24 09:54:35,028 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2b5c4f17
2017-04-24 09:54:35,033 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@41ad373
2017-04-24 09:54:35,034 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@41ad373
2017-04-24 09:54:35,039 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@51c8f62c
2017-04-24 09:54:35,040 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@51c8f62c
2017-04-24 09:54:35,045 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7301eebe
2017-04-24 09:54:35,047 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7301eebe
2017-04-24 09:54:35,060 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@436bd4df
2017-04-24 09:54:35,061 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@436bd4df
2017-04-24 09:54:35,067 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@67f77f6e
2017-04-24 09:54:35,068 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@67f77f6e
2017-04-24 09:54:35,080 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5f96f6a2
2017-04-24 09:54:35,081 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5f96f6a2
2017-04-24 09:54:35,088 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration date -> org.hibernate.type.DateType@71f1cc02
2017-04-24 09:54:35,095 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@71f1cc02
2017-04-24 09:54:35,101 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration time -> org.hibernate.type.TimeType@34332b8d
2017-04-24 09:54:35,106 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@34332b8d
2017-04-24 09:54:35,112 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration timestamp -> org.hibernate.type.TimestampType@7cca01a8
2017-04-24 09:54:35,115 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7cca01a8
2017-04-24 09:54:35,119 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7cca01a8
2017-04-24 09:54:35,125 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7a4d582c
2017-04-24 09:54:35,129 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration calendar -> org.hibernate.type.CalendarType@4d1ff6b1
2017-04-24 09:54:35,130 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4d1ff6b1
2017-04-24 09:54:35,131 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4d1ff6b1
2017-04-24 09:54:35,133 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3003827c
2017-04-24 09:54:35,136 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration locale -> org.hibernate.type.LocaleType@1115433e
2017-04-24 09:54:35,137 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1115433e
2017-04-24 09:54:35,140 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration currency -> org.hibernate.type.CurrencyType@119b0892
2017-04-24 09:54:35,141 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@119b0892
2017-04-24 09:54:35,144 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3bc4ef12
2017-04-24 09:54:35,145 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3bc4ef12
2017-04-24 09:54:35,148 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration class -> org.hibernate.type.ClassType@43bdaa1b
2017-04-24 09:54:35,149 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@43bdaa1b
2017-04-24 09:54:35,152 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3ddeaa5f
2017-04-24 09:54:35,153 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3ddeaa5f
2017-04-24 09:54:35,155 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6949e948
2017-04-24 09:54:35,159 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration binary -> org.hibernate.type.BinaryType@2e3572e8
2017-04-24 09:54:35,160 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte[] -> org.hibernate.type.BinaryType@2e3572e8
2017-04-24 09:54:35,161 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [B -> org.hibernate.type.BinaryType@2e3572e8
2017-04-24 09:54:35,164 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@633fd91
2017-04-24 09:54:35,165 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@633fd91
2017-04-24 09:54:35,166 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@633fd91
2017-04-24 09:54:35,169 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration row_version -> org.hibernate.type.RowVersionType@44d64d4e
2017-04-24 09:54:35,172 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration image -> org.hibernate.type.ImageType@60d6fdd4
2017-04-24 09:54:35,175 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration characters -> org.hibernate.type.CharArrayType@619f2afc
2017-04-24 09:54:35,176 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration char[] -> org.hibernate.type.CharArrayType@619f2afc
2017-04-24 09:54:35,176 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [C -> org.hibernate.type.CharArrayType@619f2afc
2017-04-24 09:54:35,179 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7d32e714
2017-04-24 09:54:35,180 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7d32e714
2017-04-24 09:54:35,181 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7d32e714
2017-04-24 09:54:35,183 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration text -> org.hibernate.type.TextType@2935fd2c
2017-04-24 09:54:35,186 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ntext -> org.hibernate.type.NTextType@62b790a5
2017-04-24 09:54:35,195 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration blob -> org.hibernate.type.BlobType@59c70ceb
2017-04-24 09:54:35,196 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@59c70ceb
2017-04-24 09:54:35,198 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@361abd01
2017-04-24 09:54:35,206 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration clob -> org.hibernate.type.ClobType@41da3aee
2017-04-24 09:54:35,207 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@41da3aee
2017-04-24 09:54:35,214 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration nclob -> org.hibernate.type.NClobType@697173d9
2017-04-24 09:54:35,215 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@697173d9
2017-04-24 09:54:35,217 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1db87583
2017-04-24 09:54:35,219 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@27329d2a
2017-04-24 09:54:35,223 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration serializable -> org.hibernate.type.SerializableType@36baa049
2017-04-24 09:54:35,230 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration object -> org.hibernate.type.ObjectType@57c00115
2017-04-24 09:54:35,231 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@57c00115
2017-04-24 09:54:35,233 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5377414a
2017-04-24 09:54:35,234 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4e83a98
2017-04-24 09:54:35,235 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@17aa8a11
2017-04-24 09:54:35,235 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@71b639d0
2017-04-24 09:54:35,236 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@18a25bbd
2017-04-24 09:54:35,236 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5d5b9ecb
2017-04-24 09:54:35,237 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1ee27d73
2017-04-24 09:54:35,237 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5e5aafc6
2017-04-24 09:54:35,267 WARN  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:70) - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2017-04-24 09:54:35,270 DEBUG [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:154) - No driver class specified
2017-04-24 09:54:35,271 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:126) - HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:1433;database=strutsproject]
2017-04-24 09:54:35,273 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:132) - HHH10001001: Connection properties: {user=root, password=}
2017-04-24 09:54:35,275 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:140) - HHH10001003: Autocommit mode: false
2017-04-24 09:54:35,282 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:384) - Initializing Connection pool with 1 Connections
2017-04-24 09:54:35,283 INFO  [main] internal.PooledConnections (PooledConnections.java:41) - HHH000115: Hibernate connection pool size: 1 (min=1)
2017-04-24 09:55:56,541 DEBUG [main] internal.CoreLogging (CoreLogging.java:28) - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2017-04-24 09:55:56,574 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2017-04-24 09:55:56,581 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2017-04-24 09:55:56,592 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2017-04-24 09:55:56,983 INFO  [main] hibernate.Version (Version.java:45) - HHH000412: Hibernate Core {5.2.9.Final}
2017-04-24 09:55:56,989 INFO  [main] cfg.Environment (Environment.java:213) - HHH000206: hibernate.properties not found
2017-04-24 09:55:57,044 DEBUG [main] internal.JaxbCfgProcessor (JaxbCfgProcessor.java:116) - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2017-04-24 09:55:57,443 DEBUG [main] cfg.Configuration (Configuration.java:724) - Building session factory using internal StandardServiceRegistryBuilder
2017-04-24 09:55:57,457 DEBUG [main] spi.ServiceBinding (ServiceBinding.java:68) - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2017-04-24 09:55:57,458 DEBUG [main] cfg.Configuration (Configuration.java:652) - Building session factory using provided StandardServiceRegistry
2017-04-24 09:55:57,501 DEBUG [main] internal.RegionFactoryInitiator (RegionFactoryInitiator.java:75) - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2017-04-24 09:55:57,520 INFO  [main] java.JavaReflectionManager (JavaReflectionManager.java:66) - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2017-04-24 09:55:57,574 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@107bfcb2
2017-04-24 09:55:57,576 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@107bfcb2
2017-04-24 09:55:57,577 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@107bfcb2
2017-04-24 09:55:57,579 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@58b91d57
2017-04-24 09:55:57,582 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@69afa141
2017-04-24 09:55:57,585 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration yes_no -> org.hibernate.type.YesNoType@52d6d273
2017-04-24 09:55:57,589 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@5b275811
2017-04-24 09:55:57,590 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@5b275811
2017-04-24 09:55:57,591 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5b275811
2017-04-24 09:55:57,594 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration character -> org.hibernate.type.CharacterType@559cedee
2017-04-24 09:55:57,595 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration char -> org.hibernate.type.CharacterType@559cedee
2017-04-24 09:55:57,595 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@559cedee
2017-04-24 09:55:57,600 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@37baddde
2017-04-24 09:55:57,601 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@37baddde
2017-04-24 09:55:57,602 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@37baddde
2017-04-24 09:55:57,605 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration integer -> org.hibernate.type.IntegerType@e11ecfa
2017-04-24 09:55:57,606 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration int -> org.hibernate.type.IntegerType@e11ecfa
2017-04-24 09:55:57,606 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@e11ecfa
2017-04-24 09:55:57,610 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@43acd79e
2017-04-24 09:55:57,611 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@43acd79e
2017-04-24 09:55:57,612 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@43acd79e
2017-04-24 09:55:57,615 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@23a918c7
2017-04-24 09:55:57,616 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@23a918c7
2017-04-24 09:55:57,617 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@23a918c7
2017-04-24 09:55:57,620 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@2f4ba1ae
2017-04-24 09:55:57,621 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@2f4ba1ae
2017-04-24 09:55:57,622 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2f4ba1ae
2017-04-24 09:55:57,626 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3ebe4ccc
2017-04-24 09:55:57,628 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3ebe4ccc
2017-04-24 09:55:57,634 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@44af588b
2017-04-24 09:55:57,635 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@44af588b
2017-04-24 09:55:57,639 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration string -> org.hibernate.type.StringType@590adb41
2017-04-24 09:55:57,640 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.String -> org.hibernate.type.StringType@590adb41
2017-04-24 09:55:57,643 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4d3c6593
2017-04-24 09:55:57,646 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6cbe7d4d
2017-04-24 09:55:57,649 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration url -> org.hibernate.type.UrlType@36aa52d2
2017-04-24 09:55:57,650 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@36aa52d2
2017-04-24 09:55:57,654 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Duration -> org.hibernate.type.DurationType@332bcab0
2017-04-24 09:55:57,655 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@332bcab0
2017-04-24 09:55:57,696 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Instant -> org.hibernate.type.InstantType@2b5c4f17
2017-04-24 09:55:57,697 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2b5c4f17
2017-04-24 09:55:57,701 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@41ad373
2017-04-24 09:55:57,702 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@41ad373
2017-04-24 09:55:57,710 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@51c8f62c
2017-04-24 09:55:57,713 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@51c8f62c
2017-04-24 09:55:57,721 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7301eebe
2017-04-24 09:55:57,724 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7301eebe
2017-04-24 09:55:57,731 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@436bd4df
2017-04-24 09:55:57,733 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@436bd4df
2017-04-24 09:55:57,740 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@67f77f6e
2017-04-24 09:55:57,741 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@67f77f6e
2017-04-24 09:55:57,760 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5f96f6a2
2017-04-24 09:55:57,761 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5f96f6a2
2017-04-24 09:55:57,767 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration date -> org.hibernate.type.DateType@71f1cc02
2017-04-24 09:55:57,769 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@71f1cc02
2017-04-24 09:55:57,774 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration time -> org.hibernate.type.TimeType@34332b8d
2017-04-24 09:55:57,775 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@34332b8d
2017-04-24 09:55:57,779 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration timestamp -> org.hibernate.type.TimestampType@7cca01a8
2017-04-24 09:55:57,780 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7cca01a8
2017-04-24 09:55:57,780 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7cca01a8
2017-04-24 09:55:57,786 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7a4d582c
2017-04-24 09:55:57,794 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration calendar -> org.hibernate.type.CalendarType@4d1ff6b1
2017-04-24 09:55:57,795 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4d1ff6b1
2017-04-24 09:55:57,797 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4d1ff6b1
2017-04-24 09:55:57,803 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3003827c
2017-04-24 09:55:57,807 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration locale -> org.hibernate.type.LocaleType@1115433e
2017-04-24 09:55:57,808 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1115433e
2017-04-24 09:55:57,812 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration currency -> org.hibernate.type.CurrencyType@119b0892
2017-04-24 09:55:57,816 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@119b0892
2017-04-24 09:55:57,819 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3bc4ef12
2017-04-24 09:55:57,820 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3bc4ef12
2017-04-24 09:55:57,824 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration class -> org.hibernate.type.ClassType@43bdaa1b
2017-04-24 09:55:57,825 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@43bdaa1b
2017-04-24 09:55:57,829 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3ddeaa5f
2017-04-24 09:55:57,830 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3ddeaa5f
2017-04-24 09:55:57,832 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6949e948
2017-04-24 09:55:57,836 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration binary -> org.hibernate.type.BinaryType@2e3572e8
2017-04-24 09:55:57,837 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte[] -> org.hibernate.type.BinaryType@2e3572e8
2017-04-24 09:55:57,838 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [B -> org.hibernate.type.BinaryType@2e3572e8
2017-04-24 09:55:57,842 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@633fd91
2017-04-24 09:55:57,843 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@633fd91
2017-04-24 09:55:57,844 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@633fd91
2017-04-24 09:55:57,847 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration row_version -> org.hibernate.type.RowVersionType@44d64d4e
2017-04-24 09:55:57,851 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration image -> org.hibernate.type.ImageType@60d6fdd4
2017-04-24 09:55:57,854 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration characters -> org.hibernate.type.CharArrayType@619f2afc
2017-04-24 09:55:57,855 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration char[] -> org.hibernate.type.CharArrayType@619f2afc
2017-04-24 09:55:57,856 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [C -> org.hibernate.type.CharArrayType@619f2afc
2017-04-24 09:55:57,860 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7d32e714
2017-04-24 09:55:57,860 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7d32e714
2017-04-24 09:55:57,861 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7d32e714
2017-04-24 09:55:57,864 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration text -> org.hibernate.type.TextType@2935fd2c
2017-04-24 09:55:57,867 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ntext -> org.hibernate.type.NTextType@62b790a5
2017-04-24 09:55:57,878 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration blob -> org.hibernate.type.BlobType@59c70ceb
2017-04-24 09:55:57,879 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@59c70ceb
2017-04-24 09:55:57,881 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@361abd01
2017-04-24 09:55:57,891 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration clob -> org.hibernate.type.ClobType@41da3aee
2017-04-24 09:55:57,892 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@41da3aee
2017-04-24 09:55:57,900 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration nclob -> org.hibernate.type.NClobType@697173d9
2017-04-24 09:55:57,901 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@697173d9
2017-04-24 09:55:57,903 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1db87583
2017-04-24 09:55:57,905 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@27329d2a
2017-04-24 09:55:57,909 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration serializable -> org.hibernate.type.SerializableType@36baa049
2017-04-24 09:55:57,917 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration object -> org.hibernate.type.ObjectType@57c00115
2017-04-24 09:55:57,918 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@57c00115
2017-04-24 09:55:57,920 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5377414a
2017-04-24 09:55:57,923 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4e83a98
2017-04-24 09:55:57,924 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@17aa8a11
2017-04-24 09:55:57,925 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@71b639d0
2017-04-24 09:55:57,926 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@18a25bbd
2017-04-24 09:55:57,926 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5d5b9ecb
2017-04-24 09:55:57,927 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1ee27d73
2017-04-24 09:55:57,927 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5e5aafc6
2017-04-24 09:55:57,953 WARN  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:70) - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2017-04-24 09:55:57,956 DEBUG [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:154) - No driver class specified
2017-04-24 09:55:57,957 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:126) - HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306;database=strutsproject]
2017-04-24 09:55:57,958 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:132) - HHH10001001: Connection properties: {user=root, password=}
2017-04-24 09:55:57,960 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:140) - HHH10001003: Autocommit mode: false
2017-04-24 09:55:57,979 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:384) - Initializing Connection pool with 1 Connections
2017-04-24 09:55:57,981 INFO  [main] internal.PooledConnections (PooledConnections.java:41) - HHH000115: Hibernate connection pool size: 1 (min=1)
2017-04-24 09:57:41,295 DEBUG [main] internal.CoreLogging (CoreLogging.java:28) - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2017-04-24 09:57:41,329 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2017-04-24 09:57:41,337 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2017-04-24 09:57:41,348 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2017-04-24 09:57:41,681 INFO  [main] hibernate.Version (Version.java:45) - HHH000412: Hibernate Core {5.2.9.Final}
2017-04-24 09:57:41,690 INFO  [main] cfg.Environment (Environment.java:213) - HHH000206: hibernate.properties not found
2017-04-24 09:57:41,742 DEBUG [main] internal.JaxbCfgProcessor (JaxbCfgProcessor.java:116) - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2017-04-24 09:57:42,183 DEBUG [main] cfg.Configuration (Configuration.java:724) - Building session factory using internal StandardServiceRegistryBuilder
2017-04-24 09:57:42,202 DEBUG [main] spi.ServiceBinding (ServiceBinding.java:68) - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2017-04-24 09:57:42,205 DEBUG [main] cfg.Configuration (Configuration.java:652) - Building session factory using provided StandardServiceRegistry
2017-04-24 09:57:42,256 DEBUG [main] internal.RegionFactoryInitiator (RegionFactoryInitiator.java:75) - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2017-04-24 09:57:42,277 INFO  [main] java.JavaReflectionManager (JavaReflectionManager.java:66) - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2017-04-24 09:57:42,334 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@334ebcaa
2017-04-24 09:57:42,338 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@334ebcaa
2017-04-24 09:57:42,343 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@334ebcaa
2017-04-24 09:57:42,348 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6c1cfa53
2017-04-24 09:57:42,352 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@37d28f02
2017-04-24 09:57:42,357 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration yes_no -> org.hibernate.type.YesNoType@33f2df51
2017-04-24 09:57:42,364 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@61a91c9b
2017-04-24 09:57:42,367 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@61a91c9b
2017-04-24 09:57:42,371 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@61a91c9b
2017-04-24 09:57:42,377 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration character -> org.hibernate.type.CharacterType@462e1e64
2017-04-24 09:57:42,381 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration char -> org.hibernate.type.CharacterType@462e1e64
2017-04-24 09:57:42,384 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@462e1e64
2017-04-24 09:57:42,392 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@22c75c01
2017-04-24 09:57:42,393 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@22c75c01
2017-04-24 09:57:42,394 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@22c75c01
2017-04-24 09:57:42,402 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration integer -> org.hibernate.type.IntegerType@2f0ed952
2017-04-24 09:57:42,408 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration int -> org.hibernate.type.IntegerType@2f0ed952
2017-04-24 09:57:42,411 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2f0ed952
2017-04-24 09:57:42,418 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@4832f03b
2017-04-24 09:57:42,422 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@4832f03b
2017-04-24 09:57:42,425 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4832f03b
2017-04-24 09:57:42,433 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@e11ecfa
2017-04-24 09:57:42,437 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@e11ecfa
2017-04-24 09:57:42,444 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@e11ecfa
2017-04-24 09:57:42,452 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@43acd79e
2017-04-24 09:57:42,455 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@43acd79e
2017-04-24 09:57:42,459 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@43acd79e
2017-04-24 09:57:42,463 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@23a918c7
2017-04-24 09:57:42,464 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@23a918c7
2017-04-24 09:57:42,468 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1f67761b
2017-04-24 09:57:42,469 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1f67761b
2017-04-24 09:57:42,472 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration string -> org.hibernate.type.StringType@77ab22be
2017-04-24 09:57:42,473 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.String -> org.hibernate.type.StringType@77ab22be
2017-04-24 09:57:42,476 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6ca372ef
2017-04-24 09:57:42,479 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@280d4882
2017-04-24 09:57:42,482 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration url -> org.hibernate.type.UrlType@56b859a6
2017-04-24 09:57:42,483 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@56b859a6
2017-04-24 09:57:42,487 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Duration -> org.hibernate.type.DurationType@58015e56
2017-04-24 09:57:42,488 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@58015e56
2017-04-24 09:57:42,563 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Instant -> org.hibernate.type.InstantType@2db4ad1
2017-04-24 09:57:42,570 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2db4ad1
2017-04-24 09:57:42,586 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@6fc1020a
2017-04-24 09:57:42,589 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@6fc1020a
2017-04-24 09:57:42,607 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7dffda8b
2017-04-24 09:57:42,608 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7dffda8b
2017-04-24 09:57:42,617 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@66933239
2017-04-24 09:57:42,621 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@66933239
2017-04-24 09:57:42,625 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4f327096
2017-04-24 09:57:42,626 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4f327096
2017-04-24 09:57:42,630 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@41a374be
2017-04-24 09:57:42,632 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@41a374be
2017-04-24 09:57:42,644 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7be1ce6a
2017-04-24 09:57:42,645 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7be1ce6a
2017-04-24 09:57:42,649 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration date -> org.hibernate.type.DateType@2ddb3ae8
2017-04-24 09:57:42,651 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2ddb3ae8
2017-04-24 09:57:42,656 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration time -> org.hibernate.type.TimeType@6fbc1bb
2017-04-24 09:57:42,657 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6fbc1bb
2017-04-24 09:57:42,661 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration timestamp -> org.hibernate.type.TimestampType@48df4071
2017-04-24 09:57:42,662 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@48df4071
2017-04-24 09:57:42,663 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@48df4071
2017-04-24 09:57:42,669 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@67507df
2017-04-24 09:57:42,676 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration calendar -> org.hibernate.type.CalendarType@33feb805
2017-04-24 09:57:42,677 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@33feb805
2017-04-24 09:57:42,678 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@33feb805
2017-04-24 09:57:42,680 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@34332b8d
2017-04-24 09:57:42,685 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration locale -> org.hibernate.type.LocaleType@7cca01a8
2017-04-24 09:57:42,686 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7cca01a8
2017-04-24 09:57:42,689 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration currency -> org.hibernate.type.CurrencyType@45e9b12d
2017-04-24 09:57:42,690 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@45e9b12d
2017-04-24 09:57:42,694 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@329548d0
2017-04-24 09:57:42,695 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@329548d0
2017-04-24 09:57:42,698 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration class -> org.hibernate.type.ClassType@49d30c6f
2017-04-24 09:57:42,699 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@49d30c6f
2017-04-24 09:57:42,703 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1c7350b0
2017-04-24 09:57:42,704 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1c7350b0
2017-04-24 09:57:42,707 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@50448409
2017-04-24 09:57:42,712 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration binary -> org.hibernate.type.BinaryType@30b975ad
2017-04-24 09:57:42,714 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte[] -> org.hibernate.type.BinaryType@30b975ad
2017-04-24 09:57:42,715 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [B -> org.hibernate.type.BinaryType@30b975ad
2017-04-24 09:57:42,719 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@ea52184
2017-04-24 09:57:42,721 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@ea52184
2017-04-24 09:57:42,722 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@ea52184
2017-04-24 09:57:42,725 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration row_version -> org.hibernate.type.RowVersionType@7f608e21
2017-04-24 09:57:42,728 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration image -> org.hibernate.type.ImageType@66236a0a
2017-04-24 09:57:42,731 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration characters -> org.hibernate.type.CharArrayType@795f8317
2017-04-24 09:57:42,732 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration char[] -> org.hibernate.type.CharArrayType@795f8317
2017-04-24 09:57:42,733 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [C -> org.hibernate.type.CharArrayType@795f8317
2017-04-24 09:57:42,737 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@157ec23b
2017-04-24 09:57:42,738 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@157ec23b
2017-04-24 09:57:42,738 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@157ec23b
2017-04-24 09:57:42,743 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration text -> org.hibernate.type.TextType@47ac613b
2017-04-24 09:57:42,745 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ntext -> org.hibernate.type.NTextType@134ff8f8
2017-04-24 09:57:42,755 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration blob -> org.hibernate.type.BlobType@1f3b992
2017-04-24 09:57:42,756 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1f3b992
2017-04-24 09:57:42,760 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7beae796
2017-04-24 09:57:42,772 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration clob -> org.hibernate.type.ClobType@2eed37f4
2017-04-24 09:57:42,775 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2eed37f4
2017-04-24 09:57:42,788 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration nclob -> org.hibernate.type.NClobType@13dbed9e
2017-04-24 09:57:42,791 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@13dbed9e
2017-04-24 09:57:42,796 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1d50a7ca
2017-04-24 09:57:42,801 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3003e580
2017-04-24 09:57:42,811 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration serializable -> org.hibernate.type.SerializableType@5f174dd2
2017-04-24 09:57:42,826 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration object -> org.hibernate.type.ObjectType@326e0b8e
2017-04-24 09:57:42,827 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@326e0b8e
2017-04-24 09:57:42,829 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@34585ac9
2017-04-24 09:57:42,831 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@76a805b7
2017-04-24 09:57:42,832 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@15f35bc3
2017-04-24 09:57:42,832 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@167381c7
2017-04-24 09:57:42,833 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@608b1fd2
2017-04-24 09:57:42,834 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@56382bc9
2017-04-24 09:57:42,835 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@591a4f8e
2017-04-24 09:57:42,836 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@53ed80d3
2017-04-24 09:57:42,866 WARN  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:70) - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2017-04-24 09:57:42,868 DEBUG [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:154) - No driver class specified
2017-04-24 09:57:42,870 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:126) - HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306;database=strutsproject]
2017-04-24 09:57:42,872 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:132) - HHH10001001: Connection properties: {user=root, password=}
2017-04-24 09:57:42,880 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:140) - HHH10001003: Autocommit mode: false
2017-04-24 09:57:42,890 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:384) - Initializing Connection pool with 1 Connections
2017-04-24 09:57:42,892 INFO  [main] internal.PooledConnections (PooledConnections.java:41) - HHH000115: Hibernate connection pool size: 1 (min=1)
2017-04-24 09:58:46,107 INFO  [qtp2096194236-13] action.Login (Login.java:23) - VALIDATE admin admin
2017-04-24 10:07:22,572 DEBUG [main] internal.CoreLogging (CoreLogging.java:28) - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2017-04-24 10:07:22,605 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2017-04-24 10:07:22,609 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2017-04-24 10:07:22,617 DEBUG [main] internal.IntegratorServiceImpl (IntegratorServiceImpl.java:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2017-04-24 10:07:23,081 INFO  [main] hibernate.Version (Version.java:45) - HHH000412: Hibernate Core {5.2.9.Final}
2017-04-24 10:07:23,091 INFO  [main] cfg.Environment (Environment.java:213) - HHH000206: hibernate.properties not found
2017-04-24 10:07:23,139 DEBUG [main] internal.JaxbCfgProcessor (JaxbCfgProcessor.java:116) - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2017-04-24 10:07:23,571 DEBUG [main] cfg.Configuration (Configuration.java:724) - Building session factory using internal StandardServiceRegistryBuilder
2017-04-24 10:07:23,585 DEBUG [main] spi.ServiceBinding (ServiceBinding.java:68) - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2017-04-24 10:07:23,586 DEBUG [main] cfg.Configuration (Configuration.java:652) - Building session factory using provided StandardServiceRegistry
2017-04-24 10:07:23,626 DEBUG [main] internal.RegionFactoryInitiator (RegionFactoryInitiator.java:75) - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2017-04-24 10:07:23,644 INFO  [main] java.JavaReflectionManager (JavaReflectionManager.java:66) - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2017-04-24 10:07:23,695 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@696b4a95
2017-04-24 10:07:23,696 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration boolean -> org.hibernate.type.BooleanType@696b4a95
2017-04-24 10:07:23,697 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@696b4a95
2017-04-24 10:07:23,699 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6af91cc8
2017-04-24 10:07:23,702 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@107bfcb2
2017-04-24 10:07:23,704 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration yes_no -> org.hibernate.type.YesNoType@f9f3928
2017-04-24 10:07:23,708 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@1806bc4c
2017-04-24 10:07:23,710 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte -> org.hibernate.type.ByteType@1806bc4c
2017-04-24 10:07:23,710 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1806bc4c
2017-04-24 10:07:23,714 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration character -> org.hibernate.type.CharacterType@52d6d273
2017-04-24 10:07:23,715 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration char -> org.hibernate.type.CharacterType@52d6d273
2017-04-24 10:07:23,715 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@52d6d273
2017-04-24 10:07:23,719 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@5b275811
2017-04-24 10:07:23,720 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration short -> org.hibernate.type.ShortType@5b275811
2017-04-24 10:07:23,721 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5b275811
2017-04-24 10:07:23,724 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration integer -> org.hibernate.type.IntegerType@559cedee
2017-04-24 10:07:23,725 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration int -> org.hibernate.type.IntegerType@559cedee
2017-04-24 10:07:23,725 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@559cedee
2017-04-24 10:07:23,729 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@37baddde
2017-04-24 10:07:23,730 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration long -> org.hibernate.type.LongType@37baddde
2017-04-24 10:07:23,731 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@37baddde
2017-04-24 10:07:23,734 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@38830ea
2017-04-24 10:07:23,735 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration float -> org.hibernate.type.FloatType@38830ea
2017-04-24 10:07:23,736 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@38830ea
2017-04-24 10:07:23,739 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@6fbb4061
2017-04-24 10:07:23,740 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration double -> org.hibernate.type.DoubleType@6fbb4061
2017-04-24 10:07:23,741 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6fbb4061
2017-04-24 10:07:23,745 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4b4ee511
2017-04-24 10:07:23,746 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4b4ee511
2017-04-24 10:07:23,748 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3762c4fc
2017-04-24 10:07:23,749 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3762c4fc
2017-04-24 10:07:23,754 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration string -> org.hibernate.type.StringType@141d3d43
2017-04-24 10:07:23,757 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.String -> org.hibernate.type.StringType@141d3d43
2017-04-24 10:07:23,764 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6419a0e1
2017-04-24 10:07:23,770 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@68ed3f30
2017-04-24 10:07:23,777 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration url -> org.hibernate.type.UrlType@575e572f
2017-04-24 10:07:23,780 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@575e572f
2017-04-24 10:07:23,787 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Duration -> org.hibernate.type.DurationType@3456558
2017-04-24 10:07:23,788 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@3456558
2017-04-24 10:07:23,830 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Instant -> org.hibernate.type.InstantType@73ae0257
2017-04-24 10:07:23,834 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@73ae0257
2017-04-24 10:07:23,841 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@42a0501e
2017-04-24 10:07:23,844 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@42a0501e
2017-04-24 10:07:23,852 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@2b5c4f17
2017-04-24 10:07:23,855 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@2b5c4f17
2017-04-24 10:07:23,863 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@177c41d7
2017-04-24 10:07:23,866 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@177c41d7
2017-04-24 10:07:23,873 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@51c8f62c
2017-04-24 10:07:23,877 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@51c8f62c
2017-04-24 10:07:23,884 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@44fff386
2017-04-24 10:07:23,888 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@44fff386
2017-04-24 10:07:23,903 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@68a78f3c
2017-04-24 10:07:23,905 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@68a78f3c
2017-04-24 10:07:23,909 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration date -> org.hibernate.type.DateType@732f6050
2017-04-24 10:07:23,912 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@732f6050
2017-04-24 10:07:23,917 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration time -> org.hibernate.type.TimeType@5f96f6a2
2017-04-24 10:07:23,918 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5f96f6a2
2017-04-24 10:07:23,921 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration timestamp -> org.hibernate.type.TimestampType@341b13a8
2017-04-24 10:07:23,922 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@341b13a8
2017-04-24 10:07:23,923 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@341b13a8
2017-04-24 10:07:23,928 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5f14761c
2017-04-24 10:07:23,932 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration calendar -> org.hibernate.type.CalendarType@724b939e
2017-04-24 10:07:23,933 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@724b939e
2017-04-24 10:07:23,933 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@724b939e
2017-04-24 10:07:23,936 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@52b3bf03
2017-04-24 10:07:23,941 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration locale -> org.hibernate.type.LocaleType@5626d18c
2017-04-24 10:07:23,942 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5626d18c
2017-04-24 10:07:23,944 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration currency -> org.hibernate.type.CurrencyType@45f756e6
2017-04-24 10:07:23,945 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@45f756e6
2017-04-24 10:07:23,948 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@656f62dc
2017-04-24 10:07:23,949 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@656f62dc
2017-04-24 10:07:23,955 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration class -> org.hibernate.type.ClassType@5a8c93
2017-04-24 10:07:23,956 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5a8c93
2017-04-24 10:07:23,959 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5634a861
2017-04-24 10:07:23,961 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5634a861
2017-04-24 10:07:23,963 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@43bdaa1b
2017-04-24 10:07:23,966 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration binary -> org.hibernate.type.BinaryType@7f9fc8bd
2017-04-24 10:07:23,967 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration byte[] -> org.hibernate.type.BinaryType@7f9fc8bd
2017-04-24 10:07:23,968 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [B -> org.hibernate.type.BinaryType@7f9fc8bd
2017-04-24 10:07:23,971 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1a500561
2017-04-24 10:07:23,973 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1a500561
2017-04-24 10:07:23,975 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1a500561
2017-04-24 10:07:23,978 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration row_version -> org.hibernate.type.RowVersionType@4086d8fb
2017-04-24 10:07:23,980 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration image -> org.hibernate.type.ImageType@7c781c42
2017-04-24 10:07:23,983 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration characters -> org.hibernate.type.CharArrayType@c386958
2017-04-24 10:07:23,984 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration char[] -> org.hibernate.type.CharArrayType@c386958
2017-04-24 10:07:23,985 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [C -> org.hibernate.type.CharArrayType@c386958
2017-04-24 10:07:23,988 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3166f664
2017-04-24 10:07:23,989 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3166f664
2017-04-24 10:07:23,989 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3166f664
2017-04-24 10:07:23,995 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration text -> org.hibernate.type.TextType@44a085e5
2017-04-24 10:07:23,998 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration ntext -> org.hibernate.type.NTextType@2152ab30
2017-04-24 10:07:24,007 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration blob -> org.hibernate.type.BlobType@6749fe50
2017-04-24 10:07:24,008 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6749fe50
2017-04-24 10:07:24,012 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@ae73c80
2017-04-24 10:07:24,021 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration clob -> org.hibernate.type.ClobType@5562c2c9
2017-04-24 10:07:24,022 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5562c2c9
2017-04-24 10:07:24,031 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration nclob -> org.hibernate.type.NClobType@51ab1ee3
2017-04-24 10:07:24,032 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@51ab1ee3
2017-04-24 10:07:24,034 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@28757abd
2017-04-24 10:07:24,035 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@138aa3cc
2017-04-24 10:07:24,039 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration serializable -> org.hibernate.type.SerializableType@ceddaf8
2017-04-24 10:07:24,048 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration object -> org.hibernate.type.ObjectType@76a805b7
2017-04-24 10:07:24,049 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@76a805b7
2017-04-24 10:07:24,051 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@608b1fd2
2017-04-24 10:07:24,052 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@56382bc9
2017-04-24 10:07:24,052 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@591a4f8e
2017-04-24 10:07:24,053 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@53ed80d3
2017-04-24 10:07:24,053 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6ba060f3
2017-04-24 10:07:24,054 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7c51782d
2017-04-24 10:07:24,054 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@77bc2e16
2017-04-24 10:07:24,055 DEBUG [main] type.BasicTypeRegistry (BasicTypeRegistry.java:145) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@48e8c32a
2017-04-24 10:07:24,081 WARN  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:70) - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2017-04-24 10:07:24,083 DEBUG [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:154) - No driver class specified
2017-04-24 10:07:24,084 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:126) - HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306/strutsproject]
2017-04-24 10:07:24,086 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:132) - HHH10001001: Connection properties: {user=root, password=}
2017-04-24 10:07:24,088 INFO  [main] internal.DriverManagerConnectionProviderImpl (DriverManagerConnectionProviderImpl.java:140) - HHH10001003: Autocommit mode: false
2017-04-24 10:07:24,097 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:384) - Initializing Connection pool with 1 Connections
2017-04-24 10:07:24,101 INFO  [main] internal.PooledConnections (PooledConnections.java:41) - HHH000115: Hibernate connection pool size: 1 (min=1)
2017-04-24 10:07:24,867 DEBUG [main] internal.JdbcEnvironmentInitiator (JdbcEnvironmentInitiator.java:72) - Database ->
       name : MySQL
    version : 5.6.30-1
      major : 5
      minor : 6
2017-04-24 10:07:24,870 DEBUG [main] internal.JdbcEnvironmentInitiator (JdbcEnvironmentInitiator.java:83) - Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.9 ( Revision: ${svn.Revision} )
      major : 5
      minor : 1
2017-04-24 10:07:24,875 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:389) - JDBC version : 3.0
2017-04-24 10:07:24,907 INFO  [main] dialect.Dialect (Dialect.java:157) - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2017-04-24 10:07:25,006 DEBUG [main] spi.IdentifierHelperBuilder (IdentifierHelperBuilder.java:117) - JDBC driver metadata reported database stores quoted identifiers in more than one case
2017-04-24 10:07:25,014 DEBUG [main] spi.IdentifierHelperBuilder (IdentifierHelperBuilder.java:191) - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2017-04-24 10:07:25,043 INFO  [main] internal.LobCreatorBuilderImpl (LobCreatorBuilderImpl.java:98) - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2017-04-24 10:07:25,136 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2017-04-24 10:07:25,140 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2017-04-24 10:07:25,145 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2017-04-24 10:07:25,149 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2017-04-24 10:07:25,153 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2017-04-24 10:07:25,158 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2017-04-24 10:07:25,165 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2017-04-24 10:07:25,172 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2017-04-24 10:07:25,177 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2017-04-24 10:07:25,182 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2017-04-24 10:07:25,186 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2017-04-24 10:07:25,193 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2017-04-24 10:07:25,197 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2017-04-24 10:07:25,202 DEBUG [main] internal.DefaultIdentifierGeneratorFactory (DefaultIdentifierGeneratorFactory.java:81) - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2017-04-24 10:07:25,704 DEBUG [main] relational.Namespace (Namespace.java:47) - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2017-04-24 10:07:25,768 DEBUG [main] cfg.AnnotationBinder (AnnotationBinder.java:511) - Binding entity from annotated class: com.example.struts2.model.Users
2017-04-24 10:07:25,825 DEBUG [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2017-04-24 10:07:25,844 DEBUG [main] annotations.EntityBinder (EntityBinder.java:419) - Import with entity name users
2017-04-24 10:07:25,865 DEBUG [main] annotations.EntityBinder (EntityBinder.java:695) - Bind entity com.example.struts2.model.Users on table users
2017-04-24 10:07:25,943 DEBUG [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
2017-04-24 10:07:25,964 DEBUG [main] annotations.PropertyBinder (PropertyBinder.java:174) - MetadataSourceProcessor property id with lazy=false
2017-04-24 10:07:25,974 DEBUG [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.example.struts2.model.Users:id]
2017-04-24 10:07:25,981 DEBUG [main] annotations.SimpleValueBinder (SimpleValueBinder.java:411) - building SimpleValue for id
2017-04-24 10:07:25,991 DEBUG [main] annotations.PropertyBinder (PropertyBinder.java:265) - Building property id
2017-04-24 10:07:26,011 DEBUG [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2017-04-24 10:07:26,013 DEBUG [main] annotations.PropertyBinder (PropertyBinder.java:174) - MetadataSourceProcessor property password with lazy=false
2017-04-24 10:07:26,018 DEBUG [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.example.struts2.model.Users:password]
2017-04-24 10:07:26,019 DEBUG [main] annotations.SimpleValueBinder (SimpleValueBinder.java:411) - building SimpleValue for password
2017-04-24 10:07:26,020 DEBUG [main] annotations.PropertyBinder (PropertyBinder.java:265) - Building property password
2017-04-24 10:07:26,028 DEBUG [main] cfg.Ejb3Column (Ejb3Column.java:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=false}
2017-04-24 10:07:26,032 DEBUG [main] annotations.PropertyBinder (PropertyBinder.java:174) - MetadataSourceProcessor property username with lazy=false
2017-04-24 10:07:26,032 DEBUG [main] cfg.AbstractPropertyHolder (AbstractPropertyHolder.java:92) - Attempting to locate auto-apply AttributeConverter for property [com.example.struts2.model.Users:username]
2017-04-24 10:07:26,033 DEBUG [main] annotations.SimpleValueBinder (SimpleValueBinder.java:411) - building SimpleValue for username
2017-04-24 10:07:26,034 DEBUG [main] annotations.PropertyBinder (PropertyBinder.java:265) - Building property username
2017-04-24 10:07:26,039 DEBUG [main] annotations.SimpleValueBinder (SimpleValueBinder.java:456) - Starting fillSimpleValue for id
2017-04-24 10:07:26,040 DEBUG [main] annotations.SimpleValueBinder (SimpleValueBinder.java:456) - Starting fillSimpleValue for password
2017-04-24 10:07:26,041 DEBUG [main] annotations.SimpleValueBinder (SimpleValueBinder.java:456) - Starting fillSimpleValue for username
2017-04-24 10:07:26,044 DEBUG [main] mapping.PrimaryKey (PrimaryKey.java:35) - Forcing column [id] to be non-null as it is part of the primary key for table [users]
2017-04-24 10:07:26,139 DEBUG [main] internal.SessionFactoryImpl (SessionFactoryImpl.java:199) - Building session factory
2017-04-24 10:07:26,142 DEBUG [main] cfg.Settings (Settings.java:69) - SessionFactory name : null
2017-04-24 10:07:26,143 DEBUG [main] cfg.Settings (Settings.java:70) - Automatic flush during beforeCompletion(): enabled
2017-04-24 10:07:26,144 DEBUG [main] cfg.Settings (Settings.java:71) - Automatic session close at end of transaction: disabled
2017-04-24 10:07:26,145 DEBUG [main] cfg.Settings (Settings.java:73) - Statistics: disabled
2017-04-24 10:07:26,148 DEBUG [main] cfg.Settings (Settings.java:75) - Deleted entity synthetic identifier rollback: disabled
2017-04-24 10:07:26,149 DEBUG [main] cfg.Settings (Settings.java:76) - Default entity-mode: pojo
2017-04-24 10:07:26,149 DEBUG [main] cfg.Settings (Settings.java:77) - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2017-04-24 10:07:26,151 DEBUG [main] cfg.Settings (Settings.java:78) - Allow initialization of lazy state outside session : disabled
2017-04-24 10:07:26,152 DEBUG [main] cfg.Settings (Settings.java:80) - Using BatchFetchStyle : LEGACY
2017-04-24 10:07:26,152 DEBUG [main] cfg.Settings (Settings.java:81) - Default batch fetch size: -1
2017-04-24 10:07:26,153 DEBUG [main] cfg.Settings (Settings.java:82) - Maximum outer join fetch depth: 2
2017-04-24 10:07:26,153 DEBUG [main] cfg.Settings (Settings.java:83) - Default null ordering: NONE
2017-04-24 10:07:26,154 DEBUG [main] cfg.Settings (Settings.java:84) - Order SQL updates by primary key: disabled
2017-04-24 10:07:26,154 DEBUG [main] cfg.Settings (Settings.java:85) - Order SQL inserts for batching: disabled
2017-04-24 10:07:26,154 DEBUG [main] cfg.Settings (Settings.java:87) - multi-tenancy strategy : NONE
2017-04-24 10:07:26,156 DEBUG [main] cfg.Settings (Settings.java:89) - JTA Track by Thread: enabled
2017-04-24 10:07:26,157 DEBUG [main] cfg.Settings (Settings.java:91) - Query language substitutions: {}
2017-04-24 10:07:26,157 DEBUG [main] cfg.Settings (Settings.java:92) - JPA query language strict compliance: disabled
2017-04-24 10:07:26,158 DEBUG [main] cfg.Settings (Settings.java:93) - Named query checking : enabled
2017-04-24 10:07:26,158 DEBUG [main] cfg.Settings (Settings.java:95) - Second-level cache: enabled
2017-04-24 10:07:26,158 DEBUG [main] cfg.Settings (Settings.java:96) - Second-level query cache: disabled
2017-04-24 10:07:26,159 DEBUG [main] cfg.Settings (Settings.java:97) - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@22bf9122
2017-04-24 10:07:26,160 DEBUG [main] cfg.Settings (Settings.java:98) - Second-level cache region prefix: null
2017-04-24 10:07:26,160 DEBUG [main] cfg.Settings (Settings.java:99) - Optimize second-level cache for minimal puts: disabled
2017-04-24 10:07:26,160 DEBUG [main] cfg.Settings (Settings.java:100) - Structured second-level cache entries: disabled
2017-04-24 10:07:26,161 DEBUG [main] cfg.Settings (Settings.java:101) - Second-level cache direct-reference entries: disabled
2017-04-24 10:07:26,162 DEBUG [main] cfg.Settings (Settings.java:102) - Automatic eviction of collection cache: disabled
2017-04-24 10:07:26,163 DEBUG [main] cfg.Settings (Settings.java:104) - JDBC batch size: 15
2017-04-24 10:07:26,163 DEBUG [main] cfg.Settings (Settings.java:105) - JDBC batch updates for versioned data: enabled
2017-04-24 10:07:26,164 DEBUG [main] cfg.Settings (Settings.java:106) - Scrollable result sets: enabled
2017-04-24 10:07:26,164 DEBUG [main] cfg.Settings (Settings.java:107) - Wrap result sets: disabled
2017-04-24 10:07:26,165 DEBUG [main] cfg.Settings (Settings.java:108) - JDBC3 getGeneratedKeys(): enabled
2017-04-24 10:07:26,165 DEBUG [main] cfg.Settings (Settings.java:109) - JDBC result set fetch size: null
2017-04-24 10:07:26,168 DEBUG [main] cfg.Settings (Settings.java:110) - Connection release mode: AFTER_TRANSACTION
2017-04-24 10:07:26,171 DEBUG [main] cfg.Settings (Settings.java:111) - Generate SQL with comments: disabled
2017-04-24 10:07:26,330 DEBUG [main] internal.SessionFactoryImpl (SessionFactoryImpl.java:254) - Session factory constructed with filter configurations : {}
2017-04-24 10:07:26,331 DEBUG [main] internal.SessionFactoryImpl (SessionFactoryImpl.java:255) - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, java.vendor.url=http://java.oracle.com/, user.timezone=Asia/Jakarta, os.name=Linux, java.vm.specification.version=1.8, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, maven.home=/usr/share/maven, sun.cpu.endian=little, user.home=/root, user.language=en, java.specification.vendor=Oracle Corporation, java.home=/usr/lib/jvm/java-8-openjdk-amd64/jre, file.separator=/, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, sun.boot.class.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/classes, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_111-8u111-b14-3-b14, user.name=root, path.separator=:, securerandom.source=file:/dev/./urandom, hibernate.connection.username=root, os.version=4.8.0-kali2-amd64, java.endorsed.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/endorsed, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/strutsproject, file.encoding=UTF-8, guice.disable.misplaced.annotation.check=true, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=/tmp, java.version=1.8.0_111, user.dir=/root/Source/java/struts/struts-project, os.arch=amd64, maven.multiModuleProjectDirectory=/root/Source/java/struts/struts-project, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@4d705112, java.library.path=/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.111-b14, classworlds.conf=/usr/share/maven/bin/m2.conf, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.pool_size=1, java.ext.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
2017-04-24 10:07:26,358 DEBUG [main] spi.JaccIntegrator (JaccIntegrator.java:80) - Skipping JACC integration as it was not enabled
2017-04-24 10:07:26,377 DEBUG [main] internal.SessionFactoryImpl (SessionFactoryImpl.java:294) - Instantiated session factory
2017-04-24 10:07:26,486 DEBUG [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [com.example.struts2.model.Users] is safe
2017-04-24 10:07:26,487 DEBUG [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.struts2.model.Users
2017-04-24 10:07:26,522 DEBUG [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:55) - Not known whether passed class name [com.example.struts2.model.Users] is safe
2017-04-24 10:07:26,523 DEBUG [main] internal.ClassLoaderAccessImpl (ClassLoaderAccessImpl.java:57) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.struts2.model.Users
2017-04-24 10:07:26,671 DEBUG [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3598) - Static SQL for entity: com.example.struts2.model.Users
2017-04-24 10:07:26,672 DEBUG [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3603) -  Version select: select id from users where id =?
2017-04-24 10:07:26,673 DEBUG [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3606) -  Snapshot select: select users_.id, users_.password as password2_0_, users_.username as username3_0_ from users users_ where users_.id=?
2017-04-24 10:07:26,673 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Insert 0: insert into users (password, username, id) values (?, ?, ?)
2017-04-24 10:07:26,674 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Update 0: update users set password=?, username=? where id=?
2017-04-24 10:07:26,674 DEBUG [main] logging.DelegatingBasicLogger (DelegatingBasicLogger.java:394) -  Delete 0: delete from users where id=?
2017-04-24 10:07:26,675 DEBUG [main] entity.AbstractEntityPersister (AbstractEntityPersister.java:3614) -  Identity insert: insert into users (password, username) values (?, ?)
2017-04-24 10:07:26,724 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a21f43f]
2017-04-24 10:07:26,728 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 10:07:26,729 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 10:07:26,730 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 10:07:26,760 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 10:07:26,772 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 10:07:26,777 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [NONE]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-24 10:07:26,778 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4776e209]
2017-04-24 10:07:26,779 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 10:07:26,780 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 10:07:26,780 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 10:07:26,781 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 10:07:26,782 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 10:07:26,783 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [READ]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-24 10:07:26,784 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f536481]
2017-04-24 10:07:26,785 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 10:07:26,786 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 10:07:26,786 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 10:07:26,788 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 10:07:26,789 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 10:07:26,790 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [UPGRADE]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=? for update
2017-04-24 10:07:26,790 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22a260ff]
2017-04-24 10:07:26,792 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 10:07:26,792 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 10:07:26,793 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 10:07:26,794 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 10:07:26,795 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 10:07:26,796 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [UPGRADE_NOWAIT]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=? for update
2017-04-24 10:07:26,797 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50b734c4]
2017-04-24 10:07:26,798 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 10:07:26,799 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 10:07:26,799 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 10:07:26,800 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 10:07:26,801 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 10:07:26,802 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [UPGRADE_SKIPLOCKED]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=? for update
2017-04-24 10:07:26,803 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16d0e521]
2017-04-24 10:07:26,804 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 10:07:26,804 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 10:07:26,805 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 10:07:26,806 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 10:07:26,807 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 10:07:26,808 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [FORCE]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=? for update
2017-04-24 10:07:26,809 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ab4aa5e]
2017-04-24 10:07:26,809 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 10:07:26,810 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 10:07:26,811 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 10:07:26,812 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 10:07:26,813 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 10:07:26,814 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [PESSIMISTIC_READ]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=? lock in share mode
2017-04-24 10:07:26,814 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a7cb3a4]
2017-04-24 10:07:26,815 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 10:07:26,816 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 10:07:26,816 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 10:07:26,817 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 10:07:26,818 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 10:07:26,819 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [PESSIMISTIC_WRITE]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=? for update
2017-04-24 10:07:26,820 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33e0c716]
2017-04-24 10:07:26,821 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 10:07:26,822 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 10:07:26,823 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 10:07:26,824 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 10:07:26,825 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 10:07:26,826 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [PESSIMISTIC_FORCE_INCREMENT]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=? for update
2017-04-24 10:07:26,826 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6274f21c]
2017-04-24 10:07:26,827 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 10:07:26,828 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 10:07:26,829 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 10:07:26,830 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 10:07:26,831 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 10:07:26,832 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [OPTIMISTIC]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-24 10:07:26,833 DEBUG [main] spaces.QuerySpacesImpl (QuerySpacesImpl.java:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@237add]
2017-04-24 10:07:26,833 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : password
2017-04-24 10:07:26,834 DEBUG [main] spi.MetamodelGraphWalker (MetamodelGraphWalker.java:137) - Visiting attribute path : username
2017-04-24 10:07:26,835 DEBUG [main] internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150) - Building LoadPlan...
2017-04-24 10:07:26,836 DEBUG [main] internal.LoadQueryJoinAndFetchProcessor (LoadQueryJoinAndFetchProcessor.java:101) - processing queryspace <gen:0>
2017-04-24 10:07:26,837 DEBUG [main] spi.LoadPlanTreePrinter (LoadPlanTreePrinter.java:55) - LoadPlan(entity=com.example.struts2.model.Users)
    - Returns
       - EntityReturnImpl(entity=com.example.struts2.model.Users, querySpaceUid=<gen:0>, path=com.example.struts2.model.Users)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.struts2.model.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-04-24 10:07:26,838 DEBUG [main] plan.EntityLoader (EntityLoader.java:115) - Static select for entity com.example.struts2.model.Users [OPTIMISTIC_FORCE_INCREMENT]: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-24 10:07:26,876 DEBUG [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_MERGE on entity com.example.struts2.model.Users: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-24 10:07:26,878 DEBUG [main] entity.CascadeEntityLoader (CascadeEntityLoader.java:38) - Static select for action ACTION_REFRESH on entity com.example.struts2.model.Users: select users0_.id as id1_0_0_, users0_.password as password2_0_0_, users0_.username as username3_0_0_ from users users0_ where users0_.id=?
2017-04-24 10:07:26,936 DEBUG [main] spi.SchemaManagementToolCoordinator (SchemaManagementToolCoordinator.java:56) - No actions specified; doing nothing
2017-04-24 10:07:26,937 DEBUG [main] internal.JtaPlatformInitiator (JtaPlatformInitiator.java:42) - No JtaPlatform was specified, checking resolver
2017-04-24 10:07:26,938 DEBUG [main] internal.JtaPlatformResolverInitiator (JtaPlatformResolverInitiator.java:33) - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2017-04-24 10:07:26,954 DEBUG [main] internal.StandardJtaPlatformResolver (StandardJtaPlatformResolver.java:102) - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2017-04-24 10:07:26,977 DEBUG [main] spi.NamedQueryRepository (NamedQueryRepository.java:151) - Checking 0 named HQL queries
2017-04-24 10:07:26,978 DEBUG [main] spi.NamedQueryRepository (NamedQueryRepository.java:167) - Checking 0 named SQL queries
2017-04-24 10:07:26,991 DEBUG [main] internal.SessionFactoryRegistry (SessionFactoryRegistry.java:52) - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@268c030f
2017-04-24 10:07:27,000 DEBUG [main] internal.SessionFactoryRegistry (SessionFactoryRegistry.java:74) - Registering SessionFactory: 71df76fd-d3a5-47ec-b8f5-c3d3f3178914 (<unnamed>)
2017-04-24 10:07:27,004 DEBUG [main] internal.SessionFactoryRegistry (SessionFactoryRegistry.java:81) - Not binding SessionFactory to JNDI, no JNDI name configured
2017-04-24 10:07:49,580 INFO  [qtp350413251-11] action.Login (Login.java:23) - VALIDATE admin admin
2017-04-24 10:07:49,796 DEBUG [qtp350413251-11] internal.StatisticsInitiator (StatisticsInitiator.java:82) - Statistics initialized [enabled=false]
2017-04-24 10:07:49,830 DEBUG [qtp350413251-11] internal.TransactionImpl (TransactionImpl.java:55) - begin
2017-04-24 10:07:49,906 DEBUG [qtp350413251-11] spi.ActionQueue (ActionQueue.java:276) - Executing identity-insert immediately
2017-04-24 10:07:49,932 DEBUG [qtp350413251-11] spi.SqlStatementLogger (SqlStatementLogger.java:92) - insert into users (password, username) values (?, ?)
2017-04-24 10:07:50,058 DEBUG [qtp350413251-11] id.IdentifierGeneratorHelper (IdentifierGeneratorHelper.java:78) - Natively generated identity: 1
2017-04-24 10:07:50,060 DEBUG [qtp350413251-11] internal.ResourceRegistryStandardImpl (ResourceRegistryStandardImpl.java:104) - HHH000387: ResultSet's statement was not registered
2017-04-24 10:07:50,069 DEBUG [qtp350413251-11] internal.TransactionImpl (TransactionImpl.java:66) - committing
2017-04-24 10:07:50,088 DEBUG [qtp350413251-11] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:132) - Processing flush-time cascades
2017-04-24 10:07:50,090 DEBUG [qtp350413251-11] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:174) - Dirty checking collections
2017-04-24 10:07:50,104 DEBUG [qtp350413251-11] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:106) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2017-04-24 10:07:50,105 DEBUG [qtp350413251-11] internal.AbstractFlushingEventListener (AbstractFlushingEventListener.java:113) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2017-04-24 10:07:50,110 DEBUG [qtp350413251-11] util.EntityPrinter (EntityPrinter.java:102) - Listing entities:
2017-04-24 10:07:50,113 DEBUG [qtp350413251-11] util.EntityPrinter (EntityPrinter.java:109) - com.example.struts2.model.Users{password=admin, id=1, username=admin}
2017-04-24 10:07:50,159 DEBUG [qtp350413251-11] internal.LogicalConnectionManagedImpl (LogicalConnectionManagedImpl.java:154) - Initiating JDBC connection release from afterTransaction
2017-04-24 10:07:50,161 DEBUG [qtp350413251-11] internal.LogicalConnectionManagedImpl (LogicalConnectionManagedImpl.java:154) - Initiating JDBC connection release from afterTransaction
2017-04-24 10:07:54,864 DEBUG [pool-2-thread-1] internal.PooledConnections (PooledConnections.java:51) - Connection pool now considered primed; min-size will be maintained
